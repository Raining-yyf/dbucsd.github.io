%!PS-Adobe-2.0
%%Creator: dvipsk 5.66a Copyright 1986-97 Radical Eye Software (www.radicaleye.com)
%%Title: final.dvi
%%Pages: 12
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: Helvetica-Bold Times-Bold Times-Italic
%%EndComments
%DVIPSCommandLine: dvips final.dvi -o
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2002.02.23:0521
%%BeginProcSet: texc.pro
%!
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]/id ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N
/cp 0 N{rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id
gp get /gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp
add /cp X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add
/gp X adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{
dup 255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1
adv}B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2
idiv S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{dup length product length le{dup length product
exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}
ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false RMat{BDot}
imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1 false
RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform round
exch round exch itransform moveto rulex 0 rlineto 0 ruley neg rlineto
rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail{dup
/delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}B /d{
-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{4 M}B
/w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{p 1 w}
B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p a}B
/bos{/SS save N}B /eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro
%!
% PostScript prologue for pstricks.tex.
% Created 1994/6/23. Source file was pstricks.doc
% Version 0.93a-97 patch 1, 97/11/07
% For use with Rokicki's dvips.
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Atan { /atan load stopped { pop pop 0 } if } def
/Div { dup 0 eq { pop } { div } ifelse } def
/NET { neg exch neg exch T } def
/Pyth { dup mul exch dup mul add sqrt } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def }
def
/PathLength { flattenpath /z 0 def { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
} { /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
/pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
0 } ifelse setdash stroke } def
/DotLine { /b PathLength def /a ED /z ED /y CLW def /z y z add def a 0 gt
{ /b b a div def } { a 0 eq { /b b y sub def } { a -3 eq { /b b y add
def } if } ifelse } ifelse [ 0 b b z Div round Div dup 0 le { pop 1 } if
] a 0 gt { 0 } { y 2 div a -2 gt { neg } if } ifelse setdash 1
setlinecap stroke } def
/LineFill { gsave abs CLW add /a ED a 0 dtransform round exch round exch
2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
def
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop } if
f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/Line { NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub
def n { Lineto } repeat CP 4 2 roll ArrowB L pop pop } if } def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
Lineto pop pop closepath } ifelse } def
/Diamond { /mtrx CM def T rotate /h ED /w ED dup 0 eq { pop } { CLW mul
neg /d ED /a w h Atan def /h d a sin Div h add def /w d a cos Div w add
def } ifelse mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2
div /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
%  Modification Denis GIROU (CNRS/IDRIS - France) <Denis.Girou@idris.fr> - 15 Jan. 1997
% /Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
% pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
% div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
% d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { NArray n 3 lt { n { pop pop } repeat } { BOC /n n 3 sub def
n { NC } repeat EOC } ifelse } def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997
%    { 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end

%%EndProcSet
%%BeginProcSet: pst-dots.pro
%!PS-Adobe-2.0
%%Title: Dot Font for PSTricks
%%Creator: Timothy Van Zandt <tvz@Princeton.EDU>
%%Creation Date: May 7, 1993
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    (P) 0 get /BoldPentagon put
  /Metrics 13 dict def
  Metrics begin
    /Bullet 1000 def
    /Circle 1000 def
    /BoldCircle 1000 def
    /SolidTriangle 1344 def
    /Triangle 1344 def
    /BoldTriangle 1344 def
    /SolidSquare 886 def
    /Square 886 def
    /BoldSquare 886 def
    /SolidPentagon 1093.2 def
    /Pentagon 1093.2 def
    /BoldPentagon 1093.2 def
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle { -550 -550 550 550 } def
    /BoldCircle /Circle load def
    /Bullet /Circle load def
    /Triangle { -571.5 -330 571.5 660 } def
    /BoldTriangle /Triangle load def
    /SolidTriangle /Triangle load def
    /Square { -450 -450 450 450 } def
    /BoldSquare /Square load def
    /SolidSquare /Square load def
    /Pentagon { -546.6 -465 546.6 574.7 } def
    /BoldPentagon /Pentagon load def
    /SolidPentagon /Pentagon load def
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath { 0 0 500 0 360 arc closepath } def
    /Bullet { 500 500 Adjust CirclePath fill } def
    /Circle { 500 500 Adjust CirclePath .9 .9 scale CirclePath eofill } def
    /BoldCircle { 500 500 Adjust CirclePath .8 .8 scale CirclePath eofill } def
    /BoldCircle { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath {
      0  660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath
    } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath {
      -450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
      closepath
    } def
    /SolidSquare { SquarePath fill } def
    /Square { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon { PentagonPath .78 .78 scale PentagonPath eofill } def
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop

%%EndProcSet
%%BeginProcSet: pst-node.pro
%!
% PostScript prologue for pst-node.tex.
% Created 1994/6/7. Source file was pst-node.doc
% Version 0.93a/b-97 patch 1, 97/05/09.
% For use with Rokicki's dvips.
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - 9 May 1997
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end

%%EndProcSet
%%BeginProcSet: 8r.enc
% @@psencodingfile@{
%   author = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry",
%   version = "0.6",
%   date = "22 June 1996",
%   filename = "8r.enc",
%   email = "kb@@mail.tug.org",
%   address = "135 Center Hill Rd. // Plymouth, MA 02360",
%   codetable = "ISO/ASCII",
%   checksum = "119     662    4424",
%   docstring = "Encoding for TrueType or Type 1 fonts to be used with TeX."
% @}
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both ASCII and Windows.
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there down to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin /rf{findfont dup length 1 add dict begin{1 index /FID ne 2
index /UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type /integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics /Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont /setfont cvx]cvx def}def /ObliqueSlant
{dup sin S cos div neg}B /SlantFont{4 index mul add}def /ExtendFont{3 -1
roll mul exch}def /ReEncodeFont{/Encoding exch def}def end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (final.dvi)
@start
%DVIPSBitmapFont: Fa cmsy5 5 1
/Fa 1 49 df<EA0380EA07C0A3EA0F80A313005A121EA2123E123CA212381278A21270A2
5AA20A157D9612>48 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmmi5 5 2
/Fb 2 106 df<ECFF80010713F090381F80F890387C003C01F07F48487F484814804848
130748C7FC4815C0123EA25AA348EC0F80A3ED1F00A2153E153C3978078078397C1FC0F8
393C1861E0391E3063C0001FEB3F802607F07EC7FC3903FFF80438007FF0903800380CEC
3C38EC3FF85D6E5A5D6EC7FC22257C9C2D>81 D<137013F8A213F013E01300A6EA0F80EA
1FC0EA31E01261A2EAC3C01203EA0780A3EA0F001308EA1E18A213301370EA0FE0EA0780
0D1D7D9C16>105 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmr5 5 1
/Fc 1 50 df<1360EA01E0120F12FF12F11201B3A3387FFF80A2111C7B9B1C>49
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd lasy9 9 1
/Fd 1 51 df<003FB712E0B812F0A300F0C9FCB3B2B8FCA42C2C7AAF38>50
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe msbm9 9 1
/Fe 1 79 df<267FFFC0903807FFF0B56C5B6C6D7F260F00709038007E0026078078143C
6C6C6C141C6C6C7E6D7E8001F87F6D6C7E9038DE01E09038CF00F001C71370EC80789038
C3C03C9038C1E01E9038C0F00FEC78070238138091383C03C091381E01E091380F00F091
3807807002031378EDC03C913801E01E913800F00FED78070338139C92383C03DC92381E
01FCED0F00ED07800303137CEEC03C923801E01CED00F01678163C161C161E160FEE079C
EE03DC1601486C15FC486C1400267FFF80147CB5153C6C161CCA120C34347FB22F>78
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmmi6 6 18
/Ff 18 123 df<90B6FC16E0903907C003F0ED00F8494813FC167C167EA249C7127C16FC
A2ED01F8013EEB03F0ED07E0ED1F8090393FFFFE005B90397C003F80ED07C0ED03E04914
F01501A216F8484814F01503A2ED07E04848EB0FC0ED1F80ED3F00000714FEB612F815C0
27227CA12E>66 D<91380FF0039138FFFE06903903F8070E90390FC0019E013FC712FE01
7C147C5B4848143C485A48481438485A121F90C8FC481530123E007E1500A25AA516C0A2
ED0180A2007CEC0300A2003C1406003E5C6C5C6C6C13706C6C5B3903F807802600FFFEC7
FCEB1FF028247CA22C>I<90B6FC16E0903907C003F8ED00FC4948133E161E161FEE0F80
49C7FCA317C0133EA4491580161FA21700495CA2163E5E485A5E4B5A4B5A4848495A4B5A
033EC7FC0007EB01F8B612E092C8FC2A227CA132>I<90B512FCEDFF80903907C00FC0ED
03F090380F800116F81500A290381F0001A3ED03F0013E14E0ED07C0ED1F80ED7E009038
7FFFF815E090387C01F0EC007849137C153C153EA24848137EA448485BEDFE06A20007EC
7E0CB5141849EB3FF0C8EA07E027237CA12E>82 D<131FEBFF8C3801E0DE3803807E3807
007C48133C121E123E003C5B127CA3485BA215401560903801E0C012781303393807E180
381C1CF1390FF87F003807E03C1B177E9522>97 D<EA03E0EA3FC0A21203A2485AA448C7
FCA4EA1E1FEB7FC0381FC1E0EB80F0EA3E0014F8003C137814F85AA438F001F0A3EB03E0
14C0EA7007148038380F00EA3C3CEA1FF8EA07E015247DA21B>I<EB0FE0EB7FF83801F0
3C3803C01C3807803C380F007C121E003E133814005AA35AA400781304140C0038131800
3C1370381F03E03807FF803801FC0016177E951C>I<EC03E0EC3FC0A21403A2EC0780A4
EC0F00A4EB1F1EEBFF9E3801E0DE3803807E3807007C48133C121E123E003C5B127CA348
5BA215401560903801E0C012781303393807E180381C1CF1390FF87F003807E03C1B247E
A220>I<EB1F80EBFFE03803E07038078030EA1F00121E5A007C1360387807C0B51280EB
F80000F8C7FC5AA41408141800781330003813E0381E07C0380FFF00EA03F815177D951D
>I<140FEC3FC0EC71E014E3A2010113C0ECE180ECE000495AA5495AA290B5FC485B3800
0780A249C7FCA5131EA65BA55BA41370EA38F0EA78E012F8EAF9C0EA7180007FC8FC121E
1B2F7CA31E>I<1338137CA2137813701300A7EA0780EA1FC0EA38E0EA70F01260EAC0E0
12C1A2EA03C0A3EA0780A2EA0F0013041306EA1E0CA21318121CEA1E30EA0FE0EA07C00F
237DA116>105 D<13F8EA0FF0A21200A2485AA4485AA43807803E147FEB81C3EB830738
0F060F495A1318EB700ED81FC0C7FC7F13FCEA1E7EEA3C0F80EB0781158039780F0300A2
1406130700F0138CEB03F8386000F019247CA221>107 D<000F017E13FC3A1F81FF83FF
3B31C383C707803A61EE03CC039026EC01F813C0D8C1F813F013F001E013E00003903903
C0078013C0A2EE0F003907800780A2EE1E041706270F000F00130C163C1718A2001E011E
EB1C70EE1FE0000C010CEB07802F177D9536>109 D<000F13FC381F83FF3931C7078038
61EC0301F813C0EAC1F0A213E03903C00780A3EC0F00EA0780A2EC1E041506D80F00130C
143C1518A2001EEB1C70EC1FE0000CEB07801F177D9526>I<3801E01F3903F07FC03906
39C1E0390C3F80F0EB3E00001814F8013C137815F8C65AA49038F001F0A3EC03E0D801E0
13C0EBF00715809038F80F003803DC3CEBCFF8EBC7E001C0C7FC485AA448C8FCA2EA7FF0
12FF1D20809520>112 D<380F01F0381F87F83831CE1CEA61F8EBF03C00C1137C13E014
383803C000A4485AA448C7FCA4121EA2120C16177D951D>114 D<EA0780381FE0033938
F0078012300060EB0F0012C0A2EAC1E00001131EEA03C0A348485AA45CA214F813813803
C3F0EA01FFEA00FC1300495A121E383E03C05CD83C07C7FCEA300EEA383CEA1FF8EA07C0
19217D9520>121 D<EB780CEA01FC3803FE183807FF30EB07E0EA0C01EB00C038000180
EB0700130C5B5B5B5B380180083803000C00061318000F1338381FE0F0383CFFE038707F
C038603F8038C01E0016177D951E>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmr6 6 10
/Fg 10 64 df<B71280A2007EC7123F6CEC07C06D13036C6C13016C7E000714007F6C6C
14E06C6C14601200017E1400137F6D7E6D7E130F13075C91C8FC130E4914605B4914E049
14C0485A4848130148C7FC000E140348140748143F007FB61280B7FCA223227CA12B>6
D<127812FCA81278AB1230A61200A4123012FCA4123006247AA312>33
D<130C1338137013E0EA01C0EA038013005A120EA25AA25AA312781270A312F0AB1270A3
12781238A37EA27EA27E7E1380EA01C0EA00E013701338130C0E317AA418>40
D<12C012707E7E7E7E7E1380EA01C0A2EA00E0A21370A313781338A3133CAB1338A31378
1370A313E0A2EA01C0A2EA038013005A120E5A5A5A12C00E317CA418>I<1438B2B712FE
A3C70038C7FCB227277C9F2F>43 D<13FF000313C0380781E0380F00F0001E137848133C
A248131EA400F8131FAD0078131EA2007C133E003C133CA26C13786C13F0380781E03803
FFC0C6130018227DA01E>48 D<137013F0120312FF12FC1200B3A7487E387FFFE0A21321
7BA01E>I<EA01FC3807FF80381C0FC0383003E0386001F0EB00F812F86C13FCA2147C12
78003013FCC7FC14F8A2EB01F0EB03E014C0EB0780EB0F00131E13385B5B3801C00CEA03
80380600185A5A383FFFF85AB512F0A216217CA01E>I<13FF000313C0380F03E0381C00
F014F8003E13FC147CA2121E000C13FCC712F8A2EB01F0EB03E0EB07C0EBFF00A2EB03E0
EB00F01478147C143E143F1230127812FCA2143E48137E0060137C003813F8381E03F038
0FFFC00001130018227DA01E>I<EA03FE380FFF80383C03E0387001F0EA600000F013F8
7EA21270382001F01200EB03E0EB07C0EB0F00131E131C5B1330A213701360A690C7FCA4
1360EA01F8A4EA006015247CA31D>63 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmsy9 9 19
/Fh 19 107 df<123C127E12FFA4127E123C08087A9615>1 D<0060153000F815F86C14
01007EEC03F06CEC07E06C6CEB0FC06C6CEB1F806C6CEB3F006C6C137E6C6C5B6C6C485A
90387E03F06D485A90381F8FC090380FDF806DB4C7FC6D5A6D5AA2497E497E90380FDF80
90381F8FC090383F07E090387E03F0496C7E48486C7E4848137E48487F4848EB1F804848
EB0FC048C7EA07E0007EEC03F048EC01F848140000601530252475A43C>I<EB1FC0EBFF
F8487F000713FF4814804814C04814E0A24814F0A2B612F8AA6C14F0A26C14E0A26C14C0
6C14806C1400000113FC6C5BEB1FC01D1E7CA126>15 D<007FB812C0B912E0A26C17C0CC
FCAC007FB812C0B912E0A26C17C0CCFCAC007FB812C0B912E0A26C17C033247CA43C>17
D<171C177EEE01FEEE07FCEE1FF0EE7FC0923801FF00ED07FCED1FF0ED7FC04A48C7FCEC
07FCEC1FF0EC7FC04948C8FCEB07FCEB1FF0EB7FC04848C9FCEA07FCEA1FF0EA7FC048CA
FCA2EA7FC0EA1FF0EA07FCEA01FF38007FC0EB1FF0EB07FCEB01FF9038007FC0EC1FF0EC
07FCEC01FF9138007FC0ED1FF0ED07FCED01FF9238007FC0EE1FF0EE07FCEE01FEEE007E
171C1700AC007FB712FCB812FEA26C16FC2F3E7AB03C>20 D<127012FCB4FCEA7FC0EA1F
F0EA07FCEA01FF38007FC0EB1FF0EB07FCEB01FF9038007FC0EC1FF0EC07FCEC01FF9138
007FC0ED1FF0ED07FCED01FF9238007FC0EE1FF0EE07FCEE01FEA2EE07FCEE1FF0EE7FC0
923801FF00ED07FCED1FF0ED7FC04A48C7FCEC07FCEC1FF0EC7FC04948C8FCEB07FCEB1F
F0EB7FC04848C9FCEA07FCEA1FF0EA7FC048CAFC12FC1270CBFCAC007FB712FCB812FEA2
6C16FC2F3E7AB03C>I<023FB512FC49B612FE1307011F15FCD93FE0C8FC01FFC9FCEA01
FCEA03F0485A485A5B48CAFC5A123E5AA21278A212F8A25AA67EA21278A2127CA27E123F
7E6C7E7F6C7E6C7EEA01FC6CB4FCEB3FE06DB612FC010715FE1301D9003F14FC2F2E7AA9
3C>26 D<170C171EA3173EA2177CA217F8A2EE01F01603EE07E0EE0FC0EE3F80EE7F00ED
01FCED0FF8ED7FE091380FFFC00107B5C7FC007FB512F8B612C0A26C14F8D8000713FFD9
000F13C09138007FE0ED0FF8ED01FCED007FEE3F80EE0FC0EE07E0EE03F01601EE00F8A2
177CA2173EA2171EA3170C2F2E7AA83C>30 D<1807A285180385727E727E1978197C8585
007FBA12C0BB12F0A26C19C0CCEA1F00193E611978614E5A4E5A61180796C7FCA2441A7C
9F4D>33 D<91383FFFF849B512FC1307011F14F8D93FE0C7FC01FFC8FCEA01FCEA03F048
5A485A5B48C9FC5A123E5AA21278A212F8A25AB712F816FCA216F800F0C9FC7EA21278A2
127CA27E123F7E6C7E7F6C7E6C7EEA01FC6CB4FCEB3FE06DB512F8010714FC1301D9003F
13F8262E7AA933>50 D<1403EC0780A2140FEB0FEF90383FFF00EBF83F3801E01FD803C0
1380D8078013C0D80F0013E0143F4814F0001E133C003E14F8147CA248EB787CA214F8A2
14F000FC147E1301A214E0A21303A214C0A21307A21480A2130FA21400A25BA2131E007C
147C133EA2133C007E14FCD83E7C13F8A21378001E14F0381FF801000F14E0EBF0030007
14C00003EB07800001EB0F00EBF83EEBFFFC3803EFE001E0C7FC5BA26C5A1F407DB926>
59 D<EE3F80923801FFC0030713E0151F4B13F0EDF03F913801E01F1403913807C00FEC
0F80141F030013E04A1480027E140016084A90C7FCA213015C1303A25C1307A3495AA35C
131FA3495AA449C9FCA3137E13FE5B17024848151E173C484815FCD9FFF0EB01F84801FF
14F09238F003E04802FF13C0EEFF80D81E07ECFE0048C66C5B0070010713F000C0903800
7F802F377EB435>76 D<0060ED018000F0ED03C0B3AF6C1507A2007CED0F80A26CED1F00
003F5D6C6C147ED80FE0495AD807F8EB07F83A01FF807FE06C90B55A013F91C7FC010F13
FC010013C02A307CAD33>91 D<ECFFC0010F13FC013F13FF90B612C0489038807FE03A07
F80007F8D80FE0EB01FCD81F80EB007E48C87E003E8148ED0F80A248ED07C0A2481503B3
AF0060ED01802A307CAD33>I<EC07E0143FECFE00EB03F8495A495A5C131F5CB3A5133F
91C7FC137E5BEA03F8EA7FE048C8FCEA7FE0EA03F8C67E137E7F80131FB3A580130F806D
7E6D7EEB00FEEC3FE014071B4B7BB726>102 D<12FCEAFFC0EA07F0EA01FC6C7E137F7F
80131FB3A580130F6D7E6D7EEB01FC9038007FC0EC1FE0EC7FC0903801FC00EB03F0495A
495A131F5CB3A5133F91C7FC5B13FE485AEA07F0EAFFC000FCC8FC1B4B7BB726>I<1303
EB0780130FA214005BA2131E133EA25BA2137813F8A25B1201A2485AA25B1207A25B120F
A290C7FC5AA2123EA2123C127CA2127812F8A41278127CA2123C123EA27EA27E7FA21207
7FA212037FA26C7EA212007FA21378137CA27FA2131E131FA27F1480A21307EB0300114A
78B71E>I<126012F07EA21278127CA2123C123EA27EA27E7FA212077FA26C7EA212017F
A212007FA21378137CA27FA2131E131FA27F1480A414005BA2131E133EA25BA2137813F8
A25B1201A25B1203A2485AA25B120FA290C7FC5AA2123EA2123C127CA2127812F8A25A12
60114A7CB71E>I<126012F0B3B3B3B31260044B78B715>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi cmmi9 9 41
/Fi 41 123 df<147F903803FFE090380FC1F090383F007C017C017E136049133E484801
3F13E048486D13C000071580484814811780485A003F15C390C71400ED0FC74815C6007E
15CE16DC16D816F8485D5E5E127CA3151F6C143F03FF13C06CEB01C73A0F800787E13B07
C07E03E3803B01FFF801FF003A007F80007C2B227EA031>11 D<ED07F0ED1FFEED781F91
3901E00F809139038007C0DA070013E0020E13035C5C5C4A13075C13015C0103140F91C7
13C05B0106EC1F80A2010EEC3F00010C147E913801FE7C90391C03FFF89039180703F0ED
FFF8913801FE7C0138C77E1330163F8213701360A301E05C5BA300015D167E5B16FE0003
5D7F4B5A4B5A486C5CD80660495A0170495A6D49C7FCD80E1C137E390C0F01F8903803FF
E0010090C8FC001C90C9FC1218A312381230A312701260A312E0A22B447FB42B>I<9038
01FF80130F133F01FFC7FCEA01F8485A485A485A485A48C8FCA2127E387FFFF880B5FC00
FCC8FCA8127CA37EA26C1303380F800F3803E07C3801FFF038003F8019217D9F1F>15
D<1307D90FC01370011F14F815011480A2013F1303A202005BA2491307A2017E5CA201FE
130FA2495CA20001141FA2495C1780000391383F81C01780491401A20007EC7F0317006D
EBFE07913801FF063A0FFC039F0E9039FE0F1F1C9039DFFC07F89039C7F001E0D81FC0C9
FCA25BA2123FA290CAFCA25AA2127EA212FEA25A12382A327FA02E>22
D<123C127E12FFA4127E123C08087A8715>58 D<123C127EB4FCA21380A2127F123D1201
A412031300A25A1206120E120C121C5A5A126009177A8715>I<171C177EEE01FEEE07FC
EE1FF0EE7FC0923801FF00ED07FCED1FF0ED7FC04A48C7FCEC07FCEC1FF0EC7FC04948C8
FCEB07FCEB1FF0EB7FC04848C9FCEA07FCEA1FF0EA7FC048CAFCA2EA7FC0EA1FF0EA07FC
EA01FF38007FC0EB1FF0EB07FCEB01FF9038007FC0EC1FF0EC07FCEC01FF9138007FC0ED
1FF0ED07FCED01FF9238007FC0EE1FF0EE07FCEE01FEEE007E171C2F2E7AA93C>I<1270
12FCB4FCEA7FC0EA1FF0EA07FCEA01FF38007FC0EB1FF0EB07FCEB01FF9038007FC0EC1F
F0EC07FCEC01FF9138007FC0ED1FF0ED07FCED01FF9238007FC0EE1FF0EE07FCEE01FEA2
EE07FCEE1FF0EE7FC0923801FF00ED07FCED1FF0ED7FC04A48C7FCEC07FCEC1FF0EC7FC0
4948C8FCEB07FCEB1FF0EB7FC04848C9FCEA07FCEA1FF0EA7FC048CAFC12FC12702F2E7A
A93C>62 D<16035E5EA24C7EA2163F167FA216FFA2ED01BFED033FA203067F161F150C15
18A21530A2156015C083EC01800203130F15001406A25C141C14184A80A2027FB5FC91B6
FCA2903901800007A249C7FC5B13064981A24914035BA213705B1201D807F04A7EB549B5
12F0A25B34367DB53A>65 D<010FB612F017FEEFFF80903B003FC0003FE0EF0FF017074B
14F81703027F15FCA292C7FCA25C18F84A140718F00101150F18E04AEC1FC0EF3F800103
ED7F00EE01FE4AEB07F891B612E04915809139F8001FF04AEB03FCEE00FE010F157FA24A
EC3F80A2011F16C0A25CA2133F18804A147FA2017FEDFF005F91C712014C5A494A5A4C5A
49EC3FE00001913801FF80B748C7FC16F816C036337DB23A>I<DB0FF81318DB7FFF1338
0203B5EAC078913A0FFC03E0F091393FC000F102FFC7123BD901FC141FD907F815E04948
140F49481407EB3F80017F16C049C81203485A5B00031780485A485AA248481600A2485A
94C7FC127F5BA312FF90CBFCA45AA21738A21730A21770176017E0007F4B5A5F16036C6C
4AC7FC160E6C6C5C6C6C5C6C6C5C6C6C495A6C6CEB07C02700FF803FC8FC90383FFFFC01
0F13F00101138035377CB437>I<010FB612F817FF18C0903B003FC0003FE0EF0FF0EF03
F84B6D7E717E027F157F8492C81380A24A151F19C05CA21301A25CA21303183F5CA21307
19804A157FA2130F19004A5D60011F1501605C4D5A013F5E17074A4A5A60017F4B5A4DC7
FC91C8127E4C5A494A5AEE0FF049EC3FC000014AB4C8FCB712FC16F093C9FC3A337DB23F
>I<DB0FF81330DBFFFE137002039038FF80F0913A0FF807C1E091393FC000E302FFC712
77D901FC143FD907F8EC1FC0EB0FE04948140F495A49C81380491507485A485A49160012
07485AA248481506A2485A94C7FC127F5BA312FF90CBFCA448021FB51280A39239000FF0
005FA2161FA25F7E6C153FA26C6C5D167F6C7E6C6C4AC7FC6D5B6C6CEB039FD801FCEB0F
0F3A00FF807E0E90393FFFF806010F01E0C8FC010190C9FC34377CB43C>71
D<010FB5D8C03FB5FCA39026003FE0C713804B1500A24B5CA2027F14016092C7FCA24A14
03605CA201011507605CA20103150F605C91B7FC5B6002F0C7121FA2010F153F605CA201
1F157F95C7FC5CA2013F5D5F5CA2017F14015F91C7FCA24914035F5B00011507B5D8FC03
B512F0A340337DB240>I<ED07FC92387FFFC0913901F807F091390FE001F891391F8000
7E027EC77E4AEC1F80EB03F04948EC0FC04948EC07E0495A013F16F049C8FC01FE150349
16F81201485AA2485AA2120F5B001F16075B123FA34848ED0FF0A3EF1FE0A290C9FC48EE
3FC0A21880177F6C17005F5F4C5A4C5A6C7E4C5A001F4B5A6D4A5A000F4B5A6D027EC7FC
00075D6C6C495A6C6CEB07E0D800FEEB1F8090263F80FEC8FC90380FFFF8010113803537
7DB43A>79 D<ED07FC92387FFFC0913901F807F091390FE001F891391F80007E027EC77E
4AEC1F80EB03F8D907E0EC0FC0494815E0011F1507494815F049C8FC13FEEF03F8485A12
035B12075B120F491507121FA2485AA34848ED0FF0A318E0171F90C9FC4817C0173F1880
177F6C17005F5F4C5A5F6C9038078003903A801FE007F0001F903978700FE09139E0381F
C03B0FC0C0183F8001C1027EC7FC3A07E1801CFCD803F1EB1DF8D801F9EB1FE02600FFC0
1380013F9038FE000C90380FFFFC0101019E131C90C7001E13181738031F13785F1683EE
FFE0A25F5FA26F48C7FC6F5AED01F035447DB43D>81 D<010FB67E17F817FE903A003FC0
01FF9338003FC0EF1FE04B130FEF07F0147FA292C713F8A25CEF0FF05CA20101ED1FE018
C04AEC3F8018000103157E4C5A4AEB07F0EE3FC049B500FEC7FC16F89138F0007E82010F
6E7E707E5C83131FA25CA2013F141FA25CA2017F143F5F91C7FC180649160E180C49161C
00011718B500FC011F133893380FE070040713E0C93803FFC09338007F0037357DB23A>
I<03FF13180207EBE038021FEBF87891397F00FCF802FCEB1FF0D901F0130F4948130749
481303494814E0A249C71201A2013E15C0A3137E1780A2017F91C7FC8080EB3FF014FF15
F06D13FE6D6D7E6D806D80010080020F7F1400150F6F7E150315011500A2120CA2001C5D
1218A2150100385D003C14035E4B5A007E4A5A007F141F6D49C7FCD87BE0137C39F9FC03
F839F07FFFE0D8E01F138026C003FEC8FC2D377CB42F>I<0003B812F05A18E0903AF000
7F000FD80F8049130390C71401000E5C48EE00C01401121800384A1301A2003001031580
127000605CA20207140300E01700C74990C7FCA2140FA25DA2141FA25DA2143FA25DA214
7FA292C9FCA25CA25CA21301A25CA21303A25C497E001FB512FE5AA234337FB22D>I<B5
00F0903801FFFC5EA2D803FEC8EA3F8049ED1E00171C5F00011630177017605F16016D5D
4CC7FC120016065EA25E6D143816306D5C16E05E4B5AA24BC8FCEC8006133F5D5DA25D15
70ECC0605DEB1FC15D02C3C9FCA214C614ECA2EB0FF8A25C5CA25C5C130791CAFC130636
357CB22D>86 D<EB01F0EB07FC90381F0E3890387C07FCEBF8033801F001EA03E000075C
13C0120F381F80035DEA3F00A21407485C127EA2140F00FE5C5A1640021F13E0ED80C0A2
127CEC3F811680003CEB7F03003E9038FF8300391E03CF87390F070F8E3907FE03FC3901
F800F023227EA029>97 D<133FEA1FFFA25B1200A35BA21201A25BA21203A25BA21207A2
EBE0F8EBE3FF390FEF07809038FC03C001F813E0EBF001D81FE013F013C0138015F8123F
A21300A248130315F0127EA2140700FE14E05AA2EC0FC0A2EC1F80007C14005C147E003C
137C003E5B381E01F0380F07C06CB4C7FCEA00FC1D357EB321>I<147F903803FFC09038
0FC0F090383F0038137C4913F83801F0013803E0031207EA0FC0EC01F04848C7FC123F90
C8FCA25A127EA45AA3127C150C151C15386C147015E06CEB03C0390F800F003807C07E38
01FFF038007F801E227EA021>I<ED03F0EC01FFA216E0EC000FA316C0A2151FA21680A2
153FA21600A25DA2903801F07EEB07FC90381F0EFEEB7C07496C5A3801F001EA03E01207
01C05B120F381F8003A2D83F005BA214075A007E5CA2140F12FE485C1640021F13E016C0
1580127CEC3F811680003CEB7F03003E9038FF8300391E03CF87390F070F8E3907FE03FC
3901F800F024357EB328>I<14FE903807FF8090381F03C090387C01E03801F800485A48
5A485A485A1401D83F0013C01403007EEB0F80ECFE00387FFFF8B5128000FCC8FCA55AA3
15186C1438007C147015E06CEB01C0EC07806CEB1E00380F80FC3803FFE0C690C7FC1D22
7DA024>I<ED0F80ED3FE0EDF870913801F0F815E31403140716F0A291380FC1C0EDC000
A3141F5DA5143F92C7FC013FB51280A3D9007FC7FC147EA414FE5CA513015CA413035CA4
13075CA5495AA45C131FA291C8FC121C127F133EA2EAFE3C5B1278EA70F0EA3FC0EA0F80
25457CB425>I<EC1F80EC7FE0903901F071C0903907C03FE090380F801F90381F000F5B
137E017C14C013FC4848131FA248481480A2153F1207491400A25DA249137EA215FEA25D
A214013803E0034A5A3801F01F3800F83BEB3FF390380FC3F0EB00031407A25DA2140F00
1C5C127F4A5A143F00FE91C7FC147E387801FC383C03F0381FFFC0D803FEC8FC23317FA0
25>I<EB01C0EB07E014F0130F14E01307EB038090C7FCAA13F0EA03FCEA0F1EEA0C1F12
1C003813801230EA703F00601300A25BEAE07E1240EA00FE5B12015BA212035B1207EBE0
201470000F136013C0A2001F13E0EB80C01381380F83801400EA078FEA03FCEA00F01433
7EB11A>105 D<EB07E0EA03FFA25CEA001FA35CA3133F91C8FCA35B137EA313FE49131F
ED7F80913801E1C0000190380383E09038F80F0F141C14380003017013C0EBF0E0ED0700
D9F3C0C7FCD807F7C8FC13EE13FCA2380FFFC0EBCFF0EBC1FC13C0001F137E13801680ED
01C0003F15801300A21503481500007E5CEC3E06150E00FE6D5A48EB0FF80038EB03E023
357DB328>107 D<D801E013FC3A07F807FF803A0E3E1F07C0001C01387F39183F700326
381FE07F38303FC000701380126014001507D8E07F5CEA407E1200150F01FE5C5B151F5E
120149133FEE0080EE01C00003027F138049137E160303FE130000074A5A491406ED7C0E
5E000FEC3C3849EB1FF0D80380EB07C02A227EA02E>110 D<011E133F90397F80FFC090
39E3E1C1E03A01C3E780F0903983FE00F8260381FC13784948137C120700065B167E1307
120E00045B1200010F14FE16FC5CA2011F130116F81480A2013FEB03F0A291380007E016
C049130F1680ED1F00EC803E496C5A9038FEE1F09038FC7FC0021FC7FC000190C8FCA25B
A21203A25BA21207A25BB57EA3273082A027>112 D<903801F803903807FE0790381F07
1F90387C03BF9038F801BED801F013FE00031300485A4913FC120F485A1401D83F0013F8
A3481303007E14F0A300FE13074814E0A3140F15C0127C141F143F003CEB7F80003E13FF
381E01DF380F07BF3907FE3F00EA00F813005C147EA314FE5CA21301A25C90387FFFE090
B5FCA220307EA022>I<3901E003E03907F80FF8390E3E3C1C001CEB703E39183FE0FE38
381FC038303F80007014FC0060130015701500EAE07FEA407E1200A213FE5BA312015BA3
12035BA312075BA3120F5BEA03801F227EA023>I<EB01FCEB0FFF90383E03C090387800
E04913603901E001E014030003130713C013E0EC03806DC7FC13FF14F014FC6C7F6C7F6D
1380130F9038007FC0141F140F007E130700FE1480A3EC0F005A00C0131E6C5B00705B38
3C01F0380FFFC0D803FEC7FC1B227CA024>I<EB01C0EB07E0A3130FA214C0A2131FA214
80A2133FA21400387FFFFEA2B5FC38007E00A213FEA25BA21201A25BA21203A25BA21207
A25B1408000F131C141813C0143814301470EB8060EBC0E03807C1C0EBC3803801FF00EA
007C17307FAE1C>I<13F8D803FEEB01C0D8070FEB03E0000EEB8007121C001813C00038
140FEA301F0070018013C01260013F131F00E0130000401580C65A017E133F13FE491400
A25D120149137E1602EDFE0716064913FCA2160E0201130C9039F803F81CEDFC18000090
380F7C38D97C1C137090393FF81FE0903907E0078028227EA02C>I<01F8130ED803FE13
1FD8070FEB3F80000E1380121C0018EBC01F0038140FD8301F1307007013800060140313
3F00E0010013001240C65A017E5B01FE13065BA2150E0001140C5B151C15181538491330
1570156015E06D485A0000495A6D48C7FCEB7E1EEB1FFCEB07E021227EA025>I<01F815
07D803FE903903800F80D8070F903907C01FC0000EEB800F121C001801C0140F0038021F
1307D8301FEC80030070138000601601013F133F00E00100158000401500C65A017E4913
0301FE160049137EA203FE5B00011606495B170E170CA24949131C171817386D486C5B17
600000010314E0903AFC077E01C0903A7E0E3F078090271FFC0FFEC7FC903903F003F832
227EA037>I<90391F801F8090397FE07FE09039E0F0E0703A01C0F9C0F83903807D8338
07007F000E1403000C15F0001C137E0018EC01C002FEC7FC00385B1210C7FC13015CA313
03A25C1640010714E016C0001C5B007E1401010F148000FE1403011FEB0700011B130E39
F839F01C397070F878393FE07FE0390F801F8025227EA02C>I<13F8D803FEEB01C0D807
0FEB03E0000EEB8007121C001813C00038140FD8301F14C0007013801260013F131F00E0
010013801240C65A017E133F01FE14005BA25D0001147E5BA215FE5D5BA214015DEBF803
A20000130F90387C1FF0EB3FFBEB07E3EB00075DA20007130FD81F805B003F495AA24AC7
FCEB007E003E137C00385B381803F0381E07C0D807FFC8FCEA01F823317EA026>I<9038
07C00390381FE00790383FF00690387FF80E9038FFFC1C48EBFE789038E03FF038038001
90C712E0EC01C0C7EA0380EC0700140E143C14705C495A495A49C7FC130E133C0170130C
49131C484813184848133848C71278D80EE013F0380FFE03391F3FFFE0D83C1F13C0D870
0F1380D86007130038E003FC38C000F020227DA024>I E
%EndDVIPSBitmapFont
/Fj 134[41 1[61 1[46 25 36 36 1[46 46 46 66 25 41 1[25
46 46 25 41 46 41 46 46 10[56 1[51 46 56 13[66 61 8[30
8[46 46 1[23 43[46 2[{TeXBase1Encoding ReEncodeFont}32
91.3242 /Times-Italic rf
%DVIPSBitmapFont: Fk cmti9 9 54
/Fk 54 123 df<DB07F8133EDB1FFFEBFF80923A7C0783E3C0913B01F803C3C1E09239E0
0FC7C70203ECCF87EC07C0058F13C09339071F038091260F800090C7FCA25F021F143E92
C7FCA3177E4A147C143EA3011FB712FCA260D9007CC700F8C7FCA3160102FC5C5CA31603
01015D5CA3160701035D5CA40107140F5F5CA3010F141F94C8FC5CA2011F5C163E91C7FC
A2167E49147C133E16780038011C13F8387E3C3F017C495A26FE787F5B00FC90387E03C0
3AF8F03C0780D871E0011FC9FC393FC01FFC390F0003F03B4582B42F>11
D<923803FF80031F13F092387F00F803F8133C4A48133E4A48137E17FE4A5A17FC4A4813
381700A2141F92C8FCA45C143EA3011FB612E0A217C09039007C0007A2160F178014FC5C
161F1700A213014A5B163EA30103147E4A137CA21718EEFC1C0107ECF83C4A1438A31770
010F14F04A14F0EEF8E01679EE3FC0011FEC0F0091C9FCA35B133EA21238EA7E3C137CEA
FE7812FC485AEA71E0EA3FC0000FCAFC2F4582B42B>I<EA0380EA0FE0121FA5EA076012
0013E013C0A2120113801203EA07001206120E5A5A5A5A5A0B176FB318>39
D<153015F0EC01E0EC0380EC0700141E5C5C5CA2495A495A495A130F91C7FC131E133E13
3C137C5B5B12015B1203A2485AA25B120FA290C8FC5AA2121E123EA3123C127CA31278A2
12F8A35AAD12701278A31238123CA2121C121E120E7EA26C7E6C7E12001C4A76B71F>I<
14301438143C141C80140F8015801403A215C01401A215E0A6EC00F0A31401A515E0A414
03A315C01407A31580140FA315005CA2141E143E143C147CA25CA25C13015C495A13075C
130F91C7FC131E5BA25B5B485A485A485A48C8FC121E5A5A12E05A1C4A7EB71F>I<1430
14785CA35CA200061418390F01C07C01C113FC9038E1C3F83907F187E03901F99F803900
7FFE00EB3FF0EB0FC0A2EB3FF048B47E3807E67E391F863F80397F0E1FC000FC130F00F8
130339601C0180000090C7FCA2133CA35B13301E2072B727>I<EA0380EA0FE0121FA5EA
0760120013E013C0A2120113801203EA07001206120E5A5A5A5A5A0B177A8718>44
D<B51280A46C1300110579911B>I<121C127F12FFA412FE12380808778718>I<EC0FE0EC
3FF8ECF03E903803C01F49487ED90F001380011EEB07C0131C5BD9786013E0EB7070EBF0
3013E0120113C0EC700F0003016013C0138014E0903881C01F028013800183133F90398F
007F00D801FC137E6C485B90380001F84A5A4A5A4A5A4AC7FC147E14F8EB03E0EB0FC049
C8FC133C13F84848EB0380485A4913074848140048C75A121E001C141E003F143E01F85B
397CFF81F839781FFFF0487ED8E00313C06D5BD9007EC7FC23347AB127>50
D<150E151FA2153F153EA3157E157CA215FC15F8A2140115F0A2EC03E0A3EC07C0A2EC0F
80A2EC1F00A2143EA25C147814F85C1301903803E0E0ECC1F0EB0781EB0F83EC03E0131E
133CEB7C0701F813C0EA01F0EA03E03807C00FD80F801380EA1FFE383FFFCF48EBFF82D8
F00313FF3860003FC7EA1FF8EC3F00143EA3147E147CA314FC5CA4146020417DB127>52
D<1370EA01FC1203A413F8EA00E01300B0121C127F5AA45A12380E20779F18>58
D<130EEB3F80137FA41400131C90C7FCB0EA0380EA0FC0487EA45B1207120012015BA212
0390C7FC5A1206120E5A5A5A126012E05A112F7A9F18>I<161C163CA2167C16FCA21501
821503A2ED077E150F150E151CA21538A21570A215E0140115C0EC0380167F4A487EA214
0E141E141C5CA25CA25C91B6FC5B5B913880003F49C7FC1780010E141FA25B133C133813
78137013F0485A1203D80FF0EC3FC0B5903807FFFE5D5B2F367BB539>65
D<DB1FF013C09238FFFC010203EBFF03913A0FF00F878091393F8003CF9139FE0001EF49
48EB00FFD903F01500D90FE080495A49488091C8123E137E13FE485A4848153CA2485AA2
48481538A2485A94C7FC123F5BA3127F90CBFCA412FEA2EE03C0A25F127E160794C7FC5E
160E007F151E6C5D5E6C6C147016F06C6C495A6C6CEB07C06C6C49C8FC6C6C133E6CB413
FC90387FFFF0011F13C0D903FEC9FC323775B437>67 D<010FB612C017F017FC903A003F
8001FEEE007FEF1F8092C7EA0FC0EF07E05CEF03F0147E170102FE15F8A25CA21301A25C
A2130317035CA2130718F04A1407A2130F18E04A140F18C0011F151F18805CEF3F00133F
177E91C85AA2494A5A4C5A017E4A5A4C5A01FE4A5A047EC7FC49495A0001EC0FF8B712E0
93C8FC15F835337BB23A>I<010FB712E0A218C0903A003F80003F170F170792C7FC1703
5C1880147EA214FEA24A1338A20101EC7807047013004A91C7FC16F013034B5AECF00391
B5FC5B5EECE0071503130F5E14C0170E011F0107131EEE001C0280143C92C71238133F17
7891C8127017F0495D1601017E14034C5A13FEEE1F8049143F0001DA03FFC7FCB8FCA25E
33337BB234>I<010FB712C0A21880903A003F80007F171F170F92C7FC17075C1800147E
A214FEA25C16380101EC780FEE700E4A91C7FCA2010314F05EECF001150749B5FCA25EEC
E007010F13035E14C0A2011F130793C8FC1480A2013F90C9FCA291CAFCA25BA2137EA213
FEA25B1201B512FCA332337BB232>I<92391FE001809238FFF8030207EBFE07913A1FF0
1F0F0091393F80079F9139FE0003DFD901F86DB4FCD907F05C49481300495A4948147E49
C8127C137E13FE485A48481578A2485AA248481570A2485A94C7FC123F5BA3127F90CBFC
A400FE91383FFFFCA39238003F8094C7FCA2007E5DA2167EA2007F15FE7E5E6C6C1301A2
6C6C495A6D13076C6CEB0F786C6C133E3A00FF01FC3090387FFFF0011F01C0C8FCD903FE
C9FC313775B43B>I<010FB51280A39039003FC0005DA292C7FCA25CA2147EA214FEA25C
A21301A25CA21303A25CA21307A25CA2130FA25CA2131FA25CA2133FA291C8FCA25BA213
7EA213FEA25B1201B512F8A321337BB21E>73 D<91387FFFFCA39138007F00A3157EA215
FE5DA314015DA314035DA314075DA3140F5DA3141F5DA3143F92C7FCA35C147EA2121C00
7E13FE00FE5BA2130100FC5BEAF80300E05B495A6C485A38701F80D83C3FC8FCEA1FFCEA
07E0263578B228>I<010FB512C0A39026003FC0C7FC5DA292C8FCA25CA2147EA214FEA2
5CA21301A25CA21303A25CA21307A25CA2130FA25CEE01C0011F140317805C1607013F15
005E91C7FC161E5B163E017E143C167C01FE5C15034913070001EC3FF0B7FCA25E2A337B
B230>76 D<90260FFFC0ED7FFE19FF6F16FCD9003F4B1300611803023BED077CA2027BED
0EFC610273151C1838DAF1F01439F071F014E118E10101ED01C36102C1EC0383EF070301
031607050E5BEC80F8171C0107ED380F6102001470A249EDE01FDC01C090C7FC130EEE03
80011E017C5C933807003E011C140EA2013C4A137E187C01385C5E017816FC6F485B1370
ED3FC001F0EC80016000011500D807F81503B526C03E01B512E0153CDA801C5D47337BB2
45>I<ED1FE0913801FFFC913807E03F91391F800FC091393E0003E002F8EB01F0495A49
48EB00F8494814FC4948147C49C8127E133E017E153E49153F485AA2485A12075B120F5B
121F177F5B123FA348C912FEA4EE01FC12FEEE03F8A217F0160717E0160F007E16C0EE1F
80A2EE3F006C157E5E5E6C6C495A000F4A5A6D495A0007EC1F806C6C013EC7FCD801F813
FC39007E07F090383FFF80D907FCC8FC303775B43B>79 D<010FB67E17F083903A003F80
03FCEE007E8392C71380171F5C18C0147EA214FEEF3F805CA2010116005F4A147E5F1303
4C5A4AEB07F0EE0FC00107EC7F8091B500FEC7FC16F002E0C9FC130FA25CA2131FA25CA2
133FA291CAFCA25BA2137EA213FEA25B1201B512F8A25C32337BB234>I<010FB512FEEE
FFC017F0903A003F8007F8EE01FCEE007E92C7127F835C1880147EA214FEEF7F005CA201
0115FE5F4A13015F01034A5AEE0FC04A495A04FEC7FC49B512F016C09138E003E0ED01F8
010F1300167C4A137EA2131FA25CA2013F14FEA291C7FCA24913015E137EEF01C001FE15
0318805B00011607B5D8F8001400EEFE0E4AEB7E1CC9EA1FF8EE07E032357BB238>82
D<913901FC018091380FFF03023F13C791387E07EF903A01F801FF0049487E49487F5C49
48133E131F91C7FC5B013E143CA3137E1638A293C7FC137FA26D7E14E014FE90381FFFE0
6D13F86D7F6D7F9038007FFF020F7F1400ED3FC0151F150FA4120EA2001E5D121CA2151F
003C92C7FCA2003E143E5D127E007F5C6D485A9038C007E039F3F80FC000F0B5C8FC38E0
3FFC38C00FF029377AB42B>I<0003B8FC5A17FE9039F801F800260FC003147E0180153E
010049131E001E161C1407121C003C4A133CA20038010F1438127800705CA2021F147800
F01670C7491300A2143FA292C8FCA25CA2147EA214FEA25CA21301A25CA21303A25CA213
07A25CA2130FA25C497E003FB512E05AA2303373B237>I<B53CC03FFFF007FFF8A21480
280FF00001FCC7EA7F806C484AEC3E00193CA2193861A203035D0307140161030F140361
031D4AC7FCA20339140EED38FC03705C6C7E03E05C140103C05CDA038014F060DA070049
5AA2020E4A5AA24A4AC8FCA24A140E147802705C02F0143C4A1438D9F1C014781770D9F3
805CA201F7C7EAFDC0167FD801FE5DA24992C9FCA249147E5B167C491478A24914704535
70B24D>87 D<EB03F0EB0FF890383E1C6090387C0FF0EBF807EA01F0EA03E00007EB03E0
EA0FC0A2381F800715C0EA3F00A2140F481480127EA2141F00FE14005A1506EC3F07EC3E
0F150E147E127CECFE1CEB01FCD83C03133C393E07BE38391F0E1E783907FC0FF03901F0
03C0202278A027>97 D<137EEA1FFEA25B1200A35BA21201A25BA21203A25BA21207A2EB
C3E0EBCFF8380FDC3EEBF81F497E01E01380EA1FC0138015C013005AA2123EA2007E131F
1580127CA2143F00FC14005AA2147EA25CA2387801F85C495A6C485A495A6C48C7FCEA0F
FCEA03F01A3578B323>I<14FCEB07FF90381F078090383E03C0EBFC013801F8033803F0
073807E00F13C0120F391F80070091C7FC48C8FCA35A127EA312FE5AA4007C14C0EC01E0
A2EC03C06CEB0F80EC1F006C137C380F81F03803FFC0C648C7FC1B2278A023>I<ED0FC0
EC03FFA21680EC001FA31600A25DA2153EA2157EA2157CA215FCA2903803F0F8EB0FF8EB
3E1DEB7C0F496C5AEA01F0EA03E000071303D80FC05BA2381F8007A2D83F005BA2140F5A
007E5CA2141F12FE4891C7FC1506EC3F075DEC3E0E147E127CECFE1CEB01FCD83C03133C
393E07BE38391F0E1E783907FC0FF03901F003C0223578B327>I<EB03F8EB0FFEEB3E0F
9038F807803801F003EA03E0EA07C0120FEA1F801407D83F0013005C007E133EEB03F838
7FFFE04848C7FC00FCC8FCA45AA4EC0180EC03C0A2007CEB0780EC1F00003C133E6C13F8
380F03E03807FF80D801FCC7FC1A2277A023>I<151FED7FC0EDF0E0020113F0EC03E3A2
EC07C316E0EDC1C091380FC0005DA4141F92C7FCA45C143E90381FFFFEA3D9007EC7FC14
7CA414FC5CA513015CA413035CA413075CA4130F5CA3131F91C8FCA4133E1238EA7E3CA2
EAFE7CEAFC78485AEA78E0EA3FC0000FC9FC244582B418>I<143FECFF80903803E1E690
3807C0FF90380F807FEB1F00133E017E133F49133EA24848137EA24848137CA215FC1207
4913F8A21401A2D80FC013F0A21403120715E01407140F141F3903E03FC00001137FEBF0
FF38007FCF90381F0F801300141FA21500A25C143E1238007E137E5C00FE5B48485A3878
03E0387C0F80D81FFFC7FCEA07F820317CA023>I<EB0FC0EA03FFA25CEA001FA391C8FC
A25BA2133EA2137EA2137CA213FCA29038F83F80ECFFE03901FBE0F09038FF80F8EC0078
49137C485A5B5BA2484813FC5D5BA2000F13015D1380A2001F13035DEB0007EDC0C048EC
C1E0020F13C0003E1481A2007E148391381F0380007C1407020F130000FC140E151E48EB
07F80070EB01F023357BB327>I<EB0180EB07E0A2130FEB07C0EB038090C7FCABEA01F0
EA03FCEA0F1E120E121CEA3C1F1238EA783E1270A2137EEAF07CEA60FCC65AA212015BA2
12035BA2000713C0EBC1E0000F13C01381A21383381F03801307000F1300130E131EEA07
F8EA01F013337AB118>I<EB0FC0EA03FFA25CEA001FA391C7FCA25BA2133EA2137EA213
7CA213FCA2491378EC03FE0001EB078FEC0E0F9038F01C3F143800031370ECE03E9038E1
C01C9038E38000D807E7C7FC13EE5B13F8120F13FFEB9FC0EB83F0EA1F81EB80F8130015
0C48141E151C123EA2007E143C1538127CECF07000FC137815E048EB3FC00070EB0F0020
357BB323>107 D<133FEA0FFFA213FEEA007EA3137CA213FCA213F8A21201A213F0A212
03A213E0A21207A213C0A2120FA21380A2121FA21300A25AA2123EA2127EA2127C1318EA
FC1C133CEAF838A3137012F013F0EAF8E01279EA3FC0EA0F00103579B314>I<2703C003
F8137F3C0FF00FFE01FFC03C1E783C1F07C1E03C1C7CF00F8F01F03B3C3DE0079E002638
3FC001FC7FD97F805B007001005B5E137ED8F0FC90380FC00100E05FD860F81480120000
01021F130360491400A200034A13076049013E130FF081800007027EEC83C0051F138049
017C1403A2000F02FC1407053E130049495CEF1E0E001F01015D183C010049EB0FF0000E
6D48EB03E03A227AA03F>I<3903C007F0390FF01FFC391E787C1E391C7CF01F393C3DE0
0F26383FC01380EB7F8000701300137EA2D8F0FC131F00E01500EA60F8120000015C153E
5BA20003147E157C4913FCEDF8180007153C0201133801C013F0A2000F1578913803E070
018014F0020113E0001FECE1C015E390C7EAFF00000E143E26227AA02B>I<14FCEB07FF
90381F07C090383E03E09038FC01F0EA01F83903F000F8485A5B120F484813FCA248C7FC
A214014814F8127EA2140300FE14F05AA2EC07E0A2007CEB0FC01580141FEC3F006C137E
5C381F01F0380F83E03803FF80D800FCC7FC1E2278A027>I<011E137C90387F81FF9039
F3C387C09039E3EF03E03901E1FE01D9C1FC13F0EBC3F8380383F016F814E0EA07871307
000313C01200010F130316F01480A2011F130716E01400A249EB0FC0A2013EEB1F80A201
7EEB3F00017F133E5D5D9038FF81F09038FDC3E09038F8FF80027EC7FC000190C8FCA25B
A21203A25BA21207A25BB5FCA325307FA027>I<903803F01890380FF83890383E1C7890
387C0EF89038F807F0EA01F0EA03E000071303D80FC013E0A2EA1F801407D83F0013C0A3
48130F007E1480A300FE131F481400A35C143E147E127C14FE495AEA3C03EA3E07EA1F0E
3807FCF8EA01F0C7FC13015CA313035CA21307A25C48B5FC5AA21D3078A023>I<3903C0
0FC0390FF07FF0391E78F078391C7DE03C393C3FC0FC00381380EB7F00007014F8017E13
70017C1300EAF0FC12E0EA60F812001201A25BA21203A25BA21207A25BA2120FA25BA212
1FA290C8FC120E1E227AA020>I<EB03F0EB1FFCEB3C1EEB780FEBF007EA01E0140F0003
131F13C0A2EBE00414007FEBFF8014E06C13F06C13F8EB7FFC1307EB00FE147E143E1238
00FC133CA3147C00F013784813F0EAF001387803E0383C0F80381FFE00EA03F818227AA0
1F>I<1303EB0F80A3131FA21400A25BA2133EA2137EA2137C387FFFF8A2B5FC3800F800
A21201A25BA21203A25BA21207A25BA2120FA25B1460001F13F014E01300130114C01303
001E13801307381F0F00EA0F1EEA07FCEA01F015307AAE19>I<EA01F0D803FC1307D80F
1E5B000E5C121CEA3C1F00385CD8783E133E1270A2017E137ED8F07C137C1260EA00FC49
13FC00015C5BA2140100035C13E0166002031370EDE0F0D807C014E0A200031307EDE1C0
9038E00FC1EC1FC3000190383FE3809038F071E73A007FE0FF0090381F803C24227AA029
>I<D801F01338D803FC13FCEA0F1E000E1301001C1300EA3C1F0038147CEA783E007014
3CA2137ED8F07C13381260EA00FC491378000114705BA215F0000314E05BA2EC01C0A2EB
C0031580A2EC0700EBE00EA26C6C5A3800F878EB7FF0EB1FC01E227AA023>I<D801F015
38D803FC010E13FCD80F1E131E000EEC3E01001C1500EA3C1F0038027E137CD8783E137C
0070163CA2017E13FCD8F07C4913381260EA00FCD9F801147800014A137013F0A2020314
F0000316E001E05BA2160117C001C013C00207EB0380A2903AE00FE00700A2021F130E3A
01F03DF01C3A00F878F83890393FF07FF090390FC00FC02E227AA033>I<011F137C9038
7FC1FF3A01E1E787803A03C0F703C0903880FE0FEA07004813FC000E1580001E9038F807
00001C91C7FC1301003C5B1218120013035CA31307A25C1506010F130F150E1480003814
1ED87C1F131C00FC143C1538013F5B39F07FC0E03970F3C3C0393FE1FF80260F807EC7FC
22227CA023>I<EA01F0D803FC1307D80F1E130F000E141F121CEA3C1F0038143FD8783E
133E1270A2017E137ED8F07C137C1260EA00FC4913FC000114F85BA21401000314F013E0
A2140315E0EA07C0A20003130715C0EBE00F141F0001133F9038F07F8038007FEFEB1F8F
EB001F1500A25C001F133E48137E147C5C003E5BEA3801495A383C0780D81C1FC7FCEA0F
FCEA03F020317AA025>I<903807C01C90381FE03C90383FF038017F13789038FFF8F039
01F07DE0EBE01F3903C003C09038800780EC0F00C7121E141C143C5C5C495AEB07C0495A
011EC7FC5B5B4913704913F0000114E0485A38078001390FC003C0381FF80790383E1F80
393C1FFF00486C5A00705B38F007F838E003E01E227CA01F>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fl cmcsc10 9 24
/Fl 24 121 df<14C0EB0180EB030013065B5B13385B5BA2485A12035B120790C7FC5AA2
120E121EA2121C123CA35AA612F85AAD7E1278A67EA3121C121EA2120E120FA27E7F1203
7F12016C7EA213707F13187F7F7FEB0180EB00C0124B77B721>40
D<12C012607E7E7E7E12076C7E6C7EA26C7E7F137013781338133CA2131C131EA2130E13
0FA3EB0780A614C01303AD13071480A6EB0F00A3130E131EA2131C133CA2133813781370
13F05B485AA2485A48C7FC12065A5A5A5A5A124B7BB721>I<B77E16F016FC3A01FE0003
FF00009138003FC0707EEE07F0707E707E707E177E177FEF3F80A2EF1FC0A318E0170FA3
18F0AA18E0A3171F18C0A2EF3F80A218005F17FE4C5A4C5A4C5A4C5AEE3FC000014AB4C7
FCB712FC16F0168034337CB23E>68 D<B812E0A3D801FEC7123F00001507EE01F01600A2
1770A21730A403061318A41700150EA2151E157E90B512FEA39038FE007E151E150EA215
061706A3170C92C7FCA4171CA21738A2177817F8160116030001153FB812F0A32F337CB2
37>I<B812C0A3D801FEC7127F0000150FEE03E01601A21600A21760A417301506A31700
A2150EA2151E157E90B512FEA39038FE007E151E150EA21506A592C8FCAB487EB67EA32C
337CB235>I<B67EA3000190C9FC6C5AB3A917C0A416011780A41603A21607160F161F16
3FEE7F000001EC03FFB8FCA32A337CB233>76 D<007FB81280A3903A8003F8007FD87C00
150F0078160700701603A20060160100E017C0A3481600A6C71600B3AB4A7E011FB6FCA3
32337CB23B>84 D<1418143CA3147EA214FFA39038019F80A39038030FC0A201077FEB06
07A2496C7EA2011C7FEB1801A201307F1400A290387FFFFEA29038E0007F497FA24848EB
1F80A2000315C0150F1207000F15E0486CEB1FF0D8FFF090B5FCA228277EA62E>97
D<02FF13100107EBE03090391FC0787090397E001CF001F813074848130348481301485A
000F1400485A167048C8FCA2481530127EA200FE1500A8127E1630127F7EA26C6C1460A2
6C7E000715C06C6CEB01806C6C13036C6CEB0700017E130E90381FC078903807FFE00100
138024287DA62C>99 D<B67E15F0390FE001FC0007EB007E151FED0FC01507ED03E016F0
150116F8A2ED00FCA316FEA916FCA3ED01F8A2ED03F016E01507ED0FC0ED1F80ED7E0000
0F495AB612F0158027267DA52F>I<B71280A2390FE0003F000714071503A2150116C0A2
1500A21406A21600A2140E141EEBFFFEA2EBE01E140E1406A21660A291C7FC16E016C0A3
1501A21503A2ED0F80000F143FB7FCA223267DA52A>I<B7FCA2390FE0007F0007140F81
A2811680A21501A3140692C7FCA3140E141EEBFFFEA2EBE01E140E1406A491C8FCA9487E
B512C0A221267DA528>I<02FF13100107EBE03090391FC0787090397E001CF001F81307
4848130348481301485A000F1400485A167048C8FCA2481530127EA200FE1500A64AB5FC
A2007E90380007F8ED03F0127F7EA26C7EA26C7E12076C7E6C6C1307EA00FC017E130C90
391FC03870903907FFF0100100EB800028287DA630>I<B53803FFFCA23A0FF0003FC06C
48EB1F80AE90B6FCA29038E0001FB0486CEB3FC0B53803FFFCA226267DA52E>I<B512C0
A23807F8006C5AB3AE487EB512C0A212267EA517>I<B512C0A2D80FF0C7FC6C5AB3A215
06A5150EA3151CA2153C157C000FEB03FCB6FCA21F267DA526>108
D<D8FFE0EC07FF6D5C000F16F0000716E0D806F8141BA2017C1433A36D1463A26D14C3A2
90390F800183A3903907C00303A2903803E006A3903801F00CA2903800F818A3EC7C30A2
EC3E60A3EC1FC0A2000FEB0F80A2D83FC0EC07F03BFFF007007FFFA230267DA538>I<D8
FFE0EB3FFC7FD807F8EB0FF0ED03C07FD806FEEB0180137E137FEB3F80EB1FC0A2EB0FE0
EB07F0EB03F8A2EB01FCEB00FE147E147FEC3F81EC1FC1A2EC0FE1EC07F1140315F9EC01
FDEC00FFA2157F153F151FA2000F140F1507D83FC01303EAFFF0150126267DA52E>I<49
B4FC010F13E090383F01F890387C007C4848133FD803E0EB0F80000715C04848EB07E049
1303001F15F048C7EA01F8A24815FCA2007E1400A200FE15FEA9007FEC01FCA36C15F86D
1303001F15F06D1307000F15E06C6CEB0FC06C6CEB1F806C6CEB3F006C6C137E90383F01
F890380FFFE0010190C7FC27287DA62F>I<B6FC15E0390FE003F80007EB00FC153E153F
ED1F80A216C0A51680A2ED3F00153E15FCEC03F890B512E092C7FC01E0C8FCAE487EB5FC
A222267DA52A>I<B512FCECFFC0390FE007F00007EB01F86E7E157E811680A61600157E
5D4A5AEC07F090B512C092C7FC9038E00FC0EC03F01401816E7EA481A4160315FF157F48
6C1407B5EB3F8EED0FFCC8EA03F028277DA52D>114 D<EBFE013803FFC3380F01E7381E
007F0038131F805A8012F0A2807EA26C90C7FC127F13E0EA3FFEEBFFE06C13F86C7F0003
7FC67F13079038007F80141FEC0FC0140712C01403A37E15806C1307150000FC130E6C13
1E38E7C07838C1FFF038803FC01A287DA622>I<007FB612F8A2397E00FC010078EC0078
0070153800601518A200E0151C48150CA5C71400B3A4497E90B512FCA226267EA52C>I<
D87FFFEBFFFCA2D807FEEB3FE06C48EB1F000001141E0000141C6D5B017F13306D13706E
5A6D6C5A90380FE18014E3D907F7C7FCEB03FE13015C6D7E147E147F4A7EECDFC0EB019F
9038038FE0EC07F0EB0603010E7F496C7EEB1800497F0170137F49EB3F8012010003EC1F
C0000715E0D81FF0EB3FF0B46C90B5FCA228267EA52E>120 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fm cmr9 9 87
/Fm 87 124 df<B812F0A3D87FC0C7127F16076C6CEC01F86C6C1400000F16787F6C6C15
3812036D15186C7E6C7F170C6D7E6D7E131F6E14006D7E1307806D7E6D7EA26D7F6EC8FC
143E143C1438143014704A140C495A495A49C8FC010E151C4915185B4915385B48481578
485A90C912F8481501000E150748ED7FF0003FB7FC5AB8FCA22E337CB237>6
D<91391FE00FE0903A01FFFC3FF8903A07F01EF83C903A0FC00FF07E903A3F801FE0FE90
387F003F017E14C05B1738484890381F8000ACB812C0A33B01F8001F8000B3A7486C497E
267FFFC3B5FCA32F357FB42D>11 D<EC1FE0903801FFF8903807F01E90380FC00790383F
800F90397F001F80017E133F5BA2485AED1F0092C7FCA9ED1F80B7FCA33901F8003F151F
B3A6486CEB3FC03A7FFFC3FFFEA327357FB42B>I<EC1FF049B51280903807F01F90380F
C03FEB3F005B137E5B151F485AACB7FCA33901F8001FB3A7486CEB3FC03A7FFFE7FFFEA3
27357FB42B>I<DA1FE013FF9126FFFC0F13C0903B03F01E3F80F0903B0FC0077E0038D9
1F8049137890273F001FF813FC017EECF0014914E0A2484814C0030F6D5A95C7FCA918FC
B9FCA33B01F8000FC0011700B3A6486C496C487E3D7FFFC1FFFE1FFFF0A33C357FB440>
I<EA01E0EA03F0A21207A2EA0FE0EA1FC01300123E123C5A5A5A12400C0E70B326>19
D<B612E0A31B037BAC26>22 D<123C127E12FFA8127EAB123E123CAB1218A61200A7123C
127E12FFA4127E123C08367AB515>33 D<003C1378007E13FC38FF01FEA2EB81FFA2EA7F
80003D137B00011303A400031307EB0006A248130E0006130C000E131C000C1318001C13
384813704813E0006013C018177DB326>I<123C127EB4FCA21380A2127F123D1201A412
031300A25A1206120E120C121C5A5A126009177AB315>39 D<14C01301EB0380EB0F0013
0E5B133C5B5BA2485A485AA212075B120F90C7FC5AA2121E123EA3123C127CA55AB0127C
A5123C123EA3121E121FA27E7F12077F1203A26C7E6C7EA213787F131C7F130FEB0380EB
01C01300124A79B71E>I<12C07E1270123C121C7E120F6C7E6C7EA26C7E6C7EA27F1378
137C133C133EA2131E131FA37F1480A5EB07C0B0EB0F80A514005BA3131E133EA2133C13
7C137813F85BA2485A485AA2485A48C7FC120E5A123C12705A5A124A7CB71E>I<130749
7EA639780700F000FCEB01F800FE1303397F870FF0393FC71FE0390FE73F803903FFFE00
38007FF0EB1FC0A2EB7FF03803FFFE390FE73F80393FC71FE0397F870FF039FE0703F800
FC13010078EB00F039000F8000A66DC7FC1D207CB726>I<123C127EB4FCA21380A2127F
123D1201A412031300A25A1206120E120C121C5A5A126009177A8715>44
D<B512F0A514057F921A>I<123C127E12FFA4127E123C08087A8715>I<1530157815F8A2
15F01401A215E01403A215C01407A21580140FA215005CA2143EA2143C147CA2147814F8
A25C1301A25C1303A25C1307A2495AA291C7FC5BA2131E133EA2133C137CA2137813F8A2
5B1201A25B1203A2485AA25B120FA290C8FC5AA2121E123EA2123C127CA2127812F8A25A
12601D4B7CB726>I<EB0FE0EB7FFCEBF83E3903E00F803907C007C0EB8003000F14E039
1F0001F0A24814F8A2003E1300007E14FCA500FE14FEB2007E14FCA56CEB01F8A36C14F0
A2390F8003E03907C007C0A23903E00F803900F83E00EB7FFCEB0FE01F347DB126>I<13
075B5B13FF120FB5FC133F12F01200B3B3A2497EB612C0A31A327AB126>I<EB3FC0EBFF
F0000313FC380F80FF391E007F80001CEB3FC048EB1FE048130F15F00060130712FC6C14
F87E1403A3007E1307123CC7FC15F0A2140F15E0EC1FC0A2EC3F801500147E5C495A5C49
5A495A495A49C7FC133E133C4913185B485A48481330485A48C7FC001C1470001FB512F0
5A5AB612E0A31D327CB126>I<EB1FE0EB7FFC48B5FC3907E03F80390F001FC0001EEB0F
E0001CEB07F0123F018013F8140313C01380A2381F0007C7FC15F0A2EC0FE0A2EC1FC015
80EC3F0014FCEB3FF014FCEB003FEC1FC0EC0FE0EC07F015F8140315FC140115FEA3127E
B4FCA415FC4813031278007014F86CEB07F0003C130F001FEB1FE0390FE03F800003B512
00C613FCEB1FE01F347DB126>I<EC0380A21407140FA2141F143FA2147F14FF14DF1301
149FEB031F13071306130C131C131813301370136013C0120113801203EA07001206120E
120C5A123812305A12E0B71280A3C7381F8000A94A7E010FB5FCA321337EB226>I<000C
14C0380FC00F90B5128015005C5C14F014C0D80C1CC7FC90C8FCA9EB0FC0EB3FF8EBF07C
380DC01FD80F8013809038000FC0120E000CEB07E0A2C713F01403A215F8A41218127E12
FEA315F0140712F8006014E01270EC0FC06C131F6C1480001EEB7F00380F80FE3803FFF8
6C13E038003F801D347CB126>I<14FE903807FF80011F13E090383F80F090387E007090
38F801F83801F003EA03E01207EA0FC0EC01F04848C7FCA248C8FCA35A127EEB07F0EB1F
FC38FE381F9038700F809038E007C039FFC003E0018013F0EC01F8130015FC1400A24814
FEA5127EA4127F6C14FCA26C1301018013F8000F14F0EBC0030007EB07E03903E00FC039
01F81F806CB51200EB3FFCEB0FE01F347DB126>I<1230123C003FB6FCA34814FEA215FC
0070C7123800601430157015E04814C01401EC0380C7EA07001406140E5C141814385CA2
14F05C1301A2495AA31307A2130FA25CA2131FA5133FAA010EC7FC20347CB126>I<EB0F
E0EB7FFC90B5FC3903F01F803907C007C0390F0003E0EC01F0001E1300001C14F8003C14
78A4123E003F14F86D13F07F391FE001E09038F803C0390FFE07803907FF0F0014DE0001
13F87EEB3FFE8001F713C0D803E313E0D8078013F0390F003FF8001E131F003EEB07FC00
3C130348EB00FE157E12F848143EA2151EA37E0078143CA2007C14787E6CEB01F0390F80
03E03907F01FC00001B5120038007FFCEB1FE01F347DB126>I<EB0FE0EB7FF8EBFFFE38
03F83F3907E00F80390FC007C0D81F8013E0EC03F0383F00014814F8127EA200FE14FC14
00A415FEA5007E1301A2127F7E1403EA1F80000F13073807C00E3803E01C3801F0383800
7FF090381FC0FC90C7FC1401A215F8A2EC03F0A2001F14E0383F800715C0140FEC1F8090
38003F00001C137E381F01FC380FFFF0000313C0C690C7FC1F347DB126>I<123C127E12
FFA4127E123C1200B0123C127E12FFA4127E123C08207A9F15>I<123C127E12FFA4127E
123C1200B0123C127E12FE12FFA3127F123F1203A412071206A2120E120CA2121C123812
3012701260082F7A9F15>I<007FB812C0B912E0A26C17C0CCFCAC007FB812C0B912E0A2
6C17C033147C9C3C>61 D<15E0A34A7EA24A7EA34A7EA3EC0DFE140CA2EC187FA34A6C7E
A202707FEC601FA202E07FECC00FA2D901807F1507A249486C7EA301066D7EA3010FB57E
A249800118C77EA20138810130143FA2496E7EA3496E7EA21201707E487ED80FF0EC1FF8
D8FFFE49B512E0A333367DB53A>65 D<B77E16F016FC3A01FE0001FF00009138007F80EE
3FC0EE1FE0160F17F0160717F8A617F0160F17E0EE1FC0EE3F80EE7F00ED01FE90B612F8
5E9039FE0003FCED007FEE1FC0EE0FE0EE07F017F8160317FC160117FEA617FC1603A2EE
07F8EE0FF0161FEE3FE00001913801FF80B8120016FC16E02F337EB236>I<DA03FE130C
91393FFF801C91B512E0903A03FE01F83C903A0FF0003C7CD91FC0EB0EFCD97F80130701
FEC7120348481401000315005B4848157C485A173C485A171C123F5B007F160CA390C9FC
481600AB7E6D150CA3123F7F001F161C17186C7E17386C6C15306C6C15706D15E012016C
6CEC01C0D97F80EB0380D91FC0EB0F00D90FF0131ED903FE13FC0100B512F0023F13C0DA
03FEC7FC2E377CB437>I<B77E16F016FE3A01FE0001FF00009138003FC0EE0FE0707E70
7E707E707E177E177FEF3F80A2EF1FC0A3EF0FE0A418F0AA18E0A3171F18C0A21880173F
18005F17FE5F4C5AEE07F04C5AEE3FC000014AB45AB748C7FC16F8168034337EB23B>I<
B812E0A3D801FEC7123F00001507EE01F01600A21770A21730A403061318A41700150EA2
151E157E90B512FEA39038FE007E151E150EA215061706A3170C92C7FCA4171CA21738A2
177817F8160116030001153FB812F0A32F337EB234>I<B812C0A3D801FEC7127F000015
0FEE03E01601A21600A21760A417301506A31700A2150EA2151E157E90B512FEA39038FE
007E151E150EA21506A592C8FCAB487EB67EA32C337EB232>I<DA07FC131891393FFF80
3849B512E0903A07FE01F078903A0FF00078F8D93FC0131D49C7120F01FE140748481403
484814011207491400485A001F16785B003F1638A25B007F1618A390C9FC4893C7FCAA03
0FB512C07E7F92390007FC00705A123F7FA2121F7F120F6C7E7F12036C6C14076C7ED97F
80130F6D6C131CD90FF0EB3C78903A07FE01F0380101B5EAE018D9003F0180C7FCDA07FC
C8FC32377CB43C>I<B5D8FE03B512F8A3000190C73807FC006C486E5AB390B7FCA349C7
1203B3A3486C4A7EB5D8FE03B512F8A335337EB23A>I<B512FEA3000113006C5AB3B3A7
487EB512FEA317337EB21C>I<48B512FCA3C71380EC7F00B3B1127EB4FCA414FE5A0060
5BEA700100385B6C485A380F07E03807FF80D800FCC7FC1E357CB227>I<B500FE903807
FFF8A3000190C7000113806C48913800FC0017F04C5A4C5A4CC7FC160E5E5E5E5E4B5A4B
5A4BC8FC150E5D5D15F84A7E14034A7EEC0EFF5C4A6C7E4A6C7EECE01FD9FFC07F4A6C7E
4A6C7E5B6F7E6F7EA26F7E707EA2707E707E160F83707E707EA283486C913807FF80B500
FE013F13FCA336337EB23C>I<B67EA3000190C9FC6C5AB3A917C0A416011780A41603A2
1607160F161F163FEE7F000001EC03FFB8FCA32A337EB230>I<D8FFFEEEFFFE6D5DA200
0118002600DF80EC037EA3D9CFC01406A2D9C7E0140CA3D9C3F01418A2D9C1F81430A3D9
C0FC1460A3027E14C0A26EEB0180A391391F800300A291380FC006A36E6C5AA36E6C5AA2
6E6C5AA36E6C5AA3ED7EC0A26F5AA3486C6DC7FCD807F816FFB5D8C00E017F13FEA33F33
7DB246>I<D8FFFE91381FFFF87F80C6030013006E143CD9DFE01418EBCFF0A2EBC7F8EB
C3FCA2EBC1FEEBC0FF6E7EA26E7E6E7EA26E7E6E7E6E7EA26E7E6E7EA2ED7F80ED3FC0ED
1FE0A2ED0FF0ED07F8A2ED03FCED01FEED00FFA2EE7F98EE3FD8A2EE1FF8160F1607A216
031601A2486C1400D807F81578B500C01438A2171835337EB23A>I<EC07FC91387FFFC0
903901FC07F0903907E000FCD90F80133E013FC76C7E017E6E7E496E7E48486E7E48486E
7EA248486E7E000F8249157E001F167FA24848ED3F80A2007F17C0A290C9121FA24817E0
AB6C17C06D153FA3003F17806D157FA2001F17006D5D000F5E6C6C4A5AA26C6C4A5A0001
5E6C6C4A5A017E4A5A6D4A5AD91FC0017FC7FCD907E013FC903901FC07F09039007FFFC0
DA07FCC8FC33377CB43C>I<B7FC16E016F83A01FE0003FE0000EC007FEE3F80EE1FC0EE
0FE017F01607A217F8A617F0A2EE0FE0A2EE1FC0EE3F80EE7F00ED03FC90B65A16C049C9
FCB3A2487EB512FEA32D337EB234>I<EC07FC91387FFFC0903901FC07F0903907E000FC
4948137E013FC7EA1F80017E6E7E496E7E48486E7E00038249140148486E7E000F824915
7E001F167FA24848ED3F80A2007F17C0A390C9121F4817E0AB6C17C0A26D153FA2003F17
80A26D157F001F1700A2270FE001F013FE0007D907FC5B9039F00E0E013B03F80C0703F8
000190391C0383F03B00FC180187E0017EECCFC0013FECDF8090271F9C00FFC7FCD907EC
13FC902701FE07F013609038007FFF913807FC7091C7007813E0A2EE7C01EE7E0393387F
07C0EE3FFFA21880821800705A705AEE01F033447CB43C>I<B612FCEDFF8016F03A01FE
0007FC0000EC01FEED007F707E707E83160F83A65FA24C5AA24C5A047EC7FC4B5AED0FF0
90B612C093C8FC9039FE001FC0ED07F06F7E6F7E150082167E167FA583A5180C17C0A204
3F131C486C1618B500FEEB1FE0040F1338933807F070C93801FFE09338003F8036357EB2
39>I<90381FE00390387FFC0748B5FC3907F01FCF390F8003FF48C7FC003E80814880A2
00788000F880A46C80A27E92C7FC127F13C0EA3FF013FF6C13F86C13FF6C14C06C14F0C6
80013F7F01037F9038003FFF140302001380157F153FED1FC0150F12C0A21507A37EA26C
EC0F80A26C15006C5C6C143E6C147E01C05B39F1FC03F800E0B512E0011F138026C003FE
C7FC22377CB42B>I<007FB712FEA390398007F001D87C00EC003E0078161E0070160EA2
0060160600E01607A3481603A6C71500B3AB4A7E013FB512FEA330337DB237>I<B500FE
90381FFFF8A3000190C813006C48153C1718B3AF1738017F1530A217706D6C1460011F15
E06E495A010F14036D6C495A6D6C49C7FCD901FC131E6DB413FC91383FFFF0020F13C002
0190C8FC35357EB23A>I<B500F0903803FFF8A3D807FEC8EA7FC06C48ED1F000001161E
6D151C00001618A26D15386D153080013F5DA26E14E0011F5DA26D6C495AA26E13030107
92C7FCA26D6C1306A28001015CA26E131C01001418806E5BA2ED8070023F1360A26E6C5A
A215E1020F5BA2DA07F3C8FCA215FBEC03FEA26E5AA36E5AA31570A235357EB23A>I<B5
D8F007B539800FFFF0A3000390C7273FF000011300D801FCDA1FC0EB007C1A386C6C6E7E
1A30A2017F6E6C5CA36D6C496C5CA36D6CD919FC495AA36D6CD930FE49C7FCA36ED9607F
5B01071706A26E9039C03F800E0103170CA2913BFC01801FC01C01011718A2913BFE0300
0FE03801001730A2DAFF06903807F070027F1660A2038C903803F8E0023F5EA203D8EB01
FD021F5EA203F0EB00FF020F93C8FCA24B800207157EA24B143E0203153CA24B141C0201
15184C357FB24F>I<267FFFFC90B512C0A3000101E090381FF80026007F80EB0FC0013F
6E5A6E91C7FC6D6C130E010F140C6E5B6D6C13386D6C5B16606D6C5B903800FF015EDA7F
83C8FCEC3FC715C6EC1FECEC0FFC5D14076E7EA26E7E815C6F7E9138063FC0140E4A6C7E
9138180FF014384A6C7E91386003FCECC0010101804A6C7E49C77E498101066E7E49141F
011C81496E7E01786E7E13FCD807FEEC1FFEB500C090B512F8A335337EB23A>I<B500F8
ECFFFEA300030180EC3FE0C690C8EA1F00170E6D6C5C6D6C141817386D6C14305F6D6C14
E06D6C5C16016D6C5C6D6C49C7FC5E6D6C13065E91387F801C91383FC018163891381FE0
306E6C5A16E06E6C5AEDF980EC03FF6E90C8FC5D1400B14A7E91B512FCA337337FB23A>
I<003FB612FCA39039F80007F813C090C7EA0FF0003EEC1FE0123C0038EC3FC00078EC7F
801270EDFF004A5AA20060495AA24A5A4A5AC7FC4A5A4A5AA24A5A4AC7FCA2495A495AA2
495A495AA24948130C495AA2495A49C7FCA24848141CA2485A485A1638485A4848147816
F84848130148481307153FB7FCA326337CB22F>I<EAFFE0A4EAF000B3B3B3ADEAFFE0A4
0B4B78B715>I<0003130648130E000E131C481338001813300038137000301360007013
E0006013C0A2EAE00100C01380A400DE13BC00FF13FEEB81FFA2EA7F80A2383F007E001E
133C181776B326>I<EAFFE0A41201B3B3B3AD12FFA40B4B7FB715>I<134013E0487E487E
13B8EA071CEA0E0E487E38380380387001C038E000E000401340130C77B326>I<EB7F80
3803FFE0380F80F8381C007E003F7F13806E7EA26E7EEA1F00C7FCA4EB01FF133FEBFF8F
3803F80FEA0FE0EA1FC0EA3F80127F13004815C05AA3141FA26C133F6CEB37E1263F8073
13803A1FC1E3FF003907FF81FE3900FE007C22237DA126>97 D<EA03F012FFA312071203
AEEC3F80ECFFE09038F3C0F89038F7007E01FE7F49EB1F8049EB0FC05BED07E016F0A215
0316F8AA16F0150716E0A2ED0FC07F6DEB1F8001ECEB3F0001CF137C90388381F8903801
FFE0C76CC7FC25357EB32B>I<EB0FF0EB3FFE9038F80F803903F001C03907E007E0380F
C00FEA1F80A2EA3F00EC07C04890C7FCA2127E12FEAA127FA215307E6C6C137015606C6C
13E03907E001C03903F003803900F81F00EB7FFCEB0FE01C237DA122>I<157EEC1FFEA3
1400157EAEEB07F0EB3FFCEBFC0F3901F003FE3807E001380FC000485A157E48C7FCA25A
127E12FEAA127E127FA27E6C6C13FEA2380FC0016C6C487E3A03F0077FF83800F81EEB3F
F890390FE07E0025357DB32B>I<EB0FE0EB3FFCEBF83F3903F00F80D807E013C0390FC0
07E0381F800315F0EA3F0014014814F8127EA212FEA2B6FCA248C8FCA5127E127FA26C14
18A26C6C1338000F14306D13706C6C13E03901F001C03900FC0F8090383FFE00EB07F01D
237EA122>I<EB01F8EB07FEEB1F8F90383F1F80EB7E3F137C13FCA23901F80E0091C7FC
ACB512F0A3D801F8C7FCB3A7487E387FFFF0A319357FB417>I<151F90391F807F809039
FFF1E3C03903F0FF873907C03F03000F15803A1F801F8000A2EB000F4880A66C5CEB801F
A26C6C48C7FC0007133EEBF0FC380EFFF0380C1F80001CC9FCA3121EA2121F380FFFFEEC
FFC06C14F06C14FC4880381F0001003EEB007F4880ED1F8048140FA56C141F007C15006C
143E6C5C390FC001F83903F007E0C6B51280D91FFCC7FC22337EA126>I<EA03F012FFA3
12071203AEEC1FC0EC7FF09038F1E0FC9038F3807C9038F7007E13FE497FA25BA25BB348
6CEB7F80B538C7FFFCA326347EB32B>I<EA03C0487E487EA46C5A6C5AC8FCAAEA03F012
7FA312071203B3A6487EB51280A311337FB215>I<EB0780EB0FC0EB1FE0A4EB0FC0EB07
8090C7FCAAEB07E0EA01FFA3EA000F1307B3B01238127C00FE13C0130F1480A2387C1F00
EA383EEA1FFCEA07E0134383B217>I<EA03F012FFA312071203AF913803FFE0A36E1300
EC00F8EC01E05D4A5A020FC7FC141C5C5C14F0EBF3F8EBF7FC13FEEBFC7EEBF87F496C7E
141F6E7E8114076E7E8114016E7E813A07F801FF80B500C313F0A324347EB329>I<EA03
F012FFA312071203B3B3A7487EB512C0A312347FB315>I<2703F01FE013FF00FF90267F
F80313C0903BF1E07C0F03E0903BF3803E1C01F02807F7003F387FD803FE1470496D486C
7EA2495CA2495CB3486C496C487EB53BC7FFFE3FFFF0A33C217EA041>I<3903F01FC000
FFEB7FF09038F1E0FC9038F3807C3907F7007EEA03FE497FA25BA25BB3486CEB7F80B538
C7FFFCA326217EA02B>I<EB07F0EB3FFE9038FC1F803901F007C03903C001E000078048
486C7E48C7127CA248147E003E143E007E143FA300FE1580A8007E1500A36C147EA26C14
7C6D13FC6C6C485A00075C3903F007E03900FC1F80D93FFEC7FCEB07F021237EA126>I<
3903F03F8000FFEBFFE09038F3C0F89038F7007ED807FE7F6C48EB1F804914C049130F16
E0ED07F0A3ED03F8A9150716F0A216E0150F16C06D131F6DEB3F80160001FF13FC9038F3
81F89038F1FFE0D9F07FC7FC91C8FCAA487EB512C0A325307EA02B>I<903807F0069038
3FFC0EEBFC0E3901F8071E3907E003BE000F1301D81FC013FEEB8000123F90C7127E5AA2
5A5AA9127FA36C7E001F14FE7F000F13013807E0033903F0077E3800F81EEB3FF8EB0FE0
90C7FCAA15FF021F13F8A325307DA029>I<3803E0F838FFE1FEEBE79F9038E63F80EA07
EEEA03EC13FC9038F81F0091C7FCA25BB3487EB512E0A319217EA01E>I<3801FE0C3807
FF9C381F01FC383C007C48133C0070131C12F0140CA27EA26C1300B4FCEA7FF813FF6C13
C06C13F0000713F8120138001FFC1301EB007E12C0143E141E7EA27E141C6C133C14386C
137838FF01F038E3FFC038C0FE0017237DA11E>I<1318A51338A31378A213F812011203
1207381FFFFCB5FCA23801F800AF1403A93800FC071406EB7E0EEB3F1CEB1FF8EB03F018
2F7FAD1E>I<D803F0133F00FFEB0FFFA30007EB007F000380B35DA35D12016D48138000
00903803BFFC90387E073FEB1FFED907F8130026227EA02B>I<B5EBFFF0A3D80FF0EB3F
800007EC1F000003140E150C6D131C000114187F00005CA2017E5BA2137F6D5BA290381F
8180A214C3010F90C7FCA2EB07E6A214FE6D5AA26D5AA36D5AA2146024217E9F29>I<B5
3A1FFFC1FFF0A33C07F801FE007F806C486C48EB1E00037C131C7F000102FE1318A26D15
380000496C1330159F01FEEC8070D97E031460150F013F6E5AEC0607A2D91F86EBE180EC
8C03A2D90FCC01F3C7FCECD801A2D907F813FEECF000A201035C4A137CA2010114784A13
380100143034217F9F37>I<B53801FFF8A32603FE0013806C48EB7C0000001478017E13
70017F5B90383F81C090381F8380D90FC3C7FCEB07E614FC13036D5A6D7E80805B903803
9F809038071FC09038060FE0EB0C0790381C03F0496C7E01707FEBF000000180000FECFF
8026FFFC0313FCA326207F9F29>I<3A7FFF807FF8A33A07FC001FC06C48EB0F800001EC
0700150E6C6C130CA26D131C017E1318137F6D5BA26D6C5AA2ECC0E0010F5BA2903807E1
80A214F3010390C7FC14FBEB01FEA26D5AA31478A21430A25CA214E05CA2495A1278D8FC
03C8FCA21306130EEA701CEA7838EA1FF0EA07C025307F9F29>I<003FB512F0A2EB000F
003C14E00038EB1FC00030EB3F800070137F1500006013FE495A13035CC6485A495AA249
5A495A49C7FC153013FE485A12035B48481370485A001F14604913E0485A387F00034813
0F90B5FCA21C207E9F22>I<B712F8A22502809426>I E
%EndDVIPSBitmapFont
/Fn 82[33 53[72 2[33 4[50 55 83 28 55 3[50 1[44 55 44
10[72 100 72 72 66 55 72 1[61 78 72 94 66 2[39 78 78
61 66 72 72 66 72 9[50 50 50 50 50 50 50 2[25 46[{
TeXBase1Encoding ReEncodeFont}41 99.6264 /Times-Bold
rf
%DVIPSBitmapFont: Fo cmsy6 6 7
/Fo 7 107 df<B712C0A322037A8D30>0 D<0060143000E014706C14F00078EB01E06CEB
03C06CEB07806CEB0F003807801E6C6C5A6C6C5A6C6C5AEB79E0EB3FC06D5A6DC7FC497E
497EEB79E0EBF0F03801E07848487E48487E48487E001EEB078048EB03C048EB01E048EB
00F0481470006014301C1D779A30>2 D<133013381330A20040130800F0133C00FC13FC
383F33F0380FB7C03803FF00EA0078EA03FF380FB7C0383F33F038FC30FC00F0133C0040
130800001300A21338133016157C9620>I<ED01C01507151FED7F00EC01FCEC07F0EC1F
C0027FC7FC14FCEB03F0EB0FC0EB3F8001FEC8FCEA03F8EA0FE0EA3F8000FEC9FC12F812
FEEA3F80EA0FE0EA03F8EA00FEEB3F80EB0FC0EB03F0EB00FC147FEC1FC0EC07F0EC01FC
EC007FED1FC01507150192C7FCA9007FB61280B712C0A2222F7AA230>20
D<16C01501A315031680150716005D151E5D15F8EC03F0EC1FE0ECFF80D93FFEC7FCB512
F0148014F038003FFE903800FF80EC1FE0EC03F0EC00F8153C8181811680150316C01501
A422237A9C30>30 D<EA03C0EA07E0A4EA0FC0A31380121F1300A3121E123EA2123CA25A
A31270A212F05A12600B1A7D9B12>48 D<12E0B3B3AD033179A413>106
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fp cmr8 8 28
/Fp 28 119 df<14FF010713E090381F80F090383E003849137C4913FC485A1203491378
153092C7FCA7157CB612FCA23803E000157CB3A5486C13FE3A7FFF0FFFE0A2232F7FAE27
>12 D<B512C0A412047F9018>45 D<123C127E12FFA4127E123C08087A8714>I<EC3FF0
903801FFFE903907C00F8090391E0001E00138EB007001F0143CD801C0140E48488048C8
EA0380000690380FC001000ED97FF013C03B1C01F03C00E0271803E00E1360273807C007
13703B300F800380303B701F0001F83800601618013E1300A200E0161C4848150CA86C7E
1260A26D0101131C0070161839300F8003393807C007271803E00E13383B1C01F03C7C70
3B0E007FF03FE0000690390FC00F80000790C9FC6C7E6C7ED800F0153C0138EC01FC011E
EC1FF0903A07C003FF800101B5EAF8009026003FFEC7FC2E307CAE37>64
D<4A7E4A7EA34A7EA24A7EA34A7E1419A2EC30FCA2EC70FEEC607EA2ECE07F4A7EA24948
6C7EA2010380EC000FA2498001061307A2496D7EA2011FB57EA290381800010138800130
1300A249147EA201E0147F4980A200011680161F486C15C0D80FF0EC3FE0D8FFFC0103B5
FCA2302F7EAE35>I<DA1FF013C09138FFFE01903903F00F8390390F8001E3013FC71277
017C143F4848141F4848140F48481407A248481403121F491401123F90C8FC481500A300
FE1600AB127F17C0A27E7F001F15016D1580120F6C6C1403EE07006C6C14066C6C140ED8
007C5C013F147890390F8001E0903903F00FC0902600FFFEC7FCEC1FF02A2F7CAD33>67
D<B612F815FF3A03F8001FE00001EC03F0ED00F8167E82EE1F80160F17C0EE07E0A2EE03
F0A217F81601A317FCAA17F8A3EE03F0A217E0160717C0160FEE1F80EE3F00167E5EED03
F00003EC1FE0B7128003F8C7FC2E2D7DAC36>I<B512F0A23803FC006C5AB3B3A3487EB5
12F0A2142D7EAC19>73 D<B512F8A2D803FCC8FC6C5AB3A71618A41630A41670A216F015
011503ED07E00003143FB7FCA2252D7DAC2C>76 D<D8FFF8903803FFFC7F00019138003F
C06DEC0F006D1406EBBF80A2EB9FC0EB8FE0138780EB83F8138180EB80FE147E147FEC3F
80EC1FC0140F15E0EC07F0140315F8EC01FC140015FE157FED3F86151F16C6ED0FE61507
16F6ED03FE1501A21500167E163EA2486C141ED80FF0140EB5FC16062E2D7DAC35>78
D<B612C015FC3903F8007F0001EC0FC06F7E6F7E6F7E82150082A55E15015E4B5A4B5A4B
5A037FC7FC90B512FC15F09038F800FC153E6F7E150F826F7EA582A5170316F815031707
486C903801FC0EB539F000FE1CEE3FF8C9EA07E0302E7DAC34>82
D<90383F80303901FFF0703807C07C390F000EF0001E13074813034813011400127000F0
1470A315307EA26C1400127E127F13E0EA3FFE381FFFE06C13FC6C13FF000114C0D8003F
13E013039038003FF0EC07F81401140015FC157C12C0153CA37EA215787E6C14706C14F0
6CEB01E039F78003C039E1F00F8039E07FFE0038C00FF01E2F7CAD27>I<B539F003FFFC
A2D803FCC7EA3FC06C48EC0F001606B3AB160E0000150C7F161C017C1418017E14386D5C
6D146090390F8001E0903907E00380902601F80FC7FC9038007FFCEC0FF02E2E7DAC35>
85 D<13FF000713C0380F01F0381C00F8003F137C80A2143F001E7FC7FCA4EB07FF137F
3801FE1FEA07F0EA1FC0EA3F80EA7F00127E00FE14065AA3143F7E007E137F007FEBEF8C
391F83C7FC390FFF03F83901FC01E01F207D9E23>97 D<EB1FE0EB7FFC3801F01E3803E0
073907C01F80EA0F80EA1F005A003EEB0F00007E90C7FCA2127C12FCA9127EA215C07E6C
130101801380380FC0033907E007003801F01E38007FF8EB1FE01A207E9E1F>99
D<15F8141FA214011400ACEB0FE0EB7FF83801F81E3803E0073807C003380F8001EA1F00
481300123E127EA25AA9127C127EA2003E13017EEB8003000F13073907E00EFC3A01F03C
FFC038007FF090391FC0F800222F7EAD27>I<EB1F80EBFFF03801E0783807C03E380F80
1E381F001FEC0F80123E007E130715C0127C12FCA3B6FCA200FCC8FCA4127C127EA2003E
14C0123F6C1301390F80038001C013003803E00F3801F03C38007FF8EB1FC01A207E9E1F
>I<EB03F0EB0FFCEB3E1EEB7C3F13F8EA01F0A23803E00C1400AAB512E0A23803E000B3
A6487E387FFF80A2182F7FAE16>I<013F13F89038FFC3FE3903E1FF1E3807807C000F14
0C391F003E00A2003E7FA76C133EA26C6C5A00071378380FE1F0380CFFC0D81C3FC7FC90
C8FCA3121E121F380FFFF814FF6C14C04814F0391E0007F848130048147C12F848143CA4
6C147C007C14F86CEB01F06CEB03E03907E01F803901FFFE0038003FF01F2D7E9D23>I<
120FEA1F80EA3FC0A4EA1F80EA0F00C7FCA8EA07C012FFA2120F1207B3A5EA0FE0EAFFFE
A20F2E7EAD14>105 D<3807C0FE39FFC3FF809038C703E0390FDE01F0EA07F8496C7EA2
5BA25BB2486C487E3AFFFE1FFFC0A2221E7E9D27>110 D<EB1FE0EB7FF83801F03E3803
C00F3907800780390F0003C04814E0003EEB01F0A248EB00F8A300FC14FCA9007C14F8A2
6CEB01F0A26CEB03E0A2390F8007C03907C00F803901F03E0038007FF8EB1FE01E207E9E
23>I<90380FE01890387FF8383801F81C3903E00E783807C007390F8003F8001F1301EA
3F00A2007E1300A212FE5AA8127EA36C13016C13031380380FC0073807E00E3801F03C38
007FF0EB1FC090C7FCA94A7E91381FFFC0A2222B7E9D25>113 D<380F81F838FF87FEEB
8E3FEA0F9CEA07B813B0EBF01EEBE000A45BB0487EB5FCA2181E7E9D1C>I<3801FE1838
07FFB8381F01F8EA3C00481378481338A21418A27E7EB41300EA7FF06CB4FC6C13C06C13
F0000113F838001FFC130138C0007E143EA26C131EA27EA26C133CA26C137838FF01F038
E3FFC000C0130017207E9E1C>I<1360A413E0A312011203A21207121FB512F0A23803E0
00AF1418A714383801F03014703800F860EB3FE0EB0F80152A7FA81B>I<D807C013F800
FF131FA2000F130100071300B21401A314033803E007EC0EFC3A01F81CFFC038007FF890
391FE0F800221F7E9D27>I<3AFFFC01FFC0A23A0FE000FE000007147C1538000314306D
137000011460A26C6C5BA2EBFC01017C5BA26D48C7FCA2EB3F07EB1F06A2EB0F8CA214DC
EB07D8A2EB03F0A26D5AA36D5A221E7F9C25>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fq cmbx9 9 31
/Fq 31 118 df<EC07FF027F13C00103B512F090390FFE03F890383FF0014948487E9038
FFC0071480484A7E4A6C5AA36F5AED00E093C7FCA4ED7FFEB7FCA40001EB0003B3A7003F
9039F87FFFF0A42C347FB331>12 D<14381478EB01F0EB03E0EB07C0EB0F80131FEB3F00
137EA25B485AA2485A1207A2485AA3485AA2123F5BA3127FA290C7FCA35AAF7EA37FA212
3FA37F121FA26C7EA36C7EA212036C7EA26C7E137EA27FEB1F80130FEB07C0EB03E0EB01
F0EB00781438154B79B722>40 D<12E07E127C7E7E6C7E7F6C7E6C7EA26C7E6C7EA2137E
137FA2EB3F80A3EB1FC0A214E0130FA314F0A21307A314F8AF14F0A3130FA214E0A3131F
14C0A2EB3F80A3EB7F00A2137E5BA2485A485AA2485A485A5B48C7FC123E5A12F05A154B
7BB722>I<EB01C0EB07F0A50038140E397C03E01F00FFEC7F80018313FFEBE3E3EBF3E7
267FFBEF1300000FB512F8000314E0C66C90C7FCEB0FF8EB7FFF0003B512E0000F14F839
7FFBEFFF26FFF3E71380EBE3E3EB83E00103137F007CEC1F00393807F00E000091C7FCA5
EB01C021217BB72C>I<120FEA3FC0EA7FE0EAFFF0A6EA7FE0EA3FC0EA0F000C0C7A8B19>
46 D<147814F81303131FEA03FFB5FCA3EAFC1F1200B3B2007FB512FEA41F317AB02C>
49 D<EB1FFC90B57E000314E0000F14F8391FE07FFC393F000FFF487F6D6C1380D8FFC0
14C06D7E16E080A36C5A6C5A6CC7FCC8FC16C05C16805C16004A5A4A5A5D4A5AEC3FC04A
5A02FEC7FC495A495A903907E001E0EB0FC0EB1F8090383E00034914C05B4848130748B6
FC5A5A5A5A5AB71280A423317CB02C>I<EB0FFC90387FFF8048B512F03903F81FF83907
C00FFE380F8007486C6C7E01F01480123F13F8A5D81FF01400EA0FE038038007C75B4A5A
5D4A5AEC7FC0D91FFFC7FC14FCECFFC09038001FF0EC0FFC6E7E6E7E16806E13C0A2000F
15E0EA3FC0EA7FE0EAFFF0A416C0A2495AD87FC0148049481300003F5B391FF01FFE6CB5
12F8000314E0C61480D91FFCC7FC23327CB02C>I<153E157EA215FE140114031407A214
0F141F143F147F147B14F3EB01E3EB03C313071483EB0F03131E133C137C13F813F0EA01
E0EA03C01207EA0F801300121E5A127C5AB712FEA4C73807FE00A8010FB512FEA427317E
B02C>I<120FEA3FC0EA7FE0EAFFF0A6EA7FE0EA3FC0EA0F00C7FCA9120FEA3FC0EA7FE0
EAFFF0A6EA7FE0EA3FC0EA0F000C217AA019>58 D<B812FCA4C69038E0001FEE03FE1601
1600177E173EA2171EA3923803C01F170FA403071300A2150F153F91B5FCA4ECE03F150F
1507A21503A592C8FCABB612F8A430337DB238>70 D<B612F8A4C601E0C8FCB3A81778A4
17F817F0A31601A21603A21607160F161F167F923803FFE0B8FCA42D337DB235>76
D<B712F8EEFF8017E017F8C69039E0007FFCEE0FFE707E701380A27013C0A218E0A718C0
A24C1380A24C13004C5AEE7FFC91B612F017C04CC7FC02E0C9FCB3B612E0A433337DB23C
>80 D<D90FFC137090397FFF80F048B512E1000714FB390FF803FF391FE0007F4848133F
49130F007F140790C7FC1503481401A36D1300A27F6D140013F8387FFFC014FEECFFE06C
14F86C14FE816C1580000315C06C15E06C6C14F0131F010014F8140F9138007FFC153F15
1F150F00F01407A21503A27EA216F86C14076C15F07E6DEB0FE001E0131F01FEEB7FC000
FDB61200D8F87F5BD8F01F13F8D8E00113C026357BB331>83 D<003FB812F8A4D9F003EB
801FD87F80ED03FC01001501007E1600007C177CA20078173CA400F8173E48171EA4C716
00B3A9011FB612F0A437327DB13E>I<B66C90381FFFFCA4000101E0C8EA7E006C177C6E
15FC017F5E6E1401A2013F5E6E1403011F5E6E1407010F5E6E140F6D5E81171F6D93C7FC
6F5B6D153E6F137E6D157C6F13FC027F5C811601023F5CEDFC03021F5CEDFE07020F5CED
FF0F6E5C168F169F6E91C8FC16FF6E5BA26E5BA26F5AA36F5AA26F5AA26F5AA23E347EB2
43>86 D<EB7FFE0003B512C04814F0390FF00FFC391FF803FE81801680806C5A6C5AEA01
80C8FC147F011FB5FC90B6FC000313E0380FFE00EA1FF8485A485A485A5BA35C13C0007F
5B6D4813C03A3FF81F7FFF390FFFFE3F0003EBF81F39007FE00F28217EA02B>97
D<903807FF80013F13F090B512FC3903FE01FE4848487EEA0FF8EA1FF0EA3FE0A2007F6D
5A496C5A153000FF91C7FCA9127F7FA2003FEC07807F6C6C130F000FEC1F00D807FE133E
3903FF80FCC6EBFFF8013F13E0010790C7FC21217DA027>99 D<903803FF80013F13F090
B512FC48EB03FE3907FC007F4848EB3F804848EB1FC05B003FEC0FE0127F5B16F012FF15
0790B6FCA301C0C8FCA4127F7F123F16F06C7E000F14016C6CEB03E0D803FEEB0FC03A01
FF807F806C6CB51200011F13FC010313E024217EA029>101 D<EC3FE0903801FFF80107
13FC90381FF1FE90383FE3FFEB7FC3EBFF83A2481303EC01FEA2EC00781500A7B512FEA4
000190C7FCB3A7003F13FCA420347EB31B>I<16F890390FFC07FE90387FFF9F48B6127F
3907FC0FFC380FF003001F14FED9E001133E003FECFF1C1600A6001F5CEBF003000F5C39
07FC0FF890B512E0486C1380D90FFCC7FC48C9FCA37F7F90B512F015FE6CECFF8016E06C
15F06C15F84815FC121F393F80001F48C7EA03FE481401481400A46C14016C6CEB03FC6C
6CEB07F86C6CEB0FF0D80FFCEB7FE00003B61280C6ECFE00010F13E028327EA12C>I<EA
01FC12FFA4120F1207ADEC03FC91381FFF80027F7F9138F83FE09039FDE01FF0EBFFC04A
6C7E14005BA35BB2B500E1B512C0A42A347CB331>I<EA07E0487E487E487EA66C5A6C5A
6C5AC8FCA8EA01FC12FFA4120F1207B3A5B512E0A413357DB418>I<EA01FC12FFA4120F
1207ADED7FFFA4ED1FC04B5A037EC7FC5DEC03F8EC07E04A5AEC3F804AC8FC5C90B57E81
A281EC3FF09038FC1FF801F87F140F6E7E6E7E6E7F82806F7E6F7EB500C0B51280A42934
7DB32F>107 D<2703F803FEEB03FE00FF903B1FFFC01FFFC0027FD9E07F7F913BF81FF0
F81FF0903CF9E00FF9E00FF8260FFBC0EBFBC06CB4486CB4486C7E02001400495CA3495C
B2B500E0B500E0B512E0A443217CA04A>109 D<3903F803FC00FF90381FFF80027F7F91
38F83FE09039F9E01FF0380FFBC06CB4486C7E14005BA35BB2B500E1B512C0A42A217CA0
31>I<903803FF80011F13F090B512FE48EB01FF3A07FC007FC0D80FF0EB1FE0001F15F0
49130F003F15F8491307007F15FCA300FF15FEA8007F15FCA26D130F003F15F8001F15F0
6D131F6C6CEB3FE06C6CEB7FC03A01FF01FF006CEBFFFE013F13F80103138027217EA02C
>I<3803F83F00FFEBFFE001F913F09038FBC7F89038FF8FFC000F130F7E13FEA2EC07F8
EC03F09038FC00C01500B1B512F0A41E217DA024>114 D<9038FFE1C0000713FF5A383F
803F387E000F14075A14037EA26C6CC7FC13FCEBFFE06C13FC806CEBFF80000F14C06C14
E0C6FC010F13F0EB007F140F00F0130714037EA26C14E06C13076CEB0FC09038C01F8090
B5120000F913FC38E03FE01C217DA023>I<131EA5133EA3137EA213FE12011203120700
1FB51280B6FCA3D803FEC7FCB0EC03C0A71407D801FF13806CEB8F006DB4FCEB3FFCEB07
F01A2F7EAE22>I<D801FCEB03F800FFEB01FFA4000FEB001F0007140FB2151FA2153F15
7F6C6C497E000149EBFFC06CB512CF6D138F90380FFC0F2A217CA031>I
E
%EndDVIPSBitmapFont
/Fr 138[91 50 83 58 2[91 91 133 42 2[42 1[91 1[83 91
83 1[83 8[100 1[100 2[100 5[124 91 7[108 68[{
TeXBase1Encoding ReEncodeFont}20 149.44 /Helvetica-Bold
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: a4

%%EndSetup
%%Page: 1 1
1 0 bop 605 259 a Fr(V)-9 b(alidating)41 b(Streaming)g(XML)h(Documents)
1229 603 y Fq(Luc)30 b(Segou\014n)1147 691 y Fp(INRIA-Ro)r(cquencourt)
1148 778 y(Luc.Segou\014n@inria.fr)2216 603 y Fq(Victor)h(Vian)n(u)2721
572 y Fo(\003)2229 691 y Fp(U.C.)22 b(San)j(Diego)2184
778 y(vian)n(u@cs.ucsd.edu)0 1353 y Fn(ABSTRA)-5 b(CT)0
1445 y Fm(This)22 b(pap)r(er)e(in)n(v)n(estigates)i(the)f(on-line)g(v)l
(alidation)g(of)h(stream-)0 1532 y(ing)42 b(XML)g(do)r(cumen)n(ts)e
(with)i(resp)r(ect)g(to)g(a)g(DTD,)g(under)0 1619 y(memory)35
b(constrain)n(ts.)68 b(W)-6 b(e)36 b(\014rst)g(consider)i(v)l
(alidation)f(us-)0 1706 y(ing)e(constan)n(t)g(memory)-6
b(,)35 b(formalized)g(b)n(y)f(a)h(\014nite-state)g(au-)0
1793 y(tomaton)22 b(\()p Fl(fsa)p Fm(\).)33 b(W)-6 b(e)21
b(examine)h(t)n(w)n(o)g(\015a)n(v)n(ors)g(of)h(the)f(problem,)0
1880 y(dep)r(ending)i(on)h(whether)f(or)h(not)f(the)h(XML)f(do)r(cumen)
n(t)f(is)i(as-)0 1968 y(sumed)20 b(to)i(b)r(e)f(w)n(ell-formed.)34
b(The)21 b(main)g(results)h(of)g(the)f(pap)r(er)0 2055
y(pro)n(vide)h(conditions)g(on)g(the)g(DTDs)g(under)f(whic)n(h)h(v)l
(alidation)0 2142 y(of)33 b(either)g(\015a)n(v)n(or)f(can)g(b)r(e)h
(done)f(using)h(an)f Fl(fsa)p Fm(.)55 b(F)-6 b(or)32
b(DTDs)0 2229 y(that)26 b(cannot)g(b)r(e)f(v)l(alidated)h(b)n(y)f(an)h
Fl(fsa)p Fm(,)g(w)n(e)g(in)n(v)n(estigate)h(t)n(w)n(o)0
2316 y(alternativ)n(es.)38 b(The)26 b(\014rst)g(relaxes)i(the)e
(constan)n(t)g(memory)f(re-)0 2403 y(quiremen)n(t)f(b)n(y)i(allo)n
(wing)i(a)e(stac)n(k)g(b)r(ounded)g(in)g(the)f(depth)h(of)0
2491 y(the)h(XML)f(do)r(cumen)n(t,)g(while)i(main)n(taining)f(the)f
(determinis-)0 2578 y(tic,)20 b(one-pass)e(requiremen)n(t.)30
b(The)18 b(second)g(approac)n(h)g(consists)0 2665 y(in)30
b(re\014ning)g(the)g(DTD)g(to)h(pro)n(vide)f(additional)h(information)0
2752 y(that)25 b(allo)n(ws)j(v)l(alidation)e(b)n(y)f(an)h
Fl(fsa)p Fm(.)0 2956 y Fn(1.)99 b(INTR)m(ODUCTION)0 3047
y Fm(The)37 b(Extended)g(Markup)f(Language)j(\(XML\))d(is)i(emerging)0
3134 y(as)31 b(the)e(standard)h(for)h(data)g(exc)n(hange)f(on)g(the)f
(W)-6 b(eb.)48 b(Man)n(y)0 3222 y(applications,)27 b(ranging)f(from)f
(e-commerce)f(and)h(B2B)i(to)e(sci-)0 3309 y(en)n(ti\014c)k
(applications)h(monitoring)f(sensor)h(or)f(satellite)i(data,)0
3396 y(increasingly)25 b(require)f(on-line)g(pro)r(cessing)h(of)g
(large)g(amoun)n(ts)0 3483 y(of)37 b(data)g(in)f(XML)g(format)g(using)h
(limited)e(memory)-6 b(.)64 b(Suc)n(h)0 3570 y(pro)r(cessing)24
b(includes)f(querying)e(XML)i(do)r(cumen)n(ts,)f(comput-)0
3657 y(ing)37 b(running)g(aggregates)i(of)f(streams)f(of)h(n)n
(umerical)f(data,)0 3745 y(and)17 b(v)l(alidating)h(XML)f(do)r(cumen)n
(ts)e(against)k(giv)n(en)e(Do)r(cumen)n(t)0 3832 y(T)n(yp)r(e)25
b(De\014nitions)h(\(DTDs\).)0 4006 y(In)j(this)h(pap)r(er)f(w)n(e)h
(tak)n(e)g(a)f(\014rst)h(step)f(to)n(w)n(ards)i(a)f(formal)g(in-)0
4093 y(v)n(estigation)20 b(of)g(pro)r(cessing)g(streaming)f(XML)g(do)r
(cumen)n(ts,)g(b)n(y)0 4180 y(studying)27 b(the)g(v)l(alidation)h
(question.)40 b(This)28 b(is)g(an)f(imp)r(ortan)n(t)0
4268 y(practical)f(problem,)f(whic)n(h)g(is)h(already)f(b)r(eing)h(tac)
n(kled)f(in)g(in-)p 0 4332 741 4 v 2 4377 a Fo(\003)38
4409 y Fm(This)d(author)g(supp)r(orted)f(in)g(part)g(b)n(y)g(the)g(NSF)
g(under)f(gran)n(t)0 4483 y(n)n(um)n(b)r(er)k(I)r(IS-9802288.)2050
1353 y(dustry)-6 b(,)28 b(with)g(some)h(commercial)f(pro)r(ducts)g(dev)
n(elop)r(ed)h(\(see)2050 1440 y(related)d(w)n(ork)g(b)r(elo)n(w\).)2050
1615 y(In)k(its)i(most)f(restrictiv)n(e)h(form,)h(the)e(problem)g(of)h
(v)l(alidating)2050 1702 y(streaming)39 b(XML)f(is)i(to)f(v)n(erify)g
(that)g(an)g(XML)f(do)r(cumen)n(t)2050 1789 y(is)33 b(v)l(alid)h(with)f
(resp)r(ect)h(to)f(a)h(giv)n(en)f(DTD)g(in)g(a)h(single)g(pass)2050
1876 y(and)24 b(using)h(a)f(\014xed)g(amoun)n(t)f(of)i(memory)-6
b(,)23 b(dep)r(ending)h(on)g(the)2050 1963 y(DTD)35 b(but)f(not)h(on)g
(the)g(size)h(of)g(the)f(XML)g(do)r(cumen)n(t.)62 b(In)2050
2051 y(other)20 b(w)n(ords,)i(v)l(alidation)f(is)g(done)f(b)n(y)g(a)h
(\014nite-state)f(automa-)2050 2138 y(ton)27 b(\()p Fl(fsa)p
Fm(\))h(p)r(erforming)g(a)h(pass)f(on)g(the)g(XML)g(do)r(cumen)n(t)e
(as)2050 2225 y(it)37 b(streams)g(through)f(the)h(net)n(w)n(ork,)j
(with)d(constan)n(t)g(mem-)2050 2312 y(ory)-6 b(.)52
b(The)31 b(problem)g(comes)h(in)f(t)n(w)n(o)h(\015a)n(v)n(ors,)i(dep)r
(ending)d(on)2050 2399 y(whether)22 b(or)h(not)g(v)l(alidation)g
(includes)g(c)n(hec)n(king)g(that)f(the)g(in-)2050 2487
y(put)31 b(is)h(a)h(w)n(ell-formed)f(XML)g(do)r(cumen)n(t.)52
b(V)-6 b(alidation)32 b(that)2050 2574 y(includes)17
b(c)n(hec)n(king)g(w)n(ell-formedness)h(is)g(referred)g(to)g(as)g
Fk(str)l(ong)2050 2661 y(validation)p Fm(.)34 b(Chec)n(king)24
b(satisfaction)i(of)e(the)g(DTD)f(under)g(the)2050 2748
y(assumption)30 b(that)g(the)h(input)f(is)h(a)g(w)n(ell-formed)g(XML)g
(do)r(c-)2050 2835 y(umen)n(t)c(is)i(referred)g(to)g(simply)f(as)i
Fk(validation)p Fm(.)44 b(It)28 b(is)i(easy)f(to)2050
2922 y(see)24 b(that)g(v)l(alidation)h(of)g(either)g(\015a)n(v)n(or)f
(is)g(not)g(p)r(ossible)i(for)f(all)2050 3010 y(DTDs)18
b(using)h(an)f Fl(fsa)p Fm(.)32 b(DTDs)19 b(for)g(whic)n(h)g
(\(strong\))f(v)l(alidation)2050 3097 y(can)29 b(b)r(e)g(done)g(using)h
(an)f Fl(fsa)h Fm(are)f(referred)h(to)g(as)g(\(strongly\))2050
3184 y(recognizable)d(DTDs.)2050 3358 y(The)38 b(main)f(results)i(of)g
(the)e(pap)r(er)i(pro)n(vide)e(conditions)i(on)2050 3445
y(DTDs)i(under)g(whic)n(h)g(they)g(are)h(\(strongly\))g(recognizable.)
2050 3533 y(The)31 b(c)n(haracterization)h(of)g(strongly)f
(recognizable)i(DTDs)d(is)2050 3620 y(straigh)n(tforw)n(ard:)i(the)17
b(DTD)f(has)i(to)f(b)r(e)g(non-recursiv)n(e.)31 b(Char-)2050
3707 y(acterizing)40 b(recognizable)i(DTDs)d(is)h(m)n(uc)n(h)d(more)i
(in)n(tricate)2050 3794 y(and)c(tec)n(hnically)g(di\016cult.)64
b(T)-6 b(o)35 b(put)g(the)g(problem)f(in)h(p)r(er-)2050
3881 y(sp)r(ectiv)n(e,)i(note)e(that)f(v)l(alidation)h(with)g(resp)r
(ect)g(to)g(a)g(DTD)2050 3968 y(amoun)n(ts)23 b(to)i(c)n(hec)n(king)f
(mem)n(b)r(ership)f(of)i(the)f(tree)h(asso)r(ciated)2050
4056 y(with)39 b(the)f(XML)g(do)r(cumen)n(t)f(in)i(a)g(regular)g(tree)g
(language,)2050 4143 y(while)d(v)l(alidation)h(b)n(y)d(an)i
Fl(fsa)g Fm(amoun)n(ts)f(to)h(acceptance)g(of)2050 4230
y(the)e(tree)g(b)n(y)g(a)g(restricted)h(form)f(of)i(tree-w)n(alking)f
(automa-)2050 4317 y(ton.)k(Th)n(us,)28 b(the)f(connection)g(b)r(et)n
(w)n(een)g Fl(fsa)h Fm(and)f(DTDs)g(can)2050 4404 y(b)r(e)32
b(view)n(ed)g(as)h(a)g(v)l(arian)n(t)f(\(alb)r(eit)g(simpler\))g(of)h
(the)f(connec-)2050 4491 y(tion)38 b(b)r(et)n(w)n(een)h(tree-w)n
(alking)g(automata)f(and)g(regular)i(tree)2050 4579 y(languages,)26
b(a)f(long-standing)g(op)r(en)f(problem)g([8,)i(9].)34
b(W)-6 b(e)24 b(ob-)2050 4666 y(tain)32 b(sev)n(eral)i(kinds)e(of)h
(results.)56 b(First,)35 b(w)n(e)e(precisely)g(c)n(har-)2050
4753 y(acterize)d(recognizable)i(DTDs)d(when)h(the)f(DTDs)g(are)h
("fully)2050 4840 y(recursiv)n(e",)k(i.e.)55 b(all)33
b(elemen)n(t)f(tags)h(that)f(lead)g(to)h(recursiv)n(e)2050
4927 y(tags)c(are)h(m)n(utually)d(recursiv)n(e.)45 b(The)29
b(condition)g(w)n(e)g(pro)n(vide)2050 5015 y(can)35 b(b)r(e)h(tested)f
(in)h Fl(exptime)d Fm(with)j(resp)r(ect)g(to)g(the)f(size)h(of)2050
5102 y(the)d(DTD,)i(and)e(in)i(p)r(olynomial)f(time)f(for)i(DTDs)g
(using)f(1-)2050 5189 y(unam)n(biguous)24 b(regular)i(expressions,)g
(as)g(required)e(b)n(y)g(XML-)2050 5276 y(Sc)n(hema)e([4].)34
b(As)24 b(a)f(side)h(e\013ect,)g(w)n(e)g(obtain)f(an)g(algorithm)h(for)
p eop
%%Page: 2 2
2 1 bop 0 83 a Fm(constructing)22 b(from)f(a)h(fully)g(recursiv)n(e)f
(DTD)g(a)h(standard)f Fl(fsa)0 170 y Fm(that)26 b(\(i\))g(alw)n(a)n(ys)
h(accepts)f(only)g(do)r(cumen)n(ts)f(v)l(alid)h(w.r.t.)37
b(the)0 257 y(DTD)23 b(\(but)g(p)r(ossibly)h(more\),)f(and)g(\(ii\))h
(accepts)g Fk(pr)l(e)l(cisely)h Fm(the)0 345 y(do)r(cumen)n(ts)f(v)l
(alid)h(w.r.t.)35 b(the)25 b(DTD,)g(whenev)n(er)f(the)h(DTD)g(is)0
432 y(recognizable.)49 b(The)30 b(standard)f Fl(fsa)h
Fm(can)g(b)r(e)g(constructed)f(in)0 519 y(time)c(exp)r(onen)n(tial)h
(in)f(the)h(DTD.)0 693 y(F)-6 b(or)23 b(DTDs)g(that)g(are)h(not)f
(fully)h(recursiv)n(e,)g(a)f(precise)h(c)n(harac-)0 780
y(terization)31 b(of)g(recognizabilit)n(y)g(remains)f(an)f(op)r(en)h
(question.)0 868 y(W)-6 b(e)31 b(pro)n(vide)h(a)g(set)g(of)h(necessary)
f(conditions)h(for)g(recogniz-)0 955 y(abilit)n(y)-6
b(,)25 b(as)g(w)n(ell)h(as)f(an)g(extension)f(yielding)h(a)g
(su\016cien)n(t)g(con-)0 1042 y(dition.)51 b(F)-6 b(urthermore,)32
b(the)e(construction)i(of)g(the)e(standard)0 1129 y Fl(fsa)23
b Fm(can)g(b)r(e)g(extended)f(from)g(the)h(fully)g(recursiv)n(e)g(case)
h(to)f(ar-)0 1216 y(bitrary)g(DTDs.)33 b(It)23 b(turns)f(out)h(that)g
(the)f(su\016cien)n(t)h(condition)0 1303 y(is)c(a)g(c)n
(haracterization)h(of)f(the)f(DTDs)h(for)g(whic)n(h)f(the)g(standard)0
1391 y Fl(fsa)27 b Fm(accepts)g(precisely)g(the)f(do)r(cumen)n(ts)g(v)l
(alid)g(with)h(resp)r(ect)0 1478 y(to)f(the)f(DTD.)0
1652 y(F)-6 b(or)31 b(the)g(case)h(when)f(v)l(alidation)h(using)f(an)g
Fl(fsa)h Fm(is)f(not)g(p)r(os-)0 1739 y(sible,)j(w)n(e)f(consider)f
(sev)n(eral)h(alternativ)n(es.)53 b(First,)35 b(w)n(e)d(relax)0
1826 y(the)18 b(constan)n(t)g(memory)e(requiremen)n(t)h(and)h(allo)n(w)
i(as)f(auxiliary)0 1914 y(memory)f(a)j(stac)n(k)f(of)h(depth)e(linear)i
(in)f(the)g(depth)f(of)i(the)e(XML)0 2001 y(do)r(cumen)n(t.)59
b(This)35 b(is)g(often)f(reasonable)i(in)e(practice,)k(since)0
2088 y(XML)31 b(do)r(cumen)n(ts)f(are)i(t)n(ypically)f(fairly)h(shallo)
n(w,)j(although)0 2175 y(they)26 b(ma)n(y)g(b)r(e)g(v)n(ery)g(large.)40
b(W)-6 b(e)26 b(sho)n(w)i(that)e(ev)n(ery)h(DTD)f(can)0
2262 y(b)r(e)35 b(v)l(alidated)h(b)n(y)e(a)i Fk(deterministic)h
Fm(pushdo)n(wn)e(automaton)0 2350 y(whose)19 b(stac)n(k)f(is)g(linear)h
(in)f(the)f(depth)g(of)i(the)e(input)h(do)r(cumen)n(t.)0
2437 y(Moreo)n(v)n(er,)26 b(this)e(holds)h(ev)n(en)e(for)i(DTDs)f
(extended)f(with)i Fk(sp)l(e-)0 2524 y(cialization)p
Fm(,)32 b(a)g(form)e(of)i(elemen)n(t)e(subt)n(yping)f(presen)n(t)i(in)g
(re-)0 2611 y(cen)n(t)36 b(prop)r(osals)h(suc)n(h)f(as)h(XML-Sc)n
(hema.)64 b(An)35 b(orthogonal)0 2698 y(approac)n(h)26
b(is)g(to)f(explore)h(whether)g(non-recognizable)g(DTDs)0
2785 y(can)e(b)r(e)f(t)n(w)n(eak)n(ed)g(in)g(reasonable)i(w)n(a)n(ys)f
(so)g(as)g(to)f(b)r(ecome)g(rec-)0 2873 y(ognizable.)54
b(W)-6 b(e)31 b(sho)n(w)i(that)e(for)h(ev)n(ery)f(DTD)h(one)g(can)f
(\014nd)0 2960 y(a)d(sp)r(ecialization)j(of)e(it)f(whic)n(h)g(is)g
(recognizable.)44 b(In)n(tuitiv)n(ely)-6 b(,)0 3047 y(this)22
b(is)g(obtained)f(b)n(y)g(re\014ning)g(the)g(tags)i(of)f(the)f
(original)j(DTD)0 3134 y(to)h(include)f(more)g(information)h(useful)g
(for)g(quic)n(k)e(v)l(alidation.)0 3221 y(This)d(pro)n(vides)f(a)h
(trade-o\013)f(b)r(et)n(w)n(een)h(\\accuracy")g(of)g(the)f(tags)0
3308 y(and)g(the)g(abilit)n(y)g(to)h(p)r(erform)f(e\016cien)n(t)g
(streaming)g(v)l(alidation.)0 3483 y(Although)i(limited)h(to)g(v)l
(alidation,)h(this)f(pap)r(er)g(pro)n(vides)g(nec-)0
3570 y(essary)36 b(groundw)n(ork)g(for)h(further)e(in)n(v)n(estigating)
i(the)e(prob-)0 3657 y(lem)h(of)h(querying)f(streaming)g(XML)g(do)r
(cumen)n(ts.)66 b(Indeed,)0 3744 y(the)31 b(tec)n(hnical)i(mac)n
(hinery)d(dev)n(elop)r(ed)i(here)f(is)i(lik)n(ely)e(to)h(b)r(e)0
3831 y(useful)26 b(for)h(the)e(more)g(complex)g(querying)g(problem.)0
4115 y Fj(1.0.0.1)89 b(Related)22 b(work)0 4207 y Fm(As)37
b(far)h(as)g(w)n(e)g(kno)n(w,)i(there)e(is)f(no)h(formal)g(w)n(ork)f
(on)g(v)l(ali-)0 4294 y(dating)32 b(or)g(querying)f(streaming)h(XML.)g
(Heuristics)g(for)h(the)0 4381 y(ev)l(aluation)k(of)g(regular)g(path)f
(queries)h(in)f(streaming)g(XML)0 4468 y(do)r(cumen)n(ts)i(are)i
(considered)g(in)g([12].)77 b(This)40 b(is)g(part)g(of)g(a)0
4555 y(larger)33 b(protot)n(yp)r(e,)g(called)f Fk(T)-6
b(ukwila)p Fm(,)33 b(designed)f(for)h(pro)r(cess-)0 4643
y(ing)e(streaming)h(XML)f(do)r(cumen)n(ts)e(curren)n(tly)i(dev)n(elop)r
(ed)f(in)0 4730 y(the)25 b(Univ)n(ersit)n(y)g(of)h(W)-6
b(ashington)26 b([13].)0 4904 y(The)34 b(Streaming)g(XML)g(V)-6
b(alidator)34 b(is)h(a)f(commercial)g(pro)r(d-)0 4991
y(uct)25 b(from)g(TIBCO)h(that)g(p)r(erforms)f(v)l(alidation)h(of)g
(streaming)0 5078 y(XML)17 b(with)g(resp)r(ect)h(to)f(a)h(DTD)f(\(see)g
(h)n(ttp://www.tib)r(co.com\).)0 5166 y(T)-6 b(o)23 b(our)f
(understanding,)h(their)g(approac)n(h)f(is)h(based)g(on)f(tradi-)0
5253 y(tional)c(parsing)g(tec)n(hniques)e(enhanced)h(with)g(heuristics)
h(geared)0 5340 y(to)n(w)n(ards)26 b(streaming)g(inputs.)2050
83 y(A)d(lot)i(of)g(w)n(ork)g(has)f(b)r(een)g(done)g(on)h(con)n(tin)n
(uous)f(queries)g(o)n(v)n(er)2050 170 y(the)d(In)n(ternet)f([6,)j(3])f
(and)f(on)g(query)f(subscription)i([16,)h(14].)35 b(In)2050
257 y(this)24 b(scenario)i(the)e(query)f(is)i(\014xed)e(and)i(outputs)e
(a)i(stream)f(of)2050 345 y(data)d(pro)r(duced)f(on-line)h(from)g(an)f
(incoming)h(stream)g(of)g(data.)2050 432 y(The)36 b(emphasis)g(is)h(on)
f(\014ltering)h(and)e(incremen)n(tal)h(main)n(te-)2050
519 y(nance)25 b(of)i(views,)g(including)f(aggregate)i(functions.)36
b(Another)2050 606 y(large)c(b)r(o)r(dy)e(of)i(w)n(ork)f(fo)r(cuses)h
(on)f(n)n(umerical)f(data)h(streams)2050 693 y(suc)n(h)25
b(as)h(sensor)h(data.)2050 868 y(The)k(pap)r(er)g(is)h(organized)h(as)e
(follo)n(ws.)54 b(Our)31 b(abstraction)h(of)2050 955
y(XML)23 b(do)r(cumen)n(ts)f(and)g(DTDs,)i(as)g(w)n(ell)h(as)e(basic)h
(notions)g(on)2050 1042 y(tree)31 b(automata)g(are)h(review)n(ed)g(in)f
(the)g(Preliminaries.)53 b(Sec-)2050 1129 y(tion)36 b(3)g(concerns)g
(strongly)h(recognizable)g(DTDs.)66 b(Section)2050 1216
y(4)29 b(presen)n(ts)g(the)g(results)h(on)f(recognizable)i(DTDs.)45
b(Alterna-)2050 1303 y(tiv)n(e)21 b(approac)n(hes)i(to)f(v)l(alidation)
g(are)g(describ)r(ed)g(in)g(Section)g(5.)2050 1391 y(Finally)-6
b(,)26 b(brief)g(conclusions)h(are)f(pro)n(vided)f(in)h(Section)g(6.)
2050 1617 y Fn(2.)99 b(PRELIMIN)n(ARIES)2050 1708 y Fm(W)-6
b(e)22 b(in)n(tro)r(duce)g(here)g(the)g(basic)i(formalism)e(used)g
(throughout)2050 1795 y(the)d(pap)r(er,)j(including)e(our)g
(abstraction)h(of)g(XML)f(do)r(cumen)n(ts)2050 1882 y(and)f(DTDs.)32
b(W)-6 b(e)20 b(also)h(recall)g(informally)f(some)f(basic)h(notions)
2050 1970 y(related)26 b(to)g(tree)g(automata)f(and)g(languages.)2050
2144 y(Let)g(\006)h(b)r(e)g(a)g(\014nite)f(alphab)r(et.)2050
2370 y Fj(T)-5 b(r)m(ee)20 b(document)2050 2461 y Fm(W)-6
b(e)21 b(abstract)h(XML)f(do)r(cumen)n(ts)f(b)n(y)h(\\tree)h(do)r
(cumen)n(ts")e(cap-)2050 2549 y(turing)36 b(the)g(nesting)g(structure)g
(of)h(elemen)n(ts)e(in)i(the)e(do)r(cu-)2050 2636 y(men)n(t.)57
b(A)33 b Fk(tr)l(e)l(e)k(do)l(cument)42 b Fi(t)34 b Fm(o)n(v)n(er)f
(\006)h(is)h(a)f(\014nite)f(unrank)n(ed)2050 2723 y(tree)g(with)h(lab)r
(els)g(in)g(\006)g(and)f(an)g(order)h(on)f(the)g(c)n(hildren)g(of)2050
2810 y(eac)n(h)27 b(no)r(de.)40 b(The)28 b(follo)n(wing)i(represen)n
(ts)d(a)h(simple)f(tree)h(do)r(c-)2050 2897 y(umen)n(t.)2275
3094 y
 tx@Dict begin tx@NodeDict begin {3.87498 0.0 4.43054 2.21527 2.71246
} false /N@T-0 16 {InitRnode } NewNode end end
 2275 3094 a Fi(r)2122 3259 y
 tx@Dict begin tx@NodeDict begin {3.87498 0.0 4.90031 2.45015 2.71246
} false /N@T-0-0 16 {InitRnode } NewNode end end
 2122 3259 a Fi(a)2142
3237 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0 /N@T-0-0 InitNC { NCLine  } if end gsave 0.8 SLW 0.
setgray 0 setlinecap stroke  grestore  grestore end
 2142 3237 a 2050 3425 a
 tx@Dict begin tx@NodeDict begin {6.25 0.0 3.96387 1.98193 2.71246
} false /N@T-0-0-0 16 {InitRnode } NewNode end end
 2050 3425 a Fi(b)2066
3402 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0-0 /N@T-0-0-0 InitNC { NCLine  } if end gsave 0.8 SLW
0. setgray 0 setlinecap stroke  grestore  grestore end
 2066 3402 a 2050 3590 a
 tx@Dict begin tx@NodeDict begin {3.87498 0.0 4.00447 2.00223 2.71246
} false /N@T-0-0-0-0 16 {InitRnode } NewNode end end
 2050 3590 a Fi(c)2066
3568 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0-0-0 /N@T-0-0-0-0 InitNC { NCLine  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 2066 3568 a 2201 3425 a
 tx@Dict begin tx@NodeDict begin {3.87498 0.0 4.00447 2.00223 2.71246
} false /N@T-0-0-1 16 {InitRnode } NewNode end end
 2201 3425 a Fi(c)2218
3402 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0-0 /N@T-0-0-1 InitNC { NCLine  } if end gsave 0.8 SLW
0. setgray 0 setlinecap stroke  grestore  grestore end
 2218 3402 a 2424 3259 a
 tx@Dict begin tx@NodeDict begin {3.87498 0.0 4.90031 2.45015 2.71246
} false /N@T-0-1 16 {InitRnode } NewNode end end
 2424 3259 a Fi(a)2444
3237 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0 /N@T-0-1 InitNC { NCLine  } if end gsave 0.8 SLW 0.
setgray 0 setlinecap stroke  grestore  grestore end
 2444 3237 a 2352 3425 a
 tx@Dict begin tx@NodeDict begin {6.25 0.0 3.96387 1.98193 2.71246
} false /N@T-0-1-0 16 {InitRnode } NewNode end end
 2352 3425 a Fi(b)2369
3402 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0-1 /N@T-0-1-0 InitNC { NCLine  } if end gsave 0.8 SLW
0. setgray 0 setlinecap stroke  grestore  grestore end
 2369 3402 a 2503 3425 a
 tx@Dict begin tx@NodeDict begin {3.87498 0.0 4.00447 2.00223 2.71246
} false /N@T-0-1-1 16 {InitRnode } NewNode end end
 2503 3425 a Fi(c)2520
3402 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0-1 /N@T-0-1-1 InitNC { NCLine  } if end gsave 0.8 SLW
0. setgray 0 setlinecap stroke  grestore  grestore end
 2520 3402 a 2050 3767 a Fj(String)22 b(r)m(epr)m(esentation)2050
3858 y Fm(XML)h(do)r(cumen)n(ts)f(are)i(a)g(string)g(represen)n(tation)
f(of)i(trees)e(us-)2050 3945 y(ing)17 b(op)r(ening)h(and)f(closing)i
(tags)f(for)g(eac)n(h)g(elemen)n(t.)31 b(A)17 b(stream-)2050
4032 y(ing)36 b(XML)f(pro)r(cessor)i(sees)g(the)e(sequence)h(of)g(op)r
(ening)g(and)2050 4120 y(closing)19 b(tags)f(in)g(the)f(order)h(in)g
(whic)n(h)f(they)g(app)r(ear)h(in)g(the)f(do)r(c-)2050
4207 y(umen)n(t.)41 b(It)29 b(is)g(therefore)h(useful)f(to)g(consider)g
(explicitly)g(this)2050 4294 y(string)k(represen)n(tation)g(of)h(an)f
(XML)g(do)r(cumen)n(t.)55 b(F)-6 b(or)33 b(eac)n(h)2050
4381 y Fi(a)26 b Fh(2)g Fm(\006)j(let)g Fi(a)f Fm(itself)i(represen)n
(t)f(the)f(op)r(ening)h(tag)g(and)g(\026)-39 b Fi(a)29
b Fm(rep-)2050 4468 y(resen)n(t)c(the)h(closing)h(tag)f(for)h
Fi(a)p Fm(.)34 b(Let)3151 4449 y(\026)3142 4468 y(\006)22
b(=)f Fh(f)q Fm(\026)-39 b Fi(a)22 b Fh(j)f Fi(a)g Fh(2)h
Fm(\006)p Fh(g)p Fm(.)35 b(With)2050 4555 y(this)19 b(notation,)i(the)d
(string)i(asso)r(ciated)h(to)e(the)f(tree)h(do)r(cumen)n(t)2050
4643 y(ab)r(o)n(v)n(e)j(is)g Fi(r)r(abc)r Fm(\026)-40
b Fi(c)2512 4623 y Fm(\026)2514 4643 y Fi(bc)r Fm(\026)g
Fi(c)r Fm(\026)h Fi(a)o(ab)2725 4623 y Fm(\026)2728 4643
y Fi(bc)r Fm(\026)f Fi(c)r Fm(\026)g Fi(a)t Fm(\026)e
Fi(r)r Fm(.)33 b(More)23 b(generally)-6 b(,)24 b(w)n(e)f(asso)r(ciate)
2050 4730 y(to)f(eac)n(h)h(tree)f(do)r(cumen)n(t)f Fi(t)h
Fm(a)h(string)g(represen)n(tation)f(denoted)2050 4817
y([)p Fi(t)p Fm(])f(and)g(de\014ned)f(inductiv)n(ely)g(as)i(follo)n
(ws:)34 b(if)22 b Fi(t)f Fm(is)h(a)f(single)h(ro)r(ot)2050
4904 y(lab)r(eled)31 b Fi(a)p Fm(,)g(then)f([)p Fi(t)p
Fm(])f(=)g Fi(a)q Fm(\026)-39 b Fi(a)o Fm(;)33 b(if)e
Fi(t)f Fm(consists)h(of)h(a)e(ro)r(ot)h(lab)r(eled)2050
4991 y Fi(a)d Fm(and)g(subtrees)h Fi(t)2602 4999 y Fg(1)2649
4991 y Fi(:)14 b(:)f(:)g(t)2780 5000 y Ff(k)2846 4991
y Fm(then)28 b([)p Fi(t)p Fm(])56 b(=)f Fi(a)p Fm([)p
Fi(t)3355 4999 y Fg(1)3389 4991 y Fm(])14 b Fi(:)f(:)g(:)g
Fm([)p Fi(t)3575 5000 y Ff(k)3613 4991 y Fm(])q(\026)-39
b Fi(a)p Fm(.)44 b(Note)2050 5078 y(that)20 b(\006)g(and)2439
5060 y(\026)2430 5078 y(\006)h(can)f(b)r(e)g(view)n(ed)h(as)f(op)r
(ening)h(and)f(closing)i(m)n(ul-)2050 5166 y(tisorted)31
b(paren)n(thesis,)h(and)e(for)h(eac)n(h)g(tree)f(do)r(cumen)n(t)f
Fi(t)h Fm(the)2050 5253 y(string)19 b([)p Fi(t)p Fm(])h(is)g(a)g(w)n
(ell-balanced)g(string)g(o)n(v)n(er)f(\006)t Fh([)3443
5234 y Fm(\026)3433 5253 y(\006)i(corresp)r(ond-)2050
5340 y(ing)30 b(to)h(a)f(depth-\014rst)f(tra)n(v)n(ersal)i(of)g
Fi(t)p Fm(.)48 b(If)30 b Fi(T)41 b Fm(is)31 b(a)f(set)h(of)g(tree)p
eop
%%Page: 3 3
3 2 bop 0 83 a Fm(do)r(cumen)n(ts,)25 b(w)n(e)h(denote)g(b)n(y)f
Fh(L)p Fm(\()p Fi(T)11 b Fm(\))25 b(the)h(language)h(consisting)0
170 y(of)22 b(the)e(string)h(represen)n(tations)h(of)f(the)g(tree)f(do)
r(cumen)n(ts)g(in)h Fi(T)11 b Fm(.)0 401 y Fj(T)-5 b(r)m(ee)21
b(types)g(and)h(DTDs)0 492 y Fm(DTDs)c(and)f(their)g(v)l(arian)n(ts)h
(pro)n(vide)f(a)h(t)n(yping)f(mec)n(hanism)e(for)0 579
y(XML)29 b(do)r(cumen)n(ts.)45 b(W)-6 b(e)29 b(will)i(use)e(sev)n(eral)
i(notions)f(of)g(t)n(yp)r(es)0 667 y(for)20 b(trees.)32
b(The)20 b(\014rst)e(corresp)r(onds)i(closely)g(to)f(the)g(DTDs)g(pro-)
0 754 y(p)r(osed)27 b(for)g(XML)f(do)r(cumen)n(ts,)g(and)g(w)n(e)h
(therefore)g(\(b)n(y)f(sligh)n(t)0 841 y(abuse\))36 b(con)n(tin)n(ue)f
(to)h(use)g(the)g(same)f(term.)65 b(A)35 b(DTD)h(con-)0
928 y(sists)27 b(of)g(an)g(extended)e(con)n(text-free)h(grammar)1416
896 y Fg(1)1476 928 y Fm(o)n(v)n(er)g(alpha-)0 1015 y(b)r(et)35
b(\006)h(\(w)n(e)f(mak)n(e)f(no)i(distinction)f(b)r(et)n(w)n(een)h
(terminal)f(and)0 1102 y(non-terminal)28 b(sym)n(b)r(ols\).)43
b(A)28 b(tree)h(do)r(cumen)n(t)f(o)n(v)n(er)g(\006)i(satis-)0
1190 y(\014es)g(a)h(DTD)f Fi(d)g Fm(\(or)h(is)g(v)l(alid)f(w.r.t.)50
b Fi(d)p Fm(\))30 b(if)h(it)g(is)g(a)f(deriv)l(ation)0
1277 y(tree)g(of)h(the)e(grammar.)47 b(F)-6 b(or)30 b(example,)g(the)g
(tree)g(do)r(cumen)n(t)0 1495 y(ab)r(o)n(v)n(e)d(is)h(v)l(alid)g
(w.r.t.)40 b(the)27 b(DTD)1011 1464 y Fg(2)1045 1495
y Fm(:)1139 1361 y Fi(r)c Fh(!)e Fi(a)1336 1329 y Fo(\003)1139
1448 y Fi(a)g Fh(!)g Fi(bc)1139 1540 y(b)g Fh(!)g Fi(c)1324
1509 y Fg(?)1139 1627 y Fi(c)h Fh(!)f Fi(\017)1417 1495
y Fm(.)39 b(Since)28 b(regu-)0 1714 y(lar)i(expressions)h(are)f(closed)
h(under)e(union,)i(w)n(e)f(can)g(assume)0 1801 y(w.l.o.g.)44
b(that)28 b(eac)n(h)g(DTD)g(has)g(a)h(unique)d(rule)j
Fi(a)53 b Fh(!)25 b Fi(R)1693 1809 y Ff(a)1758 1801 y
Fm(for)0 1888 y(eac)n(h)35 b(sym)n(b)r(ol)g Fi(a)i Fh(2)h
Fm(\006.)63 b(In)35 b(the)g(follo)n(wing)j Fi(R)1401
1896 y Ff(a)1474 1888 y Fm(will)e(denote)0 1975 y(b)r(oth)26
b(the)f(regular)i(expression)g(and)f(the)f(corresp)r(onding)i(reg-)0
2063 y(ular)32 b(language.)53 b(The)32 b(set)g(of)g(tree)g(do)r(cumen)n
(ts)e(satisfying)j(a)0 2150 y(DTD)25 b Fi(d)h Fm(is)g(denoted)f(b)n(y)g
Fi(S)t(AT)11 b Fm(\()p Fi(d)p Fm(\).)33 b(W)-6 b(e)26
b(also)h(denote)e(b)n(y)g Fh(L)p Fm(\()p Fi(d)p Fm(\))0
2237 y(the)35 b(language)h(o)n(v)n(er)f(\006)23 b Fh([)806
2218 y Fm(\026)798 2237 y(\006)35 b(consisting)h(of)g(the)e(string)i
(rep-)0 2324 y(resen)n(tations)g(of)f(all)h(tree)e(do)r(cumen)n(ts)g
(in)g Fi(S)t(AT)11 b Fm(\()p Fi(d)p Fm(\),)36 b(that)f(is)0
2411 y Fh(f)p Fm([)p Fi(t)p Fm(])28 b Fh(j)f Fi(t)f Fh(2)h
Fi(S)t(AT)11 b Fm(\()p Fi(d)p Fm(\))p Fh(g)p Fm(.)44
b(Clearly)-6 b(,)31 b Fh(L)p Fm(\()p Fi(d)p Fm(\))d(is)h(a)h(con)n
(text-free)e(lan-)0 2498 y(guage)d(for)f(ev)n(ery)f(DTD)h
Fi(d)p Fm(.)34 b(In)23 b(fact,)i(suc)n(h)f(languages)h(of)g(w)n(ell-)0
2586 y(balanced)35 b(strings)g(of)h(m)n(ultisorted)e(paren)n(thesis)h
(ha)n(v)n(e)f(b)r(een)0 2673 y(studied)g(in)h(formal)g(language)h
(theory)f(under)e(the)i(name)f(of)0 2760 y Fk(Dyck)28
b(languages)f Fm([10].)0 2934 y(The)34 b(most)g(recen)n(t)f(DTD)h(prop)
r(osal,)k(called)d(XML-Sc)n(hema,)0 3021 y(imp)r(oses)g(a)h
(restriction)g(on)f(the)g(regular)h(expressions)g(asso-)0
3109 y(ciated)h(with)h(eac)n(h)f(sym)n(b)r(ol:)56 b(the)36
b(expressions)i(ha)n(v)n(e)e(to)h(b)r(e)0 3196 y(1-unam)n(biguous.)i
(This)29 b(prop)r(ert)n(y)e(guaran)n(tees)h(that)g(the)f(de-)0
3283 y(terministic)d Fl(fsa)h Fm(for)g(the)f(regular)h(expression)g(is)
g(p)r(olynomial)0 3370 y(in)32 b(the)g(expression.)54
b(Suc)n(h)31 b(regular)i(expressions)g(and)e(other)0
3457 y(v)l(arian)n(ts)26 b(are)g(studied)f(formally)h(in)g([4].)0
3632 y(W)-6 b(e)17 b(next)f(consider)i(an)f(extension)g(of)h(basic)g
(DTDs,)h(also)f(presen)n(t)0 3719 y(in)27 b(XML-Sc)n(hema.)38
b(This)29 b(is)f(motiv)l(ated)e(b)n(y)g(a)i(sev)n(ere)g(limita-)0
3806 y(tion)23 b(of)h(DTDs:)33 b(their)23 b(de\014nition)f(of)i(the)e
(t)n(yp)r(e)g(of)i(a)f(giv)n(en)g(tag)0 3893 y(dep)r(ends)31
b(only)g(on)g(the)g(tag)g(itself)i(and)e(not)g(on)g(the)g(con)n(text)0
3980 y(in)i(whic)n(h)f(it)h(o)r(ccurs.)57 b(F)-6 b(or)32
b(example,)i(this)f(means)f(that)h(the)0 4068 y(singleton)k(tree)f(do)r
(cumen)n(t)e(represen)n(ted)i(ab)r(o)n(v)n(e)g(cannot)f(b)r(e)0
4155 y(describ)r(ed)30 b(b)n(y)f(a)h(DTD,)g(b)r(ecause)h(the)e(\\t)n
(yp)r(e")h(of)h(the)f(\014rst)f Fi(b)0 4242 y Fm(di\013ers)h(from)f
(that)h(of)g(the)g(second)g Fi(b)p Fm(.)46 b(This)31
b(naturally)f(leads)0 4329 y(to)23 b(an)g(extension)f(of)i(DTDs)f(with)
g Fk(sp)l(e)l(cialization)g Fm(\(also)h(called)0 4416
y(decoupled)j(t)n(yp)r(es\))g(whic)n(h,)h(in)n(tuitiv)n(ely)-6
b(,)27 b(allo)n(ws)i(de\014ning)e(the)0 4503 y(t)n(yp)r(e)f(of)j(a)e
(tag)h(b)n(y)e(sev)n(eral)i(\\cases")i(dep)r(ending)c(on)i(the)f(con-)0
4591 y(text.)49 b(Sp)r(ecialized)32 b(DTDs)f(ha)n(v)n(e)f(b)r(een)g
(studied)h(in)f([17])j(and)0 4678 y(are)g(equiv)l(alen)n(t)e(to)h
(formalisms)g(prop)r(osed)h(in)f([2,)i(7].)55 b(They)0
4765 y(are)26 b(presen)n(t)f(in)h(a)g(restricted)g(form)g(in)f(XML-Sc)n
(hema.)0 4939 y(F)-6 b(ormally)g(,)25 b(w)n(e)h(ha)n(v)n(e:)p
0 5016 741 4 v 4 5070 a Fg(1)38 5102 y Fm(In)33 b(an)h(extended)e
Fl(cf)n(g)p Fm(,)37 b(the)c(righ)n(t-hand)f(sides)j(of)f(pro)r(duc-)0
5177 y(tions)19 b(are)f(regular)h(expressions)g(o)n(v)n(er)f(the)g
(terminals)g(and)g(non-)0 5251 y(terminals.)4 5308 y
Fg(2)38 5340 y Fi(b)71 5308 y Fg(?)130 5340 y Fm(is)26
b(an)g(abbreviation)g(for)g(\()p Fi(b)p Fh(j)p Fi(\017)p
Fm(\).)2133 83 y Fl(Definition)40 b Fm(2.1.)f Fk(A)19
b Fm(sp)r(ecialized)j Fk(DTD)d(over)i Fm(\006)f Fk(is)f(a)h(tuple)2050
170 y Fi(d)h Fm(=)g(\(\006)p Fi(;)13 b Fm(\006)2366 138
y Fo(0)2389 170 y Fi(;)g(d)2463 138 y Fo(0)2485 170 y
Fi(;)h(\026)p Fm(\))27 b Fk(wher)l(e)2161 410 y Fh(\017)37
b Fm(\006)28 b Fk(and)g Fm(\006)2523 378 y Fo(0)2574
410 y Fk(ar)l(e)g(\014nite)g(alphab)l(ets;)2161 567 y
Fh(\017)37 b Fi(d)2276 535 y Fo(0)2326 567 y Fk(is)27
b(a)h(DTD)f(over)i Fm(\006)2898 535 y Fo(0)2921 567 y
Fk(;)e(and)2161 725 y Fh(\017)37 b Fi(\026)28 b Fk(is)f(a)h(mapping)g
(fr)l(om)f Fm(\006)3005 693 y Fo(0)3055 725 y Fk(to)i
Fm(\006)p Fk(.)2050 964 y(A)c(tr)l(e)l(e)i(do)l(cument)g
Fi(t)e Fk(over)i Fm(\006)f Fk(satis\014es)h(a)f(sp)l(e)l(cialize)l(d)g
(DTD)g Fi(d)p Fk(,)2050 1051 y(if)g Fi(t)21 b Fh(2)h
Fi(\026)p Fm(\()p Fi(S)t(AT)11 b Fm(\()p Fi(d)2557 1019
y Fo(0)2578 1051 y Fm(\)\))p Fk(.)2050 1290 y Fm(In)n(tuitiv)n(ely)-6
b(,)19 b(\006)2488 1259 y Fo(0)2531 1290 y Fm(pro)n(vides)g(for)i(some)
e Fi(a)p Fm('s)h(in)g(\006)g(a)g(set)f(of)i(sp)r(ecial-)2050
1378 y(izations)26 b(of)g Fi(a)p Fm(,)f(namely)f(those)h
Fi(a)3012 1346 y Fo(0)3055 1378 y Fh(2)d Fm(\006)3183
1346 y Fo(0)3231 1378 y Fm(for)k(whic)n(h)f Fi(\026)p
Fm(\()p Fi(a)3684 1346 y Fo(0)3706 1378 y Fm(\))c(=)g
Fi(a)p Fm(.)2050 1465 y(W)-6 b(e)37 b(also)i(denote)f(b)n(y)e
Fi(\026)i Fm(the)g(homomorphism)d(induced)i(on)2050 1552
y(strings)f(and)f(trees)h(b)n(y)e Fi(\026)p Fm(,)39 b(extended)34
b(whenev)n(er)h(needed)g(to)2050 1639 y(sym)n(b)r(ols)25
b(in)2441 1620 y(\026)2432 1639 y(\006)2487 1607 y Fo(0)2536
1639 y Fm(b)n(y)f Fi(\026)p Fm(\()q(\026)-39 b Fi(a)2759
1607 y Fo(0)2782 1639 y Fm(\))21 b(=)27 b(\026)-44 b
Fi(\026)p Fm(\()p Fi(a)3031 1607 y Fo(0)3053 1639 y Fm(\).)2050
1849 y Fj(T)-5 b(r)m(ee)20 b(automata)2050 1940 y Fm(W)-6
b(e)34 b(assume)g(familiarit)n(y)h(with)f(basic)i(notions)e(of)i
(language)2050 2027 y(theory)-6 b(,)18 b(including)f
(\(nondeterministic\))g(\014nite-state)g(automata)2050
2115 y Fl(\(\(n\)fsa\))p Fm(,)g(con)n(text-free)g(grammar)f(\()p
Fl(cf)n(g)p Fm(\))h(and)g(language)i(\()p Fl(cfl)p Fm(\),)2050
2202 y(and)d(\(deterministic\))h(push-do)n(wn)f(automaton)h
Fl(\(\(d\)pd)n(a\))d Fm(\(e.g.,)2050 2289 y(see)26 b([11]\).)2050
2463 y(W)-6 b(e)29 b(also)i(use)f(results)h(on)f(regular)h(tree)f
(languages)h(and)f(tree)2050 2550 y(automata.)64 b(Regular)36
b(tree)g(languages)h(are)f(natural)g(exten-)2050 2638
y(sions)d(to)g(trees)g(of)g(the)g(familiar)g(string)g(regular)h
(languages,)2050 2725 y(and)40 b(are)g(classically)j(de\014ned)c(for)i
(binary)f(trees.)79 b(A)40 b(non-)2050 2812 y(deterministic)30
b(top-do)n(wn)f(regular)i(tree)g(automaton)f(o)n(v)n(er)g(\006)2050
2899 y(has)35 b(a)f(\014nite)h(set)g Fi(Q)f Fm(of)h(states,)j
(including)d(a)g(distinguished)2050 2986 y(initial)28
b(state)h Fi(q)2498 2994 y Fg(0)2560 2986 y Fm(and)e(an)h(accepting)g
(state)g Fi(q)3387 2995 y Ff(f)3427 2986 y Fm(.)41 b(In)27
b(a)h(compu-)2050 3073 y(tation,)e(the)e(automaton)h(lab)r(els)i(the)d
(no)r(des)i(of)g(the)e(tree)i(with)2050 3161 y(states,)d(according)g
(to)e(a)h(set)g(of)g(rules,)h(called)g Fk(tr)l(ansitions)p
Fm(.)35 b(An)2050 3248 y(in)n(ternal)26 b(no)r(de)h(transition)g(is)g
(of)h(the)e(form)g(\()p Fi(a;)13 b(q)s Fm(\))22 b Fh(!)h
Fm(\()p Fi(q)3715 3216 y Fo(0)3737 3248 y Fi(;)13 b(q)3808
3216 y Fo(00)3849 3248 y Fm(\),)2050 3335 y(for)28 b
Fi(a)d Fh(2)g Fm(\006.)41 b(It)27 b(sa)n(ys)h(that,)h(if)f(an)g(in)n
(ternal)g(no)r(de)g(has)g(sym)n(b)r(ol)2050 3422 y Fi(a)f
Fm(and)g(is)h(lab)r(eled)g(b)n(y)e(state)i Fi(q)s Fm(,)h(then)d(its)i
(left)g(and)g(righ)n(t)f(c)n(hil-)2050 3509 y(dren)g(ma)n(y)h(b)r(e)g
(lab)r(eled)h(b)n(y)f Fi(q)2916 3478 y Fo(0)2966 3509
y Fm(and)g Fi(q)3155 3478 y Fo(0)q(0)3196 3509 y Fm(,)h(resp)r(ectiv)n
(ely)-6 b(.)43 b(A)28 b(leaf)2050 3597 y(transition)c(is)g(of)g(the)f
(form)g(\()p Fi(a;)13 b(q)s Fm(\))21 b Fh(!)g Fi(q)3192
3606 y Ff(f)3256 3597 y Fm(for)j Fi(a)d Fh(2)h Fm(\006.)34
b(It)23 b(allo)n(ws)2050 3684 y(c)n(hanging)g(the)g(lab)r(el)g(of)h(a)f
(leaf)i(with)e(sym)n(b)r(ol)f Fi(a)h Fm(from)f Fi(q)k
Fm(to)d(the)2050 3771 y(accepting)31 b(state)g Fi(q)2623
3780 y Ff(f)2663 3771 y Fm(.)50 b(Eac)n(h)31 b(computation)f(starts)i
(b)n(y)d(lab)r(el-)2050 3858 y(ing)34 b(the)g(ro)r(ot)g(with)h(the)e
(start)i(state)f Fi(q)3246 3866 y Fg(0)3281 3858 y Fm(,)j(and)c(pro)r
(ceeds)i(b)n(y)2050 3945 y(lab)r(eling)24 b(the)e(no)r(des)h(of)h(the)e
(trees)h(non-deterministically)g(ac-)2050 4032 y(cording)h(to)g(the)g
(transitions.)35 b(The)24 b(input)f(tree)i(is)f(accepted)g(if)2050
4120 y Fk(some)e Fm(computation)f(results)h(in)f(lab)r(eling)i(all)g
(lea)n(v)n(es)f(b)n(y)e Fi(q)3748 4129 y Ff(f)3788 4120
y Fm(.)33 b(A)2050 4207 y(set)18 b(of)i(complete)e(binary)g(trees)h(is)
g Fk(r)l(e)l(gular)g Fm(i\013)g(it)f(is)h(accepted)g(b)n(y)2050
4294 y(some)31 b(top-do)n(wn)g(tree)h(automaton.)52 b(Regular)32
b(languages)h(of)2050 4381 y(\014nite)19 b(binary)h(trees)h(are)f(surv)
n(ey)n(ed)f(in)h([18].)34 b(The)21 b(extension)f(to)2050
4468 y(the)26 b(unrank)n(ed)f(case)j(is)f(discussed)g(in)g([5].)39
b(Regular)27 b(tree)g(lan-)2050 4555 y(guages)h(ha)n(v)n(e)e(similar)h
(closure)h(prop)r(erties)g(to)f(regular)g(string)2050
4643 y(languages,)34 b(in)d(b)r(oth)g(the)g(rank)n(ed)f(and)h(unrank)n
(ed)f(cases.)52 b(It)2050 4730 y(is)30 b(w)n(orth)g(noting)f(that)h
(regular)g(tree)g(languages)h(can)f(b)r(e)g(de-)2050
4817 y(\014ned)35 b(b)n(y)g(man)n(y)g(other)h(equiv)l(alen)n(t)f
(formalisms,)40 b(including)2050 4904 y(b)r(ottom-up)34
b(\(non\)deterministic)h(automata)h(and)f(Monadic)2050
4991 y(Second-Order)30 b(logic)k(\(MSO\))d(on)h(the)f(standard)h
(structures)2050 5078 y(asso)r(ciated)27 b(to)f(trees.)35
b(In)n(terestingly)-6 b(,)25 b(it)h(turns)f(out)h(that)f(sp)r(e-)2050
5166 y(cialized)c(DTDs)f(are)g(precisely)g(equiv)l(alen)n(t)f(to)h
(top-do)n(wn)g(non-)2050 5253 y(deterministic)i(tree)g(automata)h(o)n
(v)n(er)f(unrank)n(ed)f(trees)i([5,)h(17].)2050 5340
y(Th)n(us,)31 b(they)e(de\014ne)h(precisely)h(the)e(regular)j(tree)e
(languages.)p eop
%%Page: 4 4
4 3 bop 0 83 a Fm(This)30 b(is)g(more)f(evidence)g(that)g(sp)r
(ecialized)i(DTDs)e(are)h(a)f(ro-)0 170 y(bust)c(and)g(natural)h(sp)r
(eci\014cation)h(mec)n(hanism.)0 345 y(Another)h(useful)h(kind)e(of)i
(automata)f(on)h(trees)g(are)f(the)g Fk(tr)l(e)l(e-)0
432 y(walking)k(automata)h Fm(\(de\014ned)c(b)n(y)h([1])i(for)g(the)e
(rank)n(ed)g(case\).)0 519 y(These)24 b(are)h(more)e(sequen)n(tial)h
(in)f(nature)h(than)f(the)g(automata)0 606 y(describ)r(ed)35
b(earlier:)56 b(there)35 b(is)h(a)f(head)g(that)g(resides)h(at)g(an)n
(y)0 693 y(time)31 b(at)h(a)g(single)g(giv)n(en)g(no)r(de.)52
b(In)31 b(the)h(unrank)n(ed)e(v)n(ersion,)0 780 y(transitions)i(dep)r
(end)f(on)g(the)g(curren)n(t)g(lab)r(el)h(and)f(the)g(state,)0
868 y(and)e(consist)h(of)h(mo)n(ving)d(the)h(head)g(up,)h(do)n(wn)g
(\(on)f(the)g(left-)0 955 y(most)20 b(c)n(hild\),)i(or)f(horizon)n
(tally)h(to)f(the)f(left)i(or)f(righ)n(t)g(neigh)n(b)r(or.)0
1042 y(It)k(is)h(easily)g(seen)f(that)g(trees)h(accepted)f(b)n(y)g
(tree-w)n(alking)h(au-)0 1129 y(tomata)g(can)g(b)r(e)f(de\014ned)g(in)h
(MSO,)g(so)g(are)h(regular)f(tree)g(lan-)0 1216 y(guages.)45
b(Con)n(v)n(ersely)-6 b(,)30 b(it)f(is)h(conjectured)f(that)g(tree-w)n
(alking)0 1303 y(automata)f(can)f(only)h(de\014ne)f(a)h(strict)g
(subset)g(of)g(the)f(regular)0 1391 y(tree)f(languages)h([8,)g(9].)0
1591 y Fn(3.)99 b(STR)m(ONG)15 b(V)-13 b(ALID)m(A)k(TION)15
b(OF)g(XML)g(DOC\255)174 1707 y(UMENTS)0 1798 y Fm(W)-6
b(e)19 b(b)r(egin)h(with)g(the)f Fk(str)l(ong)24 b(validation)c
Fm(problem)f(for)h(stream-)0 1886 y(ing)d(tree)h(do)r(cumen)n(ts.)30
b(Recall)18 b(that)f(c)n(hec)n(king)g(w)n(ell-formedness)0
1973 y(of)h(the)f(XML)g(do)r(cumen)n(t)f(is)i(no)n(w)f(part)g(of)h(the)
f(v)l(alidation)h(prob-)0 2060 y(lem.)45 b(More)30 b(formally)-6
b(,)30 b(let)g Fi(d)f Fm(b)r(e)g(a)h(DTD)f(\(p)r(ossibly)g(sp)r(ecial-)
0 2147 y(ized\))20 b(o)n(v)n(er)h(\006)g(and)f(consider)h(the)f(asso)r
(ciated)i(string)f(language)0 2234 y Fh(L)p Fm(\()p Fi(d)p
Fm(\))27 b(o)n(v)n(er)h(\006)19 b Fh([)500 2215 y Fm(\026)491
2234 y(\006)q(.)41 b(W)-6 b(e)28 b(wish)g(to)h(c)n(haracterize)g(the)f
(DTDs)g Fi(d)0 2322 y Fm(for)j(whic)n(h)e Fh(L)p Fm(\()p
Fi(d)p Fm(\))g(can)h(b)r(e)g(recognized)g(b)n(y)f(an)h
Fl(fsa)p Fm(,)h(i.e.)47 b Fh(L)p Fm(\()p Fi(d)p Fm(\))0
2409 y(is)29 b(regular.)44 b(Suc)n(h)27 b(DTDs)i(are)g(called)g
Fk(str)l(ongly)j(r)l(e)l(c)l(o)l(gnizable)p Fm(.)0 2496
y(W)-6 b(e)25 b(\014rst)h(illustrate)h(the)e(problem)g(with)h(t)n(w)n
(o)g(examples.)83 2792 y Fl(Example)41 b Fm(3.1.)e(:)54
b(Consider)36 b(the)g(DTD)f Fi(d)i Fm(:)1533 2744 y Fi(r)24
b Fh(!)d Fi(a)1533 2837 y(a)g Fh(!)h Fi(a)1735 2805 y
Fg(?)0 2923 y Fm(whic)n(h)30 b(de\014nes)f(the)g(trees)h(with)g(ro)r
(ot)g Fi(r)h Fm(con)n(taining)f(a)g(single)0 3010 y(branc)n(h)35
b(of)g(arbitrary)h(length)f(of)h(no)r(des)f(lab)r(eled)h
Fi(a)p Fm(.)63 b(Th)n(us,)0 3097 y Fh(L)p Fm(\()p Fi(d)p
Fm(\))38 b(=)g Fh(f)p Fi(r)r(a)405 3065 y Ff(n)448 3097
y Fm(\026)-39 b Fi(a)488 3065 y Ff(n)534 3097 y Fm(\026)d
Fi(r)38 b Fh(j)e Fi(n)j Fh(2)f Fe(N)q Fh(g)43 b Fm(whic)n(h)36
b(is)g(not)g(regular.)66 b(So,)0 3184 y Fi(d)36 b Fm(cannot)g(b)r(e)g
(strongly)h(v)l(alidated)f(b)n(y)f(an)h Fl(fsa)g Fm(and)g(is)g(not)0
3272 y(strongly)26 b(recognizable.)83 3565 y Fl(Example)41
b Fm(3.2.)e(:)j(Consider)31 b(the)e(DTD)g Fi(d)f Fm(:)1488
3520 y Fi(r)c Fh(!)d Fi(a)1686 3488 y Fo(\003)1488 3607
y Fi(a)g Fh(!)h Fi(b)p Fh(j)p Fi(c)1829 3565 y Fm(.)0
3704 y(No)n(w)34 b Fh(L)p Fm(\()p Fi(d)p Fm(\))g(=)g
Fi(r)r Fm(\()p Fi(a)p Fm(\()p Fi(b)632 3684 y Fm(\026)635
3704 y Fi(b)o Fh(j)p Fi(c)r Fm(\026)-40 b Fi(c)q Fm(\))q(\026)h
Fi(a)o Fm(\))855 3672 y Fo(\003)894 3704 y Fm(\026)e
Fi(r)35 b Fm(whic)n(h)f(is)g(regular.)59 b(So,)36 b Fi(d)d
Fm(is)0 3791 y(strongly)26 b(recognizable.)0 4042 y(W)-6
b(e)26 b(pro)n(vide)g(a)g(complete)g(c)n(haracterization)i(of)f(the)f
(strongly)0 4130 y(recognizable)g(\(sp)r(ecialized\))g(DTDs:)34
b(they)23 b(are)i(precisely)g(the)0 4217 y(non-recursiv)n(e)d(ones,)j
(de\014ned)d(next)g(together)h(with)h(other)f(re-)0 4304
y(lated)j(notions)g(used)g(throughout)f(the)g(pap)r(er.)83
4555 y Fl(Definition)40 b Fm(3.1.)f Fk(L)l(et)27 b Fi(d)g
Fk(b)l(e)g(a)f(DTD)g(over)i Fm(\006)f Fk(and)g Fi(G)1688
4564 y Ff(d)1750 4555 y Fk(the)0 4643 y(gr)l(aph)39 b(c)l(onstructe)l
(d)h(as)e(fol)t(lows:)54 b(its)38 b(set)g(of)f(vertic)l(es)i(is)e
Fm(\006)p Fk(,)0 4730 y(and)30 b(for)g(e)l(ach)g(rule)g
Fi(a)25 b Fh(!)g Fi(R)834 4738 y Ff(a)901 4730 y Fk(in)k
Fi(d)g Fk(ther)l(e)j(is)d(an)h(e)l(dge)g(fr)l(om)g Fi(a)0
4817 y Fk(to)g Fi(b)g Fk(for)f(e)l(ach)i Fi(b)e Fk(o)l(c)l(curring)i
(in)e(some)h(wor)l(d)h(in)e Fi(R)1493 4825 y Ff(a)1530
4817 y Fk(.)41 b(We)30 b(c)l(al)t(l)0 4904 y Fi(G)60
4913 y Ff(d)125 4904 y Fk(the)g Fm(dep)r(endency)25 b(graph)k
Fk(of)f Fi(d)p Fk(.)39 b(Two)28 b(lab)l(els)h Fi(a)g
Fk(and)g Fi(b)f Fk(ar)l(e)0 4991 y Fm(m)n(utually)i(recursiv)n(e)i
Fk(if)g(they)h(b)l(elong)g(to)g(some)g(cycle)g(of)g Fi(G)1791
5000 y Ff(d)1827 4991 y Fk(,)0 5078 y(and)c Fi(a)f Fk(is)g(r)l(e)l
(cursive)i(if)e(it)g(is)g(mutual)t(ly)g(r)l(e)l(cursive)j(with)d
(itself.)0 5166 y(The)23 b(DTD)f Fi(d)g Fk(is)h(non-r)l(e)l(cursive)i
(i\013)d Fi(G)1107 5175 y Ff(d)1166 5166 y Fk(is)g(acyclic.)34
b(Similarly,)0 5253 y(a)29 b(sp)l(e)l(cialize)l(d)i(DTD)d
Fi(d)d Fm(=)f(\(\006)p Fi(;)13 b Fm(\006)961 5221 y Fo(0)984
5253 y Fi(;)g(d)1058 5221 y Fo(0)1080 5253 y Fi(;)g(\026)p
Fm(\))30 b Fk(is)f(non-r)l(e)l(cursive)j(i\013)0 5340
y(the)26 b(DTD)f Fi(d)361 5308 y Fo(0)409 5340 y Fk(over)h
Fm(\006)631 5308 y Fo(0)679 5340 y Fk(is)f(non-r)l(e)l(cursive.)38
b(Final)t(ly,)24 b(a)i(DTD)f Fi(d)2050 83 y Fk(is)h Fm(fully)e
(recursiv)n(e)i Fk(if)f(al)t(l)h(lab)l(els)g(fr)l(om)g(which)g(r)l(e)l
(cursive)j(lab)l(els)2050 170 y(ar)l(e)f(r)l(e)l(achable)h(in)e
Fi(G)2664 179 y Ff(d)2728 170 y Fk(ar)l(e)h(mutual)t(ly)g(r)l(e)l
(cursive.)2050 445 y Fm(W)-6 b(e)25 b(can)h(no)n(w)g(sho)n(w:)2133
720 y Fl(Theorem)40 b Fm(3.1.)f Fk(:)44 b(A)32 b(sp)l(e)l(cialize)l(d)h
(DTD)e(is)h(str)l(ongly)h(r)l(e)l(c-)2050 807 y(o)l(gnizable)28
b(i\013)f(it)g(is)h(non-r)l(e)l(cursive.)2050 1082 y
Fq(Pro)r(of:)34 b Fm(Let)24 b Fi(d)e Fm(=)f(\(\006)p
Fi(;)13 b Fm(\006)2775 1050 y Fo(0)2798 1082 y Fi(;)g(d)2872
1050 y Fo(0)2894 1082 y Fi(;)g(\026)p Fm(\))25 b(b)r(e)f(a)g(sp)r
(ecialized)i(DTD.)e(W)-6 b(e)2050 1180 y(extend)16 b
Fi(\026)h Fm(in)h(the)f(ob)n(vious)g(w)n(a)n(y)g(in)h(order)f(to)h(ha)n
(v)n(e)e Fi(\026)p Fm(\()q(\026)-39 b Fi(a)p Fm(\))21
b(=)p 3753 1115 147 4 v 21 w Fi(\026)p Fm(\()p Fi(a)p
Fm(\))2050 1268 y(for)30 b(an)n(y)f Fi(a)e Fh(2)h Fm(\006)2522
1236 y Fo(0)2544 1268 y Fm(.)46 b(Supp)r(ose)29 b(\014rst)g(that)g
Fi(d)g Fm(is)h(strongly)g(recog-)2050 1355 y(nizable,)e(i.e.)40
b Fh(L)p Fm(\()p Fi(d)p Fm(\))27 b(is)g(regular)2962
1323 y Fg(3)2998 1355 y Fm(.)39 b(Then)27 b(there)g(exists)h(an)f
Fl(fsa)2050 1442 y Fi(A)e Fm(recognizing)j(exactly)e
Fh(L)p Fm(\()p Fi(d)p Fm(\).)36 b(Supp)r(ose)26 b(to)n(w)n(ards)h(a)f
(con)n(tra-)2050 1529 y(diction)32 b(that)f Fi(d)2524
1497 y Fo(0)2577 1529 y Fm(is)i(recursiv)n(e)e(and)h(let)f
Fi(a)g Fh(2)h Fm(\006)3469 1497 y Fo(0)3523 1529 y Fm(b)r(e)f(a)h
(recur-)2050 1616 y(siv)n(e)27 b(lab)r(el)i(in)e Fi(d)2520
1585 y Fo(0)2542 1616 y Fm(.)40 b(Hence)27 b(there)h(exists)g(a)g(tree)
f Fi(t)g Fm(in)h Fi(S)t(AT)11 b Fm(\()p Fi(d)3849 1585
y Fo(0)3870 1616 y Fm(\))2050 1703 y(where)25 b Fi(a)g
Fm(rep)r(eats)h(along)h(one)e(path.)34 b(The)26 b(string)g([)p
Fi(t)p Fm(])f(is)h(of)g(the)2050 1791 y(form)31 b Fi(r)r(u)2318
1799 y Fg(1)2352 1791 y Fi(av)2430 1799 y Fg(1)2465 1791
y Fi(aw)s Fm(\026)-39 b Fi(a)o(v)2640 1799 y Fg(2)2677
1791 y Fm(\026)f Fi(au)2760 1799 y Fg(2)2798 1791 y Fm(\026)f
Fi(r)33 b Fm(where)f Fi(u)3135 1799 y Fg(1)3170 1791
y Fi(u)3214 1799 y Fg(2)3280 1791 y Fm(and)f Fi(v)3472
1799 y Fg(1)3507 1791 y Fi(v)3544 1799 y Fg(2)3610 1791
y Fm(are)h(w)n(ell-)2050 1878 y(balanced)21 b(w)n(ords)g(corresp)r
(onding)h(to)e(subtrees)h(\(or)g(forests\))h(of)2050
1965 y Fi(t)p Fm(.)33 b(By)23 b(iterating)h(the)f(recursiv)n(e)g(part)g
(of)h(the)f(deriv)l(ation)g(from)2050 2052 y Fi(a)h Fm(to)h
Fi(a)p Fm(,)f(w)n(e)h(obtain)g(that)f([)p Fi(t)p Fm(])2879
2060 y Ff(n)2944 2052 y Fm(=)d Fi(r)r(u)3106 2060 y Fg(1)3140
2052 y Fm(\()p Fi(av)3248 2060 y Fg(1)3283 2052 y Fm(\))3313
2020 y Ff(n)3355 2052 y Fi(aw)s Fm(\026)-39 b Fi(a)p
Fm(\()p Fi(v)3561 2060 y Fg(2)3596 2052 y Fm(\026)g Fi(a)p
Fm(\))3666 2020 y Ff(n)3708 2052 y Fi(u)3752 2060 y Fg(2)3791
2052 y Fm(\026)d Fi(r)26 b Fm(is)2050 2139 y(also)f(in)f
Fh(L)p Fm(\()p Fi(d)2413 2108 y Fo(0)2435 2139 y Fm(\))f(for)i(eac)n(h)
f Fi(n)e(>)f Fm(0.)34 b(Th)n(us,)24 b(all)h(w)n(ords)g
Fi(\026)p Fm(\([)p Fi(t)3680 2147 y Ff(n)3722 2139 y
Fm(]\))f(are)2050 2226 y(accepted)33 b(b)n(y)f(the)h
Fl(fsa)h Fi(A)p Fm(.)57 b(A)32 b(simple)h(pumping)f(argumen)n(t)2050
2314 y(then)d(sho)n(ws)j(that)e Fi(\026)p Fm(\()p Fi(r)r(u)2783
2322 y Fg(1)2817 2314 y Fm(\()p Fi(av)2925 2322 y Fg(1)2960
2314 y Fm(\))2990 2282 y Fg(\()p Ff(n)p Fg(+)p Ff(k)q
Fg(\))3161 2314 y Fi(aw)s Fm(\026)-39 b Fi(a)o Fm(\()p
Fi(v)3366 2322 y Fg(2)3402 2314 y Fm(\026)g Fi(a)p Fm(\))3472
2282 y Ff(n)3514 2314 y Fi(u)3558 2322 y Fg(2)3596 2314
y Fm(\026)e Fi(r)q Fm(\))31 b(is)g(also)2050 2401 y(accepted)c(b)n(y)e
Fi(A)i Fm(for)g(some)g Fi(k)e(>)e Fm(0.)39 b(This)27
b(is)h(a)f(con)n(tradiction,)2050 2488 y(since)f(the)f(string)h(is)g
(not)g(w)n(ell-balanced.)2050 2662 y(Assume)33 b(no)n(w)h(that)g
Fi(d)g Fm(is)g(non-recursiv)n(e.)59 b(W)-6 b(e)34 b(can)g(assume)2050
2750 y(wlog)d(that)f(\006)50 b Fh(\\)f Fm(\006)2664 2718
y Fo(0)2716 2750 y Fm(=)28 b Fh(;)p Fm(.)47 b(F)-6 b(or)30
b(eac)n(h)g Fi(b)e Fh(2)h Fm(\006)3425 2718 y Fo(0)3477
2750 y Fm(construct)h(an)2050 2837 y Fl(fsa)24 b Fi(A)2252
2846 y Ff(b)2308 2837 y Fm(recognizing)i Fi(\026)p Fm(\()p
Fi(b)p Fm(\))p Fi(R)2905 2846 y Ff(b)p 2937 2771 139
4 v 2937 2837 a Fi(\026)p Fm(\()p Fi(b)p Fm(\),)f(where)g
Fi(R)3401 2846 y Ff(b)3457 2837 y Fm(is)h(the)e(regular)2050
2924 y(expression)k(asso)r(ciated)i(to)e Fi(b)g Fm(in)g
Fi(d)3079 2892 y Fo(0)3101 2924 y Fm(.)41 b(An)27 b Fl(fsa)h
Fi(A)f Fm(recognizing)2050 3011 y Fh(L)p Fm(\()p Fi(d)p
Fm(\))20 b(is)h(constructed)f(inductiv)n(ely)g(as)h(follo)n(ws.)35
b(Let)21 b Fi(A)3654 3019 y Fg(0)3708 3011 y Fm(b)r(e)g
Fi(A)3866 3019 y Ff(r)2050 3098 y Fm(where)h Fi(r)i Fm(is)f(the)e(ro)r
(ot)i(lab)r(el.)35 b(F)-6 b(or)22 b Fi(i)f Fh(\025)h
Fm(0,)h Fi(A)3308 3106 y Ff(i)p Fg(+1)3433 3098 y Fm(is)g(obtained)f(b)
n(y)2050 3185 y(mo)r(difying)e Fi(A)2463 3193 y Ff(i)2510
3185 y Fm(as)h(follo)n(ws.)35 b(F)-6 b(or)21 b(eac)n(h)g(transition)g
Fi(e)g Fm(=)h(\()p Fi(p;)12 b(b;)h(q)s Fm(\))2050 3273
y(of)26 b Fi(A)2195 3281 y Ff(i)2221 3273 y Fm(,)g(where)g
Fi(b)21 b Fh(2)h Fm(\006)2672 3241 y Fo(0)2695 3273 y
Fm(:)2139 3523 y(1.)38 b(add)26 b(a)g(cop)n(y)f Fi(A)2687
3531 y Ff(e)2746 3523 y Fm(of)h Fi(A)2891 3532 y Ff(b)2139
3702 y Fm(2.)38 b(add)31 b(the)g(transitions)h(\()p Fi(p;)12
b(\017;)i(i)3109 3710 y Ff(e)3142 3702 y Fm(\))31 b(where)h
Fi(i)3457 3710 y Ff(e)3521 3702 y Fm(is)g(the)f(start)2236
3789 y(state)d(of)g Fi(A)2573 3797 y Ff(e)2607 3789 y
Fm(,)g(and)f(\()p Fi(f)2874 3797 y Ff(e)2907 3789 y Fi(;)13
b(\017;)h(q)s Fm(\))27 b(for)h(eac)n(h)f(accepting)h(state)2236
3876 y Fi(f)2273 3884 y Ff(e)2333 3876 y Fm(of)e Fi(A)2478
3884 y Ff(e)2139 4055 y Fm(3.)38 b(remo)n(v)n(e)25 b
Fi(e)p Fm(.)2050 4305 y(Because)35 b Fi(d)e Fm(is)h(non-recursiv)n(e)g
(this)f(pro)r(cess)i(is)g(sure)e(to)h(ter-)2050 4392
y(minate.)59 b(Note)34 b(that)g(the)f(resulting)i Fl(fsa)f
Fm(is)h(o)n(v)n(er)f(alphab)r(et)2050 4479 y(\006)58
b Fh([)2280 4461 y Fm(\026)2272 4479 y(\006.)j(It)35
b(is)g(easy)g(to)g(v)n(erify)f(that)g(the)h Fl(fsa)f
Fm(recognizes)2050 4567 y Fh(L)p Fm(\()p Fi(d)p Fm(\).)1620
b Fd(2)2050 4741 y Fm(T)-6 b(o)31 b(conclude)h(the)f(section,)j(w)n(e)e
(consider)g(a)g(somewhat)f(sur-)2050 4828 y(prising)17
b(con)n(v)n(erse)h(to)f(Theorem)g(3.1.)33 b(One)16 b(migh)n(t)g
(legitimately)2050 4915 y(w)n(onder)25 b(if)g(there)g(are)h(t)n(yp)r(e)
e(systems)g(other)h(than)f(sp)r(ecialized)2050 5003 y(DTDs)17
b(that)g(de\014ne)g(families)i Fi(T)27 b Fm(of)19 b(trees)e(that)h(can)
f(b)r(e)g(strongly)2050 5090 y(v)l(alidated)k(b)n(y)g(an)g
Fl(fsa)p Fm(.)33 b(In)n(terestingly)-6 b(,)23 b(the)e(answ)n(er)h
(turns)f(out)2050 5177 y(to)k(b)r(e)h(negativ)n(e,)g(as)h(sho)n(wn)f
(next.)p 2050 5255 741 4 v 2054 5308 a Fg(3)2088 5340
y Fm(Recall)g(that)g Fh(L)p Fm(\()p Fi(d)p Fm(\))f(is)h(a)g(language)h
(o)n(v)n(er)f(\006)17 b Fh([)3439 5321 y Fm(\026)3430
5340 y(\006)q(.)p eop
%%Page: 5 5
5 4 bop 83 83 a Fl(Theorem)41 b Fm(3.2.)e Fk(:)34 b(L)l(et)28
b Fi(T)37 b Fk(b)l(e)28 b(a)f(set)h(of)f(tr)l(e)l(es)i(over)f
Fm(\006)p Fk(.)35 b(The)0 170 y(language)27 b Fh(L)p
Fm(\()p Fi(T)11 b Fm(\))26 b Fk(is)g(r)l(e)l(gular)h(i\013)f(ther)l(e)i
(exists)f(a)f(non-r)l(e)l(cursive)0 257 y(sp)l(e)l(cialize)l(d)j(DTD)e
Fi(d)g Fk(such)h(that)h Fi(T)j Fm(=)21 b Fk(SA)-6 b(T)p
Fm(\()p Fi(d)p Fm(\))p Fk(.)0 495 y Fq(Pro)r(of:)49 b
Fm(The)33 b(\\if)6 b(")34 b(part)e(follo)n(ws)j(from)e(Theorem)f(3.1.)
56 b(F)-6 b(or)0 582 y(the)27 b(\\only)g(if)6 b(")29
b(part,)e(supp)r(ose)h Fh(L)p Fm(\()p Fi(T)11 b Fm(\))26
b(is)i(regular)g(so)g(is)g(recog-)0 669 y(nized)22 b(b)n(y)g(some)g
Fl(fsa)g Fi(A)p Fm(.)33 b(F)-6 b(rom)21 b Fi(A)h Fm(w)n(e)h(can)f
(easily)i(construct)e(a)0 756 y(tree-w)n(alking)30 b(automaton)e
Fi(A)888 724 y Fo(0)939 756 y Fm(that)h(p)r(erforms)g(a)g
(depth-\014rst)0 843 y(tra)n(v)n(ersal)j(of)g(its)g(input,)g(sim)n
(ulating)f(at)h(eac)n(h)f(step)g(the)g(cor-)0 931 y(resp)r(onding)i(mo)
n(v)n(e)f(in)h Fi(A)f Fm(and)h(recognizing)h Fi(T)11
b Fm(.)56 b(Since)33 b(tree-)0 1018 y(w)n(alking)41 b(automata)f
(de\014ne)g(regular)h(tree)g(languages,)46 b(and)0 1105
y(since)24 b(sp)r(ecialized)h(DTDs)e(de\014ne)g(all)h(regular)g(tree)g
(languages)0 1192 y(\(see)38 b(Preliminaries\),)k(there)37
b(exists)h(a)f(sp)r(ecialized)i(DTD)f Fi(d)0 1279 y Fm(suc)n(h)f(that)h
Fi(T)52 b Fm(=)42 b(SA)-6 b(T)o(\()p Fi(d)p Fm(\).)71
b(By)38 b(Theorem)g(3.1,)k Fi(d)c Fm(is)g(non-)0 1366
y(recursiv)n(e.)1478 b Fd(2)0 1560 y Fn(4.)99 b(V)-13
b(ALID)m(A)k(TING)22 b(WELL\255FORMED)j(XML)174 1677
y(DOCUMENTS)0 1768 y Fm(W)-6 b(e)18 b(no)n(w)g(consider)h(the)f
(problem)f(of)i(v)l(alidating)g(an)f(XML)g(do)r(c-)0
1855 y(umen)n(t)30 b(with)i(resp)r(ect)g(to)h(a)f(giv)n(en)g(DTD)f
Fi(d)p Fm(,)j(assuming)e(that)0 1942 y(the)21 b(XML)g(do)r(cumen)n(t)f
(is)i(w)n(ell)g(formed.)33 b(As)21 b(b)r(efore,)i(w)n(e)f(w)n(ould)0
2029 y(lik)n(e)k(to)g(p)r(erform)g(the)f(v)l(alidation)h(using)g(an)g
Fl(fsa)p Fm(.)35 b(The)26 b(previ-)0 2117 y(ous)d(requiremen)n(t)e
(that)i Fh(L)p Fm(\()p Fi(d)p Fm(\))f(b)r(e)h(regular)g(is)h(no)n(w)f
(to)r(o)g(strong,)0 2204 y(b)r(ecause)32 b(the)e Fl(fsa)h
Fm(only)g(needs)g(to)g(w)n(ork)g(correctly)h(on)f(w)n(ell-)0
2291 y(balanced)19 b(strings)h(represen)n(ting)f(trees.)33
b(The)19 b(problem)f(can)h(b)r(e)0 2378 y(formalized)27
b(as)f(follo)n(ws.)39 b(Let)25 b Fh(L)p Fm(\(T)-6 b(ree)q(\))25
b(denote)h(the)g(language)0 2465 y(consisting)32 b(of)f(all)g(string)g
(represen)n(tations)g(of)h(trees)e(o)n(v)n(er)h(\006.)0
2552 y(The)d(DTD)f Fi(d)g Fm(can)g(b)r(e)h(v)l(alidated)f(b)n(y)f(an)i
Fl(fsa)f Fm(i\013)h(there)f(exists)0 2640 y(some)c(regular)h(language)g
Fi(R)g Fm(suc)n(h)e(that)h Fh(L)p Fm(\()p Fi(d)p Fm(\))e(=)g
Fh(L)p Fm(\(T)-6 b(ree\))12 b Fh(\\)g Fi(R)q Fm(.)0 2727
y(Suc)n(h)32 b(DTDs)h(are)g(called)h Fk(r)l(e)l(c)l(o)l(gnizable)p
Fm(.)59 b(The)33 b(c)n(haracteriza-)0 2814 y(tion)25
b(of)g(recognizable)h(DTDs)e(turns)g(out)h(to)f(b)r(e)g(a)h
(non-trivial)0 2901 y(problem.)50 b(In)30 b(order)h(to)g(dev)n(elop)g
(some)g(in)n(tuition,)h(w)n(e)g(start)0 2988 y(with)26
b(sev)n(eral)g(examples.)83 3226 y Fl(Example)41 b Fm(4.1.)e(:)31
b(Let)18 b(us)f(revisit)i(the)f(DTD)f Fi(d)h Fm(of)h(Example)0
3357 y(3.1:)194 3309 y Fi(r)k Fh(!)e Fi(a)194 3402 y(a)g
Fh(!)g Fi(a)395 3370 y Fg(?)510 3357 y Fm(.)39 b(Recall)28
b(that)e Fi(d)h Fm(is)g(not)g(strongly)h(recogniz-)0
3488 y(able.)48 b(Ho)n(w)n(ev)n(er,)32 b(it)e(is)h(recognizable.)49
b(Indeed,)31 b(if)f(the)g(input)0 3575 y(is)d(kno)n(wn)g(to)g(b)r(e)g
(w)n(ell)h(balanced,)g(it)f(is)g(su\016cien)n(t)g(for)g(an)g
Fl(fsa)0 3663 y Fm(to)f(c)n(hec)n(k)f(that)g(the)h(string)g(is)g(of)h
(the)e(form)h Fi(r)r(a)1375 3631 y Fo(\003)1411 3663
y Fm(\026)-39 b Fi(a)1451 3631 y Fo(\003)1490 3663 y
Fm(\026)e Fi(r)r Fm(.)34 b(In)25 b(other)0 3750 y(w)n(ords,)i
Fh(L)p Fm(\()p Fi(d)p Fm(\))20 b(=)h Fh(L)p Fm(\(T)-6
b(ree)q(\))17 b Fh(\\)42 b Fi(r)r(a)945 3718 y Fo(\003)982
3750 y Fm(\026)-39 b Fi(a)1022 3718 y Fo(\003)1061 3750
y Fm(\026)e Fi(r)q Fm(.)0 3987 y(W)-6 b(e)25 b(pro)n(vide)h(t)n(w)n(o)g
(more)f(examples)g(of)h(recognizable)i(DTDs.)83 4315
y Fl(Example)41 b Fm(4.2.)e(:)30 b(Consider)18 b(the)f(DTD)1320
4226 y Fi(r)23 b Fh(!)e Fi(a)1517 4195 y Fg(?)1320 4314
y Fi(a)g Fh(!)g Fi(b)1320 4406 y(b)g Fh(!)h Fi(a)1514
4374 y Fg(?)0 4492 y Fm(with)29 b(ro)r(ot)g Fi(r)r Fm(,)g(whic)n(h)f
(de\014nes)g(trees)g(that)g(are)h(v)n(ertical)g(alter-)0
4580 y(nations)38 b(of)g Fi(a)f Fm(and)g Fi(b)g Fm(under)g(ro)r(ot)h
Fi(r)r Fm(.)69 b(This)38 b(DTD)f(can)g(b)r(e)0 4667 y(v)l(alidated)26
b(b)r(ecause)g Fh(L)p Fm(\()p Fi(d)p Fm(\))21 b(=)g Fh(L)p
Fm(\(T)-6 b(ree\))17 b Fh(\\)43 b Fi(r)r Fm(\()p Fi(ab)p
Fm(\))1412 4635 y Fo(\003)1447 4667 y Fm(\()1474 4647
y(\026)1477 4667 y Fi(b)p Fh(j)q Fm(\026)-39 b Fi(a)p
Fh(j)s Fm(\026)e Fi(r)r Fm(\))1660 4635 y Fo(\003)1695
4667 y Fm(.)83 4950 y Fl(Example)41 b Fm(4.3.)e(:)30
b(Consider)18 b(the)f(DTD)1320 4905 y Fi(a)k Fh(!)g Fi(b)1513
4873 y Fo(\003)1320 4992 y Fi(b)g Fh(!)h Fi(a)1514 4960
y Fo(\003)0 5166 y Fm(This)35 b(can)g(b)r(e)g(v)l(alidated)f(b)n(y)g
(the)g(follo)n(wing)j Fl(fsa)e Fm(that)f(only)0 5253
y(allo)n(ws)28 b(the)e(v)l(alid)g(transitions)h Fi(ab)p
Fm(,)f Fi(ba)p Fm(,)h(\026)-39 b Fi(a)1209 5233 y Fm(\026)1212
5253 y Fi(b)p Fm(,)1290 5233 y(\026)1292 5253 y Fi(b)q
Fm(\026)g Fi(a)p Fm(,)26 b Fi(a)q Fm(\026)-39 b Fi(a)p
Fm(,)26 b Fi(b)1572 5233 y Fm(\026)1575 5253 y Fi(b)p
Fm(,)i(\026)-39 b Fi(a)o(a)p Fm(,)1782 5233 y(\026)1785
5253 y Fi(b)o(b)0 5340 y Fm(rejecting)27 b(all)f(the)g(others.)2720
201 y
 tx@Dict begin tx@NodeDict begin {5.6 5.6 11.20001 5.6 2.71246 } false
/N@M-1-1-1 16 {InitRnode } NewNode end end
 2720 201 a 2766 201 a
 tx@Dict begin tx@NodeDict begin {0.0 2 div 0.0 0.0 add 2 div 2 copy
0.0 sub 4 2 roll Pyth 3.0 add 2.6 add} false /N@q1 11 {InitCnode }
NewNode end end
 2766 201 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 2.6 SLW 0. setgray  0.0 2 div 0.0 0.0 add
2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0 360 arc
closepath gsave 2.6 SLW 0. setgray 0 setlinecap stroke  grestore gsave
1.0 SLW 1. setgray stroke grestore end
 
@endspecial 3167 201 a
 tx@Dict begin tx@NodeDict begin {3.8 3.8 7.6 3.8 2.71246 } false /N@M-1-1-2
16 {InitRnode } NewNode end end
 3167 201 a 3198 201
a
 tx@Dict begin tx@NodeDict begin {0.0 2 div 0.0 0.0 add 2 div 2 copy
0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@q2 11 {InitCnode }
NewNode end end
 3198 201 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0.0 2 div 0.0 0.0 add
2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0 360 arc
closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial 2735
643 a
 tx@Dict begin tx@NodeDict begin {3.8 3.8 7.6 3.8 2.71246 } false /N@M-1-2-1
16 {InitRnode } NewNode end end
 2735 643 a 2766 643 a
 tx@Dict begin tx@NodeDict begin {0.0 2 div 0.0 0.0 add 2 div 2 copy
0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@q4 11 {InitCnode }
NewNode end end
 2766 643 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0.0 2 div 0.0 0.0 add
2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0 360 arc
closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial 3167 643 a
 tx@Dict begin tx@NodeDict begin {3.8 3.8 7.6 3.8 2.71246 } false /N@M-1-2-2
16 {InitRnode } NewNode end end
 3167 643 a 3198 643
a
 tx@Dict begin tx@NodeDict begin {0.0 2 div 0.0 0.0 add 2 div 2 copy
0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@q5 11 {InitCnode }
NewNode end end
 3198 643 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0.0 2 div 0.0 0.0 add
2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0 360 arc
closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial 3230
620 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0 3.0 0 0 /N@q1 /N@q2
InitNC { yB yA sub xB xA sub Atan dup 15.  add /AngleA ED 15.  sub
180 add /AngleB ED 0.67  0.67  NCCurve  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 3230 620 a 3230 620 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 3230 620 a 3230 620 a
 tx@Dict begin { 2.0 tx@Dict /NCLW known { NCLW add } if 4.90031 3.87498
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 3230
620 a 3210 637 a Fi(a)3230 620 y
 tx@Dict begin PutEnd  end
 3230 620 a 3230 620
a
 tx@Dict begin PutEnd  end
 3230 620 a 3230 620 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0 3.0 0 0 /N@q2 /N@q1
InitNC { yB yA sub xB xA sub Atan dup 15.  add /AngleA ED 15.  sub
180 add /AngleB ED 0.67  0.67  NCCurve  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 3230 620 a 3230 620 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 3230 620
a 3230 620 a
 tx@Dict begin { 2.0 tx@Dict /NCLW known { NCLW add } if 4.90031 5.13608
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 3230 620 a 3211 642 a Fm(\026)-39 b Fi(a)3230
620 y
 tx@Dict begin PutEnd  end
 3230 620 a 3230 620 a
 tx@Dict begin PutEnd  end
 3230 620 a 3230 620 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0 3.0 0 0 /N@q1 /N@q4
InitNC { yB yA sub xB xA sub Atan dup 15.  add /AngleA ED 15.  sub
180 add /AngleB ED 0.67  0.67  NCCurve  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 3230
620 a 3230 620 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 3230 620 a 3230 620 a
 tx@Dict begin { 2.0 tx@Dict /NCLW known { NCLW add } if 3.96387 7.5111
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 3230 620 a 3211
632 a Fm(\026)3214 652 y Fi(b)3230 620 y
 tx@Dict begin PutEnd  end
 3230 620 a 3230
620 a
 tx@Dict begin PutEnd  end
 3230 620 a 3230 620 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0 3.0 0 0 /N@q4 /N@q1
InitNC { yB yA sub xB xA sub Atan dup 15.  add /AngleA ED 15.  sub
180 add /AngleB ED 0.67  0.67  NCCurve  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 3230 620 a 3230 620 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 3230
620 a 3230 620 a
 tx@Dict begin { 2.0 tx@Dict /NCLW known { NCLW add } if 4.90031 5.13608
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 3230 620 a 3211 642 a Fm(\026)g Fi(a)3230
620 y
 tx@Dict begin PutEnd  end
 3230 620 a 3230 620 a
 tx@Dict begin PutEnd  end
 3230 620 a 3230 620 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0 3.0 0 0 /N@q4 /N@q5
InitNC { yB yA sub xB xA sub Atan dup 15.  add /AngleA ED 15.  sub
180 add /AngleB ED 0.67  0.67  NCCurve  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 3230
620 a 3230 620 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 3230 620 a 3230 620 a
 tx@Dict begin { 2.0 tx@Dict /NCLW known { NCLW add } if 3.96387 6.25
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 3230 620 a 3214
646 a Fi(b)3230 620 y
 tx@Dict begin PutEnd  end
 3230 620 a 3230 620 a
 tx@Dict begin PutEnd  end
 3230 620
a 3230 620 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0 3.0 0 0 /N@q5 /N@q4
InitNC { yB yA sub xB xA sub Atan dup 15.  add /AngleA ED 15.  sub
180 add /AngleB ED 0.67  0.67  NCCurve  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 3230 620 a 3230 620 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 3230 620 a 3230 620
a
 tx@Dict begin { 2.0 tx@Dict /NCLW known { NCLW add } if 3.96387 7.5111
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 3230 620 a 3211 632 a Fm(\026)3214 652 y Fi(b)3230
620 y
 tx@Dict begin PutEnd  end
 3230 620 a 3230 620 a
 tx@Dict begin PutEnd  end
 3230 620 a 3230 620 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0 3.0 0 0 /N@q5 /N@q2
InitNC { yB yA sub xB xA sub Atan dup 15.  add /AngleA ED 15.  sub
180 add /AngleB ED 0.67  0.67  NCCurve  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 3230
620 a 3230 620 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 3230 620 a 3230 620 a
 tx@Dict begin { 2.0 tx@Dict /NCLW known { NCLW add } if 4.90031 3.87498
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 3230 620 a 3210
637 a Fi(a)3230 620 y
 tx@Dict begin PutEnd  end
 3230 620 a 3230 620 a
 tx@Dict begin PutEnd  end
 3230 620
a 3230 620 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0 3.0 0 0 /N@q2 /N@q5
InitNC { yB yA sub xB xA sub Atan dup 15.  add /AngleA ED 15.  sub
180 add /AngleB ED 0.67  0.67  NCCurve  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 3230 620 a 3230 620 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 3230 620 a 3230 620
a
 tx@Dict begin { 2.0 tx@Dict /NCLW known { NCLW add } if 3.96387 6.25
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 3230 620 a 3214 646 a Fi(b)3230 620 y
 tx@Dict begin PutEnd  end
 3230 620 a 3230
620 a
 tx@Dict begin PutEnd  end
 3230 620 a 2050 919 a Fm(W)-6 b(e)26 b(next)g(pro)n(vide)h(an)g
(example)f(of)h(a)h(DTD)e(that)h(is)g Fk(not)h Fm(rec-)2050
1006 y(ognizable.)2133 1363 y Fl(Example)41 b Fm(4.4.)e(:)30
b(Let)17 b Fi(d)g Fm(b)r(e)g(the)f(DTD:)3361 1274 y Fi(a)21
b Fh(!)g Fm(\()p Fi(ab)k Fh(j)h Fi(ca)g Fh(j)g Fi(\017)p
Fm(\))3361 1361 y Fi(b)21 b Fh(!)g Fi(\017)3361 1449
y(c)h Fh(!)f Fi(\017)2050 1622 y Fm(This)26 b(DTD)f(de\014nes)h(trees)g
(of)g(the)f(form:)2496 1819 y
 tx@Dict begin tx@NodeDict begin {3.87498 0.0 4.90031 2.45015 2.71246
} false /N@T-0 16 {InitRnode } NewNode end end
 2496 1819 a Fi(a)2334 1984
y
 tx@Dict begin tx@NodeDict begin {3.87498 0.0 4.90031 2.45015 2.71246
} false /N@T-0-0 16 {InitRnode } NewNode end end
 2334 1984 a Fi(a)2354 1962 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0 /N@T-0-0 InitNC { NCLine  } if end gsave 0.8 SLW 0.
setgray 0 setlinecap stroke  grestore  grestore end
 2354 1962 a 2160 2150
a
 tx@Dict begin tx@NodeDict begin {3.87498 0.0 4.90031 2.45015 2.71246
} false /N@T-0-0-0 16 {InitRnode } NewNode end end
 2160 2150 a Fi(a)2181 2127 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0-0 /N@T-0-0-0 InitNC { NCLine  } if end gsave 0.8 SLW
0. setgray 0 setlinecap stroke  grestore  grestore end
 2181 2127 a 2050 2315
a
 tx@Dict begin tx@NodeDict begin {3.87498 0.0 4.00447 2.00223 2.71246
} false /N@T-0-0-0-0 16 {InitRnode } NewNode end end
 2050 2315 a Fi(c)2066 2292 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0-0-0 /N@T-0-0-0-0 InitNC { NCLine  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 2066 2292 a 2275 2315
a
 tx@Dict begin tx@NodeDict begin {3.87498 0.0 4.90031 2.45015 2.71246
} false /N@T-0-0-0-1 16 {InitRnode } NewNode end end
 2275 2315 a Fi(a)2295 2292 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0-0-0 /N@T-0-0-0-1 InitNC { NCLine  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 2295 2292 a 2201 2480
a
 tx@Dict begin tx@NodeDict begin {3.87498 0.0 4.00447 2.00223 2.71246
} false /N@T-0-0-0-1-0 16 {InitRnode } NewNode end end
 2201 2480 a Fi(c)2218 2458 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0-0-0-1 /N@T-0-0-0-1-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 2218 2458 a 2352 2480
a
 tx@Dict begin tx@NodeDict begin {3.87498 0.0 4.90031 2.45015 2.71246
} false /N@T-0-0-0-1-1 16 {InitRnode } NewNode end end
 2352 2480 a Fi(a)2373 2458 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0-0-0-1 /N@T-0-0-0-1-1 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 2373 2458 a 2511 2150
a
 tx@Dict begin tx@NodeDict begin {6.25 0.0 3.96387 1.98193 2.71246
} false /N@T-0-0-1 16 {InitRnode } NewNode end end
 2511 2150 a Fi(b)2528 2127 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0-0 /N@T-0-0-1 InitNC { NCLine  } if end gsave 0.8 SLW
0. setgray 0 setlinecap stroke  grestore  grestore end
 2528 2127 a 2662 1984
a
 tx@Dict begin tx@NodeDict begin {6.25 0.0 3.96387 1.98193 2.71246
} false /N@T-0-1 16 {InitRnode } NewNode end end
 2662 1984 a Fi(b)2679 1962 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0 /N@T-0-1 InitNC { NCLine  } if end gsave 0.8 SLW 0.
setgray 0 setlinecap stroke  grestore  grestore end
 2679 1962 a 2050 2628
a Fm(This)32 b(DTD)f(is)g(not)g(recognizable.)54 b(In)n(tuitiv)n(ely)-6
b(,)31 b(ev)n(en)f(if)i(the)2050 2715 y(do)r(cumen)n(t)17
b(is)i(assumed)f(to)g(b)r(e)h(w)n(ell)g(balanced,)i(an)d
Fl(fsa)h Fm(cannot)2050 2802 y(store)38 b(enough)g(information)h(to)f
(recall,)43 b(when)37 b(it)h(reads)h(an)2051 2889 y(\026)-39
b Fi(a)o Fm(,)40 b(whether)d(the)f(corresp)r(onding)i(no)r(de)e(had)h
(a)g(left)g(sibling)2050 2976 y(lab)r(eled)31 b Fi(c)g
Fm(\(in)g(whic)n(h)f Fi(b)h Fm(is)g(not)g(allo)n(w)n(ed)h(to)f(its)g
(righ)n(t\).)50 b(The)2050 3064 y(formal)25 b(pro)r(of)h(follo)n(ws)h
(from)e(Lemma)e(4.2,)j(see)g(Example)e(4.5.)2050 3335
y(Also)34 b(b)n(y)f(w)n(a)n(y)g(of)i(tec)n(hnical)f(w)n(arm-up,)h(it)e
(is)i(w)n(orth)f(noting)2050 3422 y(that)24 b(con)n(v)n(en)n(tional)h
(wisdom)h(relating)g(to)f Fl(fsa)g Fm(do)r(es)h(not)e(nec-)2050
3509 y(essarily)18 b(apply)f(when)g(inputs)f(are)i(restricted)g(to)f(w)
n(ell-balanced)2050 3597 y(strings.)32 b(Basic)19 b(issues)f(suc)n(h)f
(as)h(equiv)l(alence)f(or)h(minimization)2050 3684 y(are)k(quite)f
(di\013eren)n(t)g(in)g(this)h(setting.)33 b(T)-6 b(o)22
b(illustrate,)i(consider)2050 3771 y(again)f(Example)f(4.2.)35
b(The)23 b(minimal)f(deterministic)g Fl(fsa)h Fm(cor-)2050
3858 y(resp)r(onding)k(to)h(the)f(regular)i(expression)e
Fi(r)r Fm(\()p Fi(ab)p Fm(\))3477 3826 y Fo(\003)3513
3858 y Fm(\()3540 3838 y(\026)3543 3858 y Fi(b)o Fh(j)q
Fm(\026)-39 b Fi(a)p Fh(j)s Fm(\026)e Fi(r)r Fm(\))3725
3826 y Fo(\003)3789 3858 y Fm(has)2050 3945 y(\014v)n(e)36
b(states,)42 b(and)37 b(it)h(is)g(easily)g(seen)g(that)f(this)h(is)g
(minimal)2050 4032 y(among)33 b(all)i Fl(fsa)f Fm(v)l(alidating)h(the)e
(DTD.)h(Ho)n(w)n(ev)n(er,)i(it)e(is)h(b)n(y)2050 4120
y(no)27 b(means)g(unique)g({)h(another)g(deterministic)f
Fl(fsa)h Fm(with)g(\014v)n(e)2050 4207 y(states)37 b(equiv)l(alen)n(t)f
(to)h(the)f(\014rst)h(on)f(w)n(ell-balanced)i(strings)2050
4294 y(but)22 b(non-isomorphic)g(to)i(it)f(is)g(the)g(minimal)f(one)h
(for)h(the)f(reg-)2050 4381 y(ular)g(expression)h Fi(r)r
Fm(\()p Fi(a)p Fh(j)p Fi(b)p Fm(\))2765 4349 y Fo(\003)2800
4381 y Fm(\()2827 4361 y(\026)2830 4381 y Fi(b)q Fm(\026)-39
b Fi(a)s Fm(\026)e Fi(r)2941 4349 y Fo(\003)2977 4381
y Fm(\))3007 4349 y Fo(\003)3042 4381 y Fm(.)34 b(Both)23
b Fl(fsa)h Fm(ha)n(v)n(e)e(the)h(same)2050 4468 y(n)n(um)n(b)r(er)18
b(of)j(states)g(and)e(agree)j(on)e(the)g(w)n(ell-balanced)h(strings.)
2050 4555 y(Ho)n(w)n(ev)n(er,)h(the)e(t)n(w)n(o)i Fl(fsa)e
Fm(disagree)j(on)e(the)f(non)h(w)n(ell-balanced)2050
4643 y(w)n(ords.)35 b(F)-6 b(or)25 b(instance,)h(the)f(regular)i
(expression)f(of)g(Example)2050 4730 y(4.2)34 b(accepts)h
Fi(r)r(ab)2567 4710 y Fm(\026)2570 4730 y Fi(b)e Fm(while)h(the)g(one)f
(ab)r(o)n(v)n(e)h(do)r(es)g(not.)59 b(Th)n(us)2050 4817
y(there)38 b(is)h(no)g(unique)f(minimal)f Fl(fsa)i Fm(on)g(w)n
(ell-balanced)g(in-)2050 4904 y(puts,)f(unlik)n(e)e(in)g(the)f
(classical)k(setting.)67 b(In)35 b(particular,)40 b(it)2050
4991 y(is)28 b(not)g(clear)h(ho)n(w)f(to)g(minimize)f(an)h
Fl(fsa)g Fm(v)l(alidating)h(a)f(giv)n(en)2050 5078 y(recognizable)22
b(DTD.)e(Ho)n(w)n(ev)n(er,)i(equiv)l(alence)e(of)h Fl(fsa)f
Fm(on)g(w)n(ell-)2050 5166 y(balanced)g(inputs)g(is)g(decidable)h(in)f
Fl(exptime)f Fm(\(b)n(y)g(a)h(reduction)2050 5253 y(to)30
b(equiv)l(alence)g(of)h(top-do)n(wn)e(tree)i(automata\).)48
b(It)29 b(is)i(op)r(en)2050 5340 y(whether)25 b(this)h(can)g(b)r(e)f
(impro)n(v)n(ed.)p eop
%%Page: 6 6
6 5 bop 0 83 a Fm(Before)29 b(pro)r(ceeding,)f(w)n(e)g(mak)n(e)e(the)h
(follo)n(wing)j(useful)d(obser-)0 170 y(v)l(ation.)83
417 y Fl(Lemma)41 b Fm(4.1.)d(:)c(Let)25 b Fi(T)35 b
Fm(b)r(e)25 b(a)g(set)g(of)g(tree)g(do)r(cumen)n(ts)f(o)n(v)n(er)0
504 y(alphab)r(et)34 b(\006.)58 b(If)34 b Fh(L)p Fm(\()p
Fi(T)11 b Fm(\))33 b(=)i Fh(L)p Fm(\(T)-6 b(ree\))22
b Fh(\\)h Fi(R)34 b Fm(for)g(some)f(regular)0 591 y(language)20
b Fi(R)q Fm(,)g(then)e Fi(T)32 b Fm(=)21 b(SA)-6 b(T)o(\()p
Fi(d)p Fm(\))18 b(for)i(some)e(sp)r(ecialized)j(DTD)0
678 y Fi(d)k Fm(computable)g(in)h Fl(ptime)e Fm(from)i(the)f
Fl(fsa)h Fm(for)g Fi(R)q Fm(.)0 924 y Fq(Pro)r(of)39
b Fm(The)e(construction)g(of)h Fi(d)f Fm(is)g(similar)h(to)f(the)g
(classi-)0 1012 y(cal)k(construction)f(of)g(a)g Fl(cf)n(g)h
Fm(for)f(the)g(in)n(tersection)g(of)h(an-)0 1099 y(other)34
b Fl(cf)n(g)g Fm(with)g(a)g(regular)g(language,)j(used)d(to)g(sho)n(w)g
(clo-)0 1186 y(sure)27 b(of)h Fl(cfl)p Fm('s)g(under)e(in)n(tersection)
i(with)g(regular)g(languages)0 1273 y([10].)34 b(The)21
b(sp)r(ecialized)h(alphab)r(et)f(consists)h(of)f(triples)g(\()p
Fi(p;)13 b(a;)g(q)s Fm(\))0 1360 y(where)40 b Fi(a)45
b Fh(2)h Fm(\006)40 b(and)g Fi(p;)12 b(q)43 b Fm(are)e(states)f(of)h
(the)f Fl(fsa)g Fi(A)1669 1368 y Ff(R)1758 1360 y Fm(for)0
1447 y Fi(R)q Fm(.)64 b(The)36 b(sp)r(ecializations)j(of)e(the)e(ro)r
(ot)i Fi(r)g Fm(are)f(of)h(the)e(form)0 1535 y(\()p Fi(q)64
1543 y Fg(0)99 1535 y Fi(;)13 b(r)n(;)g(q)234 1544 y
Ff(f)274 1535 y Fm(\))28 b(where)h Fi(q)591 1543 y Fg(0)654
1535 y Fm(is)g(the)f(start)h(state)g(and)f Fi(q)1433
1544 y Ff(f)1502 1535 y Fm(an)g(accept-)0 1622 y(ing)37
b(state)g(of)h Fi(A)495 1630 y Ff(R)545 1622 y Fm(.)68
b(The)37 b(regular)g(language)h(asso)r(ciated)h(to)0
1709 y(\()p Fi(p;)13 b(a;)f(q)s Fm(\))33 b(is)h Fh(f)p
Fm(\()p Fi(q)464 1717 y Fg(1)499 1709 y Fi(;)13 b(a)574
1717 y Fg(1)608 1709 y Fi(;)h(q)677 1717 y Fg(2)711 1709
y Fm(\)\()p Fi(q)805 1717 y Fg(2)840 1709 y Fi(;)f(a)915
1717 y Fg(2)949 1709 y Fi(;)h(q)1018 1717 y Fg(3)1052
1709 y Fm(\))f Fi(:)g(:)g(:)h Fm(\()p Fi(q)1262 1718
y Ff(k)1300 1709 y Fi(;)f(a)1375 1718 y Ff(k)1413 1709
y Fi(;)g(q)1481 1718 y Ff(k)q Fg(+1)1596 1709 y Fm(\))34
b Fh(j)g Fi(k)i(>)0 1796 y Fm(0)p Fi(;)14 b(a)114 1804
y Fg(1)161 1796 y Fi(:)f(:)g(:)g(a)304 1805 y Ff(k)363
1796 y Fh(2)22 b Fi(R)494 1804 y Ff(a)532 1796 y Fi(;)13
b(q)600 1804 y Ff(i)652 1796 y Fm(are)26 b(states)h(of)f
Fi(A)1144 1804 y Ff(R)1194 1796 y Fm(,)g(\()p Fi(p;)12
b(a;)h(q)1452 1804 y Fg(1)1487 1796 y Fm(\))26 b(and)0
1883 y(\()p Fi(q)64 1892 y Ff(k)q Fg(+1)179 1883 y Fi(;)15
b Fm(\026)-40 b Fi(a;)13 b(q)s Fm(\))37 b(are)h(transitions)g(in)f
Fi(A)1083 1891 y Ff(R)1133 1883 y Fh(g)g([f)p Fi(\017)k
Fh(j)g Fi(\017)f Fh(2)h Fi(R)1652 1891 y Ff(a)1727 1883
y Fm(and)0 1971 y(\()p Fi(p;)13 b(a)q Fm(\026)-39 b Fi(a)o(;)13
b(q)s Fm(\))26 b(is)g(a)g(transition)g(in)g Fi(A)950
1979 y Ff(R)1000 1971 y Fh(g)p Fm(.)735 b Fd(2)0 2145
y Fm(W)-6 b(e)39 b(no)n(w)i(attempt)d(to)i(c)n(haracterize)h
(recognizable)h(DTDs.)0 2232 y(Our)29 b(basic)h(roadmap)f(is)h(the)f
(follo)n(wing.)48 b(W)-6 b(e)30 b(already)f(kno)n(w)0
2319 y(from)d(the)h(previous)f(section)i(that)e(non-recursiv)n(e)g
(DTDs)h(are)0 2406 y(recognizable,)33 b(since)e(they)e(are)h(strongly)h
(recognizable.)49 b(W)-6 b(e)0 2494 y(manage)36 b(to)f(obtain)h(a)g
(precise)h(c)n(haracterization)g(of)g(recog-)0 2581 y(nizable)27
b(DTDs)e(in)h(the)g(case)h(of)f(fully)h(recursiv)n(e)f(DTDs.)35
b(The)0 2668 y(c)n(haracterization)22 b(in)d(the)h(general)h(case)f
(remains)g(op)r(en.)32 b(Ho)n(w-)0 2755 y(ev)n(er,)h(w)n(e)f(mak)n(e)e
(partial)j(progress)g(b)n(y)d(pro)n(viding)i(necessary)0
2842 y(conditions)i(and)f(then)f(extending)h(them)f(to)h(su\016cien)n
(t)h(con-)0 2929 y(ditions)g(for)g(recognizabilit)n(y)-6
b(.)58 b(Our)32 b(conjecture)i(is)g(that)f(the)0 3017
y(necessary)c(conditions)g(w)n(e)g(pro)n(vide)f(are)h(actually)g(also)h
(su\016-)0 3104 y(cien)n(t.)0 3278 y(W)-6 b(e)24 b(b)r(egin)h(with)g(a)
g(\014rst)g(necessary)g(condition)g(in)g(order)f(for)i(a)0
3365 y(DTD)31 b(to)g(b)r(e)g(recognizable.)52 b(As)31
b(will)i(b)r(e)e(seen)g(shortly)-6 b(,)32 b(this)0 3452
y(condition)24 b(is)g(not)f(su\016cien)n(t)g(in)h(general.)35
b(Ho)n(w)n(ev)n(er,)24 b(w)n(e)g(sho)n(w)0 3540 y(in)g(Theorem)f(4.1)i
(that)f(the)f(condition)h(b)r(ecomes)g(su\016cien)n(t)f(in)0
3627 y(the)i(sp)r(ecial)i(case)g(of)f(fully)g(recursiv)n(e)g(DTDs.)83
3873 y Fl(Lemma)41 b Fm(4.2.)d(:)50 b(Let)34 b Fi(d)f
Fm(b)r(e)g(a)h(recognizable)h(DTD.)e(Then)0 3960 y(the)27
b(follo)n(wing)i(hold,)f(where)g Fi(\013;)13 b(\014)t(;)g(u;)h(v)s(;)f
(w)29 b Fm(are)e(w)n(ords)h(o)n(v)n(er)f(\006)0 4048
y(while)j Fi(x;)13 b(y)s(;)g(z)32 b Fm(\(p)r(ossibly)e(subscripted\))f
(are)h(individual)f(sym-)0 4135 y(b)r(ols:)0 4309 y(Let)d
Fi(k)i Fm(b)r(e)e(a)g(p)r(ositiv)n(e)g(in)n(teger)h(and)e
Fi(x)1107 4317 y Ff(i)1133 4309 y Fi(;)13 b(z)1203 4317
y Ff(i)1229 4309 y Fm(,)26 b(1)d Fh(\024)e Fi(i)h Fh(\024)f
Fi(k)28 b Fm(b)r(e)e(m)n(u-)0 4396 y(tually)h(recursiv)n(e)h(sym)n(b)r
(ols)e(of)j Fi(d)e Fm(\(not)g(necessarily)h(distinct\).)0
4483 y(If)j Fi(\013x)175 4491 y Fg(1)209 4483 y Fi(\014)j
Fh(2)c Fi(R)425 4491 y Ff(z)455 4501 y Fc(1)491 4483
y Fm(,)j Fi(\013)594 4452 y Fo(0)616 4483 y Fi(x)660
4492 y Ff(k)698 4483 y Fi(\014)745 4452 y Fo(0)797 4483
y Fh(2)d Fi(R)936 4491 y Ff(z)966 4501 y Fc(1)1033 4483
y Fm(and)h Fi(u)1232 4491 y Ff(i)1258 4483 y Fi(x)1302
4491 y Ff(i)p Fo(\000)p Fg(1)1406 4483 y Fi(v)1443 4491
y Ff(i)1470 4483 y Fi(x)1514 4491 y Ff(i)1540 4483 y
Fi(w)1595 4491 y Ff(i)1651 4483 y Fh(2)f Fi(R)1790 4491
y Ff(z)1820 4502 y Fb(i)0 4571 y Fm(for)c(1)c Fi(<)f(i)h
Fh(\024)f Fi(k)r Fm(,)26 b(then)f Fi(\013x)744 4579 y
Fg(1)778 4571 y Fi(v)815 4579 y Fg(2)850 4571 y Fi(x)894
4579 y Fg(2)941 4571 y Fh(\001)13 b(\001)g(\001)h Fi(v)1081
4580 y Ff(k)1119 4571 y Fi(x)1163 4580 y Ff(k)1201 4571
y Fi(\014)1248 4539 y Fo(0)1296 4571 y Fm(m)n(ust)24
b(b)r(e)i(in)f Fi(R)1738 4579 y Ff(z)1768 4589 y Fc(1)1805
4571 y Fm(.)0 4817 y(The)17 b(pro)r(of)i(of)e(the)g(lemma)f(relies)j
(on)e(a)g(rather)g(in)n(v)n(olv)n(ed)g(pump-)0 4904 y(ing)32
b(argumen)n(t)e(and)h(is)h(sk)n(etc)n(hed)e(b)r(elo)n(w.)53
b(W)-6 b(e)31 b(\014rst)g(pro)n(vide)0 4991 y(some)d(in)n(tuition)h
(and)f(examples.)43 b(The)29 b(condition)g(relates)h(to)0
5078 y(the)c(inabilit)n(y)h(of)g(an)f Fl(fsa)h Fm(to)f(enforce)i
(non-trivial)e(horizon)n(tal)0 5166 y(constrain)n(ts)f(on)f(the)g
(structure)g(of)i(trees)e(when)h(they)e(concern)0 5253
y(m)n(utually)c(recursiv)n(e)h(sym)n(b)r(ols.)32 b(This)21
b(stems)f(from)g(the)g(inabil-)0 5340 y(it)n(y)i(to)g(remem)n(b)r(er)e
(the)i(depth)f(of)i(elemen)n(ts,)g(and)f(therefore)h(to)2050
83 y(determine)31 b(when)h(no)r(des)g(are)h(siblings.)56
b(V)-6 b(ery)31 b(roughly)-6 b(,)33 b(the)2050 170 y(rule)k(states)g
(that)g(what)g(is)h(allo)n(w)n(ed)g(at)f(some)f(depth)g(m)n(ust)2050
257 y(also)25 b(b)r(e)e(allo)n(w)n(ed)j(at)e(an)n(y)f(depth,)g(mo)r
(dulo)g(limited)h(lo)r(cal)h(con-)2050 345 y(strain)n(ts)33
b(that)g(can)g(b)r(e)g(enforced.)58 b(More)34 b(sp)r(eci\014cally)-6
b(,)36 b(if)e Fi(x)3866 353 y Fg(1)2050 432 y Fm(and)f
Fi(x)2251 441 y Ff(k)2321 432 y Fm(are)h(allo)n(w)n(ed)h(to)e(o)r(ccur)
h(at)f(the)g(same)g(lev)n(el)h(\(under)2050 519 y Fi(z)2086
527 y Fg(1)2120 519 y Fm(\))c(and)h Fi(x)2379 527 y Ff(i)p
Fo(\000)p Fg(1)2513 519 y Fm(can)g(b)r(e)f(\\connected")i(to)e
Fi(x)3351 527 y Ff(i)3408 519 y Fm(via)h Fi(v)3576 527
y Ff(i)3633 519 y Fm(at)f Fk(some)2050 606 y Fm(horizon)n(tal)k(lev)n
(el)f(for)h(1)g Fi(<)f(i)h Fh(\024)f Fi(k)r Fm(,)j(then)c
Fi(x)3368 614 y Fg(1)3435 606 y Fm(ma)n(y)g(b)r(e)h(\\con-)2050
693 y(nected")27 b(to)g Fi(x)2472 702 y Ff(k)2536 693
y Fm(via)g(the)g(path)f Fi(x)3021 701 y Fg(1)3055 693
y Fi(v)3092 701 y Fg(2)3127 693 y Fi(x)3171 701 y Fg(2)3218
693 y Fi(:)13 b(:)g(:)h(v)3358 702 y Ff(k)3396 693 y
Fi(x)3440 702 y Ff(k)3504 693 y Fm(at)28 b(the)e(same)2050
780 y(lev)n(el)g(under)e Fi(z)2478 788 y Fg(1)2513 780
y Fm(.)2050 977 y Fj(Remark:)2050 1068 y Fm(Note)39 b(that)g(the)g
(condition)g(ab)r(o)n(v)n(e)h(can)f(b)r(e)g(form)n(ulated)g(as)2050
1155 y(follo)n(ws)d(for)e Fi(k)j Fm(=)d(1.)59 b(If)33
b Fi(x)g Fm(and)h Fi(z)i Fm(are)e(m)n(utually)e(recursiv)n(e,)2050
1243 y Fi(\013x\014)f Fh(2)c Fi(R)2353 1251 y Ff(z)2418
1243 y Fm(and)i Fi(\013)2620 1211 y Fo(0)2643 1243 y
Fi(x\014)2734 1211 y Fo(0)2783 1243 y Fh(2)e Fi(R)2919
1251 y Ff(z)2955 1243 y Fm(,)k(then)d Fi(\013x\014)3325
1211 y Fo(0)3377 1243 y Fm(m)n(ust)f(also)k(b)r(e)e(in)2050
1330 y Fi(R)2108 1338 y Ff(z)2144 1330 y Fm(.)2050 1504
y(W)-6 b(e)25 b(next)g(consider)h(a)g(few)h(examples.)2133
1748 y Fl(Example)41 b Fm(4.5.)e(:)d(Recall)27 b(the)f(DTD)h(of)g
(Example)f(4.4.)38 b(It)2050 1835 y(is)21 b(not)f(recognizable)i(b)r
(ecause)f(it)g(do)r(es)g(not)f(satisfy)i(the)e(condi-)2050
1922 y(tion)f(in)g(the)g(ab)r(o)n(v)n(e)g(lemma)f(for)i
Fi(k)j Fm(=)e(1.)33 b(Indeed,)19 b Fi(a)g Fm(is)h(recursiv)n(e)2050
2010 y(in)h(the)g(DTD,)g Fi(R)2536 2018 y Ff(a)2595 2010
y Fm(con)n(tains)h Fi(ab)f Fm(and)g Fi(ca)p Fm(,)h(but)f(it)g(do)r(es)h
(not)f(con-)2050 2097 y(tain)k Fi(cab)h Fm(as)g(required)f(b)n(y)g
(Lemma)f(4.2.)2133 2385 y Fl(Example)41 b Fm(4.6.)e(:)52
b(Consider)35 b(the)f(DTD)3444 2337 y Fi(a)21 b Fh(!)g
Fi(a)k Fh(j)h Fi(b)3444 2430 y(b)21 b Fh(!)g Fm(\()p
Fi(ab)p Fm(\))3730 2398 y Fg(?)3879 2385 y Fm(.)2050
2516 y(This)i(is)h(not)e(recognizable)j(b)r(ecause)e(it)g(do)r(es)h
(not)e(satisfy)i(con-)2050 2603 y(dition)34 b(of)i(Lemma)d(4.2)j(for)f
Fi(k)k Fm(=)d(2.)61 b(Indeed,)36 b Fi(a)f Fm(and)f Fi(b)g
Fm(are)2050 2690 y(m)n(utually)21 b(recursiv)n(e,)j Fi(R)2769
2698 y Ff(a)2830 2690 y Fm(con)n(tains)f Fi(a)g Fm(and)f
Fi(b)p Fm(,)i Fi(R)3474 2699 y Ff(b)3528 2690 y Fm(con)n(tains)f
Fi(ab)2050 2778 y Fm(but)h Fi(R)2248 2786 y Ff(a)2312
2778 y Fm(do)r(es)i(not)g(con)n(tain)g Fi(ab)f Fm(as)h(required.)2050
3022 y Fq(Pro)r(of)c(of)e(Lemma)f(4.2)i(\(sk)n(etc)n(h\))p
Fm(.)31 b(Supp)r(ose)17 b Fi(d)h Fm(is)g(v)l(alidated)2050
3109 y(b)n(y)23 b(an)h Fl(fsa)g Fi(A)f Fm(with)i Fi(p)e
Fm(states.)35 b(F)-6 b(or)24 b(eac)n(h)h Fi(a)c Fh(2)g
Fm(\006)k(w)n(e)f(\014x)f(a)i(tree)2051 3196 y(^)-39
b Fi(a)25 b Fm(ro)r(oted)h(at)g Fi(a)g Fm(and)f(v)l(alid)h(wrt)g
Fi(d)p Fm(.)34 b(F)-6 b(or)26 b(simplicit)n(y)-6 b(,)26
b(when)f(the)2050 3283 y(con)n(text)f(is)i(clear,)g(w)n(e)f(also)i
(denote)d(b)n(y)i(^)-40 b Fi(a)25 b Fm(the)g(string)g([)q(^)-39
b Fi(a)p Fm(].)35 b(If)25 b Fi(\013)2050 3370 y Fm(is)j(a)g(w)n(ord)h
(of)f Fi(a)2518 3378 y Fg(1)2565 3370 y Fh(\001)14 b(\001)f(\001)g
Fi(a)2709 3378 y Ff(m)2795 3370 y Fm(of)29 b(\006)2940
3339 y Fo(\003)2976 3370 y Fm(,)36 b(^)-45 b Fi(\013)28
b Fm(denotes)g(the)g(sequence)f(of)2050 3457 y(trees)g(^)-39
b Fi(a)2275 3465 y Fg(1)2322 3457 y Fh(\001)13 b(\001)g(\001)h
Fm(^)-39 b Fi(a)2465 3465 y Ff(m)2524 3457 y Fm(.)2050
3632 y(W)-6 b(e)16 b(will)j(need)e(the)f(follo)n(wing)k(fact,)g(whose)e
(pro)r(of)g(is)g(a)f(straigh)n(t-)2050 3719 y(forw)n(ard)31
b(application)g(of)g(the)f(pumping)f(lemma)g(for)i(regular)2050
3806 y(languages.)2133 4050 y Fl(F)-9 b(a)n(ct)42 b Fm(1.)c
Fk(:)f(L)l(et)29 b Fi(A)f Fk(b)l(e)h(a)g(deterministic)g
Fl(fsa)g Fk(over)g Fm(\006)p Fk(,)g Fi(u)23 b Fh(2)2050
4137 y Fm(\006)2105 4105 y Fo(\003)2141 4137 y Fk(,)k(and)i
Fi(p)e Fk(the)i(numb)l(er)f(of)g(states)i(of)d Fi(A)p
Fk(.)36 b(L)l(et)28 b Fi(q)j Fk(b)l(e)d(the)h(state)2050
4224 y(of)24 b Fi(A)g Fk(r)l(e)l(ache)l(d)j(after)f(r)l(e)l(ading)f
Fi(u)2977 4193 y Ff(k)3016 4224 y Fk(,)g Fi(k)e Fh(\025)e
Fi(p)j Fk(starting)j(fr)l(om)d(some)2050 4312 y(state)31
b Fi(s)p Fk(.)40 b(Then)30 b(the)g(same)g(state)h Fi(q)h
Fk(is)d(r)l(e)l(ache)l(d)j(after)e(r)l(e)l(ading)2050
4399 y Fi(u)2094 4367 y Ff(k)q Fg(+)p Ff(p)p Fg(!)2255
4399 y Fk(starting)g(fr)l(om)d(state)i Fi(s)p Fk(.)2050
4643 y Fm(W)-6 b(e)17 b(can)i(assume)f(wlog)h(that)f
Fi(z)2932 4651 y Fg(1)2985 4643 y Fm(is)h(the)e(ro)r(ot)i(of)g(the)f
(do)r(cumen)n(ts)2050 4730 y(accepted)25 b(b)n(y)g Fi(d)p
Fm(.)2050 4904 y(The)33 b(pro)r(of)g(has)h(t)n(w)n(o)f(steps.)56
b(W)-6 b(e)32 b(\014rst)h(construct)f(a)i(tree)f Fi(T)2050
4991 y Fm(in)24 b Fi(S)t(AT)11 b Fm(\()p Fi(d)p Fm(\),)23
b(assuming)h(the)g(h)n(yp)r(othesis)f(of)i(the)f(condition)g(of)2050
5078 y(the)g(lemma.)33 b(Then)24 b(w)n(e)h(mo)r(dify)f
Fi(T)34 b Fm(and)25 b(obtain)f(another)h(tree)2050 5166
y Fi(T)2106 5134 y Fo(0)2162 5166 y Fm(that)35 b(is)g(also)i(accepted)e
(b)n(y)f Fi(A)g Fm(and)h(where)g(the)f(pattern)2050 5253
y(required)27 b(in)g(the)g(conclusion)h(o)r(ccurs)g(under)f(a)h(no)r
(de)f(lab)r(eled)2050 5340 y Fi(z)2086 5348 y Fg(1)2120
5340 y Fm(.)63 b(The)35 b(construction)g(of)h Fi(T)45
b Fm(is)36 b(somewhat)f(tric)n(ky)-6 b(,)37 b(as)f(w)n(e)p
eop
%%Page: 7 7
7 6 bop 0 83 a Fm(ha)n(v)n(e)36 b(to)g(ensure)g(that)h(a)f(pumping-lik)
n(e)f(argumen)n(t)g(can)h(b)r(e)0 170 y(made)25 b(to)h(sho)n(w)g(that)f
Fi(T)711 138 y Fo(0)759 170 y Fm(is)h(also)h(accepted.)0
345 y(W)-6 b(e)26 b(start)h(b)n(y)f(giving)h(some)f(in)n(tuition)h(for)
g(the)g(construction.)0 432 y(Recall)c(that)e(for)i(eac)n(h)f
Fi(a)f Fh(2)g Fm(\006,)k(^)-39 b Fi(a)21 b Fm(denotes)h(a)g(\014xed)f
(tree)h(ro)r(oted)0 519 y(at)i Fi(a)g Fm(and)g(v)l(alid)g(for)h
Fi(d)p Fm(,)f(as)h(w)n(ell)g(as)g(its)g(string)f(represen)n(tation.)0
693 y(W)-6 b(e)30 b(\014rst)f(de\014ne)h(some)f("pieces")j(used)d(in)h
(the)g(construction)0 780 y(of)d Fi(T)11 b Fm(.)37 b(Since)27
b Fi(x)448 788 y Ff(i)500 780 y Fm(and)f Fi(z)686 788
y Ff(i)739 780 y Fm(are)h(m)n(utually)e(recursiv)n(e,)i(there)g(is)g(a)
0 868 y(deriv)l(ation)d(in)g Fi(d)f Fm(with)i(a)f(path)f(con)n(taining)
i Fi(x)1339 876 y Ff(i)1389 868 y Fm(follo)n(w)n(ed)g(b)n(y)e
Fi(z)1824 876 y Ff(i)0 955 y Fm(and)28 b(follo)n(w)n(ed)j(again)e(b)n
(y)f Fi(x)813 963 y Ff(i)839 955 y Fm(.)43 b(Let)33 b(^)-42
b Fi(x)1088 919 y Ff(p)p Fg(!)1088 975 y Ff(i)1169 955
y Fm(b)r(e)29 b(the)f(tree)h(depicted)0 1042 y(b)r(ello)n(w)j(whic)n(h)
e(consists)i(of)g Fi(p)p Fm(!)e(iterations)i(of)f(the)f(deriv)l(ation)0
1129 y(of)c Fi(x)131 1137 y Ff(i)183 1129 y Fm(from)f
Fi(x)408 1137 y Ff(i)460 1129 y Fm(via)h Fi(z)622 1137
y Ff(i)648 1129 y Fm(.)453 1319 y
 tx@Dict begin tx@NodeDict begin {3.87498 0.99998 8.41666 4.20833 2.71246
} /N@X true /N@T-0 16 {InitRnode } NewNode end end
 453 1319 a Fi(x)497
1327 y Ff(i)477 1484 y
 tx@Dict begin tx@NodeDict begin {14.97223 0.0 2.56943 1.28471 2.71246
} false /N@T-0-0 16 {InitRnode } NewNode end end
 477 1484 a -66 x Fm(.)477 1451
y(.)477 1484 y(.)488 1462 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0 /N@T-0-0 InitNC { NCLine  } if end gsave 0.8 SLW 0.
setgray 0 setlinecap stroke  grestore  grestore end
 488 1462 a 457 1649 a
 tx@Dict begin tx@NodeDict begin {3.87498 0.99998 7.47568 3.73784 2.71246
} false /N@T-0-0-0 16 {InitRnode } NewNode end end
 457
1649 a Fi(z)493 1657 y Ff(i)488 1627 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0-0 /N@T-0-0-0 InitNC { NCLine  } if end gsave 0.8 SLW
0. setgray 0 setlinecap stroke  grestore  grestore end
 488 1627 a 453
1815 a
 tx@Dict begin tx@NodeDict begin {3.87498 0.99998 8.41666 4.20833 2.71246
} false /N@T-0-0-0-0 16 {InitRnode } NewNode end end
 453 1815 a Fi(x)497 1823 y Ff(i)488 1792 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0-0-0 /N@T-0-0-0-0 InitNC { NCLine  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 488
1792 a 477 1980 a
 tx@Dict begin tx@NodeDict begin {14.97223 0.0 2.56943 1.28471 2.71246
} false /N@T-0-0-0-0-0 16 {InitRnode } NewNode end end
 477 1980 a -66 x Fm(.)477 1947 y(.)477
1980 y(.)488 1958 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0-0-0-0 /N@T-0-0-0-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 488 1958 a 457 2145 a
 tx@Dict begin tx@NodeDict begin {6.25 0.99998 7.47568 3.73784 2.71246
} /N@Y true /N@T-0-0-0-0-0-0 16 {InitRnode } NewNode end end
 457 2145 a
5 w Fm(^)-43 b Fi(z)493 2153 y Ff(i)488 2123 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0-0-0-0-0 /N@T-0-0-0-0-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 488 2123
a 523 1296 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@X /N@Y InitNC { tx@Dict begin /Lineto /lineto load def false
pop end /AngleA 250. def /AngleB 180. def /ArmA 28.45274 def /ArmB
28.45274 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave
0.8 SLW 0. setgray 5.0 3.0 0 0 add DashLine  grestore  grestore end
 523 1296 a 523 1296 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@X /N@Y InitNC { tx@Dict begin /Lineto /lineto load def false
pop end /AngleA 290. def /AngleB 0. def /ArmA 28.45274 def /ArmB 28.45274
def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8 SLW
0. setgray 5.0 3.0 0 0 add DashLine  grestore  grestore end
 523 1296 a 484 2379
a Fq(Figure)30 b(1:)39 b(The)29 b(trees)34 b Fm(^)-43
b Fi(x)1313 2344 y Ff(p)p Fg(!)1313 2399 y Ff(i)0 2567
y Fm(Next,)34 b(note)f(that)f(eac)n(h)h Fi(z)785 2575
y Ff(i)844 2567 y Fm(can)g(b)r(e)g(used)g(to)g("connect")38
b(^)-43 b Fi(x)1797 2532 y Ff(p)p Fg(!)1797 2587 y Ff(i)0
2665 y Fm(to)25 b Fi(x)137 2630 y Ff(p)p Fg(!)137 2685
y Ff(i)p Fo(\000)p Fg(1)266 2665 y Fm(b)n(y)f(expanding)h
Fi(z)777 2673 y Ff(i)828 2665 y Fm(in)n(to)30 b(^)-43
b Fi(u)1027 2673 y Ff(i)1053 2665 y Fi(x)1097 2673 y
Ff(i)p Fo(\000)p Fg(1)1205 2665 y Fm(^)i Fi(v)1239 2673
y Ff(i)1270 2665 y Fm(^)e Fi(x)1309 2630 y Ff(p)p Fg(!)1309
2685 y Ff(i)1378 2665 y Fm(^)-53 b Fi(w)1418 2673 y Ff(i)1469
2665 y Fm(and)24 b(further)0 2771 y(expanding)j Fi(x)415
2779 y Ff(i)p Fo(\000)p Fg(1)546 2771 y Fm(in)n(to)32
b(^)-43 b Fi(x)747 2735 y Ff(p)p Fg(!)747 2790 y Ff(i)p
Fo(\000)p Fg(1)852 2771 y Fm(.)39 b(Also,)28 b Fi(x)1152
2735 y Ff(p)p Fg(!)1152 2790 y(1)1232 2771 y Fm(can)g(connect)f(to)g
Fi(x)1797 2735 y Ff(p)p Fg(!)1797 2792 y Ff(k)0 2877
y Fm(b)n(y)i(expanding)g Fi(z)520 2885 y Fg(1)584 2877
y Fm(in)n(to)37 b(^)-46 b Fi(\013)792 2845 y Fo(0)815
2877 y Fi(x)859 2886 y Ff(k)907 2858 y Fm(^)897 2877
y Fi(\014)944 2845 y Fo(0)966 2877 y Fm(.)47 b(This)30
b(allo)n(ws)i(to)d(de\014ne)g(b)n(y)0 2964 y(induction)h(the)h(trees)g
Fi(t)701 2972 y Ff(i)727 2964 y Fm(,)h(depicted)e(in)h(Figure)g(2.)50
b(Let)30 b Fi(T)41 b Fm(b)r(e)0 3052 y Fi(t)28 3060 y
Fg(1)62 3052 y Fm(.)35 b(Th)n(us,)25 b Fi(T)36 b Fm(is)26
b(obtained)f(b)n(y)g(expanding)g Fi(t)1310 3060 y Fg(1)1369
3052 y Fm(with)h Fi(t)1572 3061 y Ff(k)1610 3052 y Fm(,)f(whic)n(h)0
3139 y(in)j(turn)g(is)h(expanded)e(with)h Fi(t)897 3148
y Ff(k)q Fo(\000)p Fg(1)1014 3139 y Fm(,)h(etc.)43 b(The)28
b(iteration)i(ends)0 3226 y(b)n(y)25 b(expanding)g Fi(t)504
3234 y Fg(2)564 3226 y Fm(with)h Fi(x)783 3191 y Ff(p)p
Fg(!)783 3245 y(1)836 3226 y Fm(.)0 3400 y(Next,)f(let)h
Fi(T)376 3369 y Fo(0)423 3400 y Fm(b)r(e)g(the)f(tree)h(depicted)f(in)h
(Figure)g(3.)1051 3674 y
 tx@Dict begin tx@NodeDict begin {3.87498 0.99998 9.40965 4.70482 2.71246
} /N@X true /N@T-0 16 {InitRnode } NewNode end end
 1051 3674 a Fi(x)1095 3682 y
Fg(1)1080 3839 y
 tx@Dict begin tx@NodeDict begin {14.97223 0.0 2.56943 1.28471 2.71246
} false /N@T-0-0 16 {InitRnode } NewNode end end
 1080 3839 a -66 x Fm(.)1080 3806 y(.)1080
3839 y(.)1090 3816 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0 /N@T-0-0 InitNC { NCLine  } if end gsave 0.8 SLW 0.
setgray 0 setlinecap stroke  grestore  grestore end
 1090 3816 a 1055 4004 a
 tx@Dict begin tx@NodeDict begin {3.87498 0.99998 8.46867 4.23433 2.71246
} false /N@T-0-0-0 16 {InitRnode } NewNode end end
 1055 4004
a Fi(z)1091 4012 y Fg(1)1090 3982 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0-0 /N@T-0-0-0 InitNC { NCLine  } if end gsave 0.8 SLW
0. setgray 0 setlinecap stroke  grestore  grestore end
 1090 3982 a 1051
4170 a
 tx@Dict begin tx@NodeDict begin {3.87498 0.99998 9.40965 4.70482 2.71246
} false /N@T-0-0-0-0 16 {InitRnode } NewNode end end
 1051 4170 a Fi(x)1095 4178 y Fg(1)1090 4147 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0-0-0 /N@T-0-0-0-0 InitNC { NCLine  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end

1090 4147 a 1080 4335 a
 tx@Dict begin tx@NodeDict begin {14.97223 0.0 2.56943 1.28471 2.71246
} false /N@T-0-0-0-0-0 16 {InitRnode } NewNode end end
 1080 4335 a -66 x Fm(.)1080 4302
y(.)1080 4335 y(.)1090 4313 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0-0-0-0 /N@T-0-0-0-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1090 4313 a 1055 4500 a
 tx@Dict begin tx@NodeDict begin {3.87498 0.99998 8.46867 4.23433 2.71246
} /N@Y true /N@T-0-0-0-0-0-0 16 {InitRnode } NewNode end end

1055 4500 a Fi(z)1091 4508 y Fg(1)1090 4478 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0-0-0-0-0 /N@T-0-0-0-0-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1090 4478
a 358 4666 a
 tx@Dict begin tx@NodeDict begin {6.25 0.0 5.93503 2.96751 2.71246
} false /N@T-0-0-0-0-0-0-0 16 {InitRnode } NewNode end end
 358 4666 a 8 w Fm(^)-46 b Fi(\013)383 4643
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0-0-0-0-0-0 /N@T-0-0-0-0-0-0-0 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 383 4643 a 526 4666 a
 tx@Dict begin tx@NodeDict begin {8.43332 2.2867 11.70897 5.85448 2.71246
} false /N@T-0-0-0-0-0-0-1 16 {InitRnode } NewNode end end
 526 4666 a 5 w Fm(^)j Fi(x)570
4630 y Ff(p)p Fg(!)570 4685 y(1)574 4643 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0-0-0-0-0-0 /N@T-0-0-0-0-0-0-1 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 574 4643 a
741 4666 a
 tx@Dict begin tx@NodeDict begin {6.25 0.99998 8.65964 4.32982 2.71246
} false /N@T-0-0-0-0-0-0-2 16 {InitRnode } NewNode end end
 741 4666 a 3 w Fm(^)i Fi(v)778 4674 y Fg(2)777
4643 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0-0-0-0-0-0 /N@T-0-0-0-0-0-0-2 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 777 4643 a 931 4666 a
 tx@Dict begin tx@NodeDict begin {8.43332 2.2867 11.70897 5.85448 2.71246
} false /N@T-0-0-0-0-0-0-3 16 {InitRnode } NewNode end end
 931 4666 a 5 w Fm(^)e Fi(x)975
4630 y Ff(p)p Fg(!)975 4685 y(2)980 4643 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0-0-0-0-0-0 /N@T-0-0-0-0-0-0-3 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 980 4643 a
1146 4666 a
 tx@Dict begin tx@NodeDict begin {4.0486 0.0 10.7916 5.3958 2.71246
} false /N@T-0-0-0-0-0-0-4 16 {InitRnode } NewNode end end
 1146 4666 a Fh(\001)14 b(\001)f(\001)1191
4643 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0-0-0-0-0-0 /N@T-0-0-0-0-0-0-4 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1191 4643 a 1354 4666 a
 tx@Dict begin tx@NodeDict begin {3.87498 1.0667 9.08327 4.54163 2.71246
} false /N@T-0-0-0-0-0-0-5 16 {InitRnode } NewNode end end
 1354 4666 a Fi(v)1391
4675 y Ff(k)1392 4643 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0-0-0-0-0-0 /N@T-0-0-0-0-0-0-5 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1392 4643 a 1548 4666 a
 tx@Dict begin tx@NodeDict begin {8.43332 2.58672 11.70897 5.85448
2.71246 } false /N@T-0-0-0-0-0-0-6 16 {InitRnode } NewNode end end
 1548
4666 a 5 w Fm(^)-43 b Fi(x)1592 4630 y Ff(p)p Fg(!)1592
4687 y Ff(k)1596 4643 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0-0-0-0-0-0 /N@T-0-0-0-0-0-0-6 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1596 4643 a 1763 4666 a
 tx@Dict begin tx@NodeDict begin {8.62502 1.75 8.3767 4.18834 2.71246
} false /N@T-0-0-0-0-0-0-7 16 {InitRnode } NewNode end end
 1763
4666 a 1774 4646 a Fm(^)1763 4666 y Fi(\014)1810 4634
y Fo(0)1798 4643 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0-0-0-0-0-0 /N@T-0-0-0-0-0-0-7 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1798 4643 a 1832 3651 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@X /N@Y InitNC { tx@Dict begin /Lineto /lineto load def false
pop end /AngleA 250. def /AngleB 180. def /ArmA 28.45274 def /ArmB
28.45274 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave
0.8 SLW 0. setgray 5.0 3.0 0 0 add DashLine  grestore  grestore end
 1832 3651
a 1832 3651 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@X /N@Y InitNC { tx@Dict begin /Lineto /lineto load def false
pop end /AngleA 290. def /AngleB 0. def /ArmA 28.45274 def /ArmB 28.45274
def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8 SLW
0. setgray 5.0 3.0 0 0 add DashLine  grestore  grestore end
 1832 3651 a 525 4902 a Fq(Figure)30 b(3:)39
b(The)29 b(tree)g Fi(t)1303 4870 y Fo(0)0 5078 y Fm(As)18
b(w)n(e)h(will)g(pro)n(v)n(e)f(formally)-6 b(,)20 b(the)e
Fl(fsa)g Fi(A)f Fm(\(whic)n(h)i(has)f Fi(p)g Fm(states\))0
5166 y(cannot)26 b(distinguish)h Fi(T)36 b Fm(from)26
b Fi(T)961 5134 y Fo(0)983 5166 y Fm(.)35 b(The)26 b(basic)h(in)n
(tuition)f(is)h(as)0 5253 y(follo)n(ws.)54 b(Consider)32
b(the)e(computation)h(of)h Fi(A)f Fm(on)g Fi(T)41 b Fm(and)31
b Fi(T)1807 5221 y Fo(0)1829 5253 y Fm(.)0 5340 y(The)26
b(computation)g(can)g(b)r(e)g(brok)n(en)g(do)n(wn)g(in)n(to)g(t)n(w)n
(o)h(phases:)2050 83 y(a)19 b(descending)h(phase)f(from)g(the)g(ro)r
(ot)h(consuming)f(all)i(left)f(sub-)2050 170 y(trees)k(along)i(a)e(sp)r
(eci\014ed)h(path)f(in)g(eac)n(h)g(tree,)h(follo)n(w)n(ed)i(b)n(y)c(an)
2050 257 y(ascending)k(phase)g(bac)n(k)f(to)h(the)g(ro)r(ot.)38
b(In)26 b Fi(T)37 b Fm(the)27 b(path)f(is)h(the)2050
345 y(one)32 b(going)g(through)g(the)f(ro)r(ots)i(of)f(the)g(subtrees)g
Fi(t)3609 354 y Ff(k)3646 345 y Fm(.)53 b(In)31 b Fi(T)3878
313 y Fo(0)2050 432 y Fm(it)j(is)h(the)f(one)h(going)g(through)f(the)g
(ro)r(ot)h(of)40 b(^)-42 b Fi(x)3479 396 y Ff(p)p Fg(!)3479
451 y(1)3532 432 y Fm(.)60 b(The)35 b Fl(fsa)2050 519
y Fi(A)28 b Fm(reac)n(hes)i(the)f(same)g(state)h(after)g(its)f
(descending)h(phase)f(in)2050 606 y(b)r(oth)j Fi(T)42
b Fm(and)32 b Fi(T)2537 574 y Fo(0)2559 606 y Fm(.)54
b(This)33 b(is)g(a)f(consequence)g(of)h(F)-6 b(act)33
b(1,)h(and)2050 693 y(is)26 b(sho)n(wn)h(formally)f(b)r(elo)n(w.)37
b(F)-6 b(or)27 b(the)f(ascending)g(phase,)h(it)f(is)2050
780 y(enough)f(to)h(sho)n(w)g(that)f Fi(A)g Fm(m)n(ust)g(b)r(e)g(in)g
(the)h(same)f(state)h(after)2050 868 y(reading)d(the)f(substrings)i
(corresp)r(onding)f(to)28 b(^)-43 b Fi(x)3436 832 y Ff(p)p
Fg(!)3436 887 y Ff(i)3512 868 y Fm(in)23 b Fi(T)3655
836 y Fo(0)3699 868 y Fm(and)g Fi(t)3874 876 y Ff(i)2050
955 y Fm(in)30 b Fi(T)11 b Fm(.)47 b(The)30 b(argumen)n(t)f(is)h
(inductiv)n(e.)47 b(The)30 b(basis)h(holds)f(b)r(e-)2050
1042 y(cause)21 b(the)f(same)h(state)g(is)g(reac)n(hed)g(in)f(the)h
(descending)f(phase.)2050 1129 y(Supp)r(ose)26 b(next)f(that)h
Fi(A)g Fm(is)h(in)g(the)f(same)g(state)h Fi(q)3494 1137
y Ff(i)3547 1129 y Fm(after)g(read-)2050 1216 y(ing)d(the)h(substrings)
g(corresp)r(onding)g(to)k(^)-42 b Fi(x)3300 1181 y Ff(p)p
Fg(!)3300 1236 y Ff(i)p Fo(\000)p Fg(1)3429 1216 y Fm(in)24
b Fi(T)3573 1185 y Fo(0)3619 1216 y Fm(and)h Fi(t)3796
1224 y Ff(i)p Fo(\000)p Fg(1)2050 1303 y Fm(in)k Fi(T)11
b Fm(.)46 b(Next,)29 b Fi(A)g Fm(reads)k(^)-40 b Fi(v)2809
1311 y Ff(i)2865 1303 y Fm(in)29 b(b)r(oth)g(trees.)47
b(This)30 b(is)g(follo)n(w)n(ed)2050 1391 y(in)24 b Fi(T)2194
1359 y Fo(0)2241 1391 y Fm(b)n(y)k(^)-43 b Fi(x)2390
1355 y Ff(p)p Fg(!)2390 1411 y Ff(i)2443 1391 y Fm(,)26
b(and)e(in)g Fi(T)2782 1359 y Fo(0)2829 1391 y Fm(b)n(y)k(^)-43
b Fi(x)2978 1355 y Ff(p)p Fg(!)2978 1411 y Ff(i)3056
1391 y Fm(follo)n(w)n(ed)27 b(b)n(y)c(an)i(additional)2050
1478 y(ascending)h(p)r(ortion)h(to)f(the)g(ro)r(ot)h(of)g
Fi(t)3180 1486 y Ff(i)3206 1478 y Fm(.)36 b(Ho)n(w)n(ev)n(er,)26
b(the)g(extra)2050 1565 y(ascending)31 b(string)f(lea)n(v)n(es)h(the)f
Fi(A)g Fm(in)g(the)g(same)g(state,)j(again)2050 1652
y(as)26 b(a)g(consequence)g(of)g(F)-6 b(act)26 b(1.)35
b(This)26 b(argumen)n(t)f(can)g(b)r(e)h(iter-)2050 1739
y(ated)g(to)g(sho)n(w)h(that)e Fi(A)h Fm(returns)g(to)g(the)f(ro)r(ot)i
(of)g Fi(T)37 b Fm(and)25 b Fi(T)3788 1708 y Fo(0)3836
1739 y Fm(in)2050 1826 y(the)f(same)h(state,)h(so)g Fi(T)36
b Fm(and)25 b Fi(T)2962 1795 y Fo(0)3008 1826 y Fm(are)h(not)f
(distinguished.)35 b(The)2050 1914 y(formal)26 b(pro)r(of)h(is)f
(omitted.)34 b Fd(2)2050 2088 y Fm(W)-6 b(e)27 b(next)g(sho)n(w)i(a)f
(con)n(v)n(erse)g(of)h(Lemma)e(4.2:)40 b(the)27 b(necessary)2050
2175 y(condition)g(stated)h(there)f(in)g(order)h(for)g(a)g(DTD)f(to)g
(b)r(e)g(recog-)2050 2262 y(nizable)32 b(is)h(also)g(su\016cien)n(t)f
(when)g(the)f(DTD)h(is)g(fully)g(recur-)2050 2350 y(siv)n(e.)46
b(T)-6 b(o)30 b(do)g(this,)h(w)n(e)f(\014rst)f(sho)n(w)h(ho)n(w)g(to)g
(construct,)h(from)2050 2437 y(an)n(y)f(giv)n(en)h(DTD)f
Fi(d)p Fm(,)i(a)g(standard)e Fl(fsa)h Fi(A)3306 2446
y Ff(d)3373 2437 y Fm(that)f(accepts)i(all)2050 2524
y(w)n(ords)26 b(in)f Fh(L)p Fm(\()p Fi(d)p Fm(\))g(\(and)g(p)r(ossibly)
h(more\).)33 b(W)-6 b(e)26 b(then)e(sho)n(w)i(that)2050
2611 y(for)i(fully)h(recursiv)n(e)f(DTD's)g Fi(d)g Fm(satisfying)h(the)
f(conditions)g(of)2050 2698 y(Lemma)c(4.2,)j Fi(A)2527
2707 y Ff(d)2588 2698 y Fm(accepts)f Fk(pr)l(e)l(cisely)h
Fm(the)f(w)n(ords)g(in)f Fh(L)p Fm(\()p Fi(d)p Fm(\).)2050
2873 y(Although)d(w)n(e)h(are)g(primarily)f(in)n(terested)h(for)g(the)g
(time)f(b)r(eing)2050 2960 y(in)35 b(fully)h(recursiv)n(e)g(DTDs,)i(w)n
(e)e(pro)n(vide)g(for)g(later)h(use)e(the)2050 3047 y(construction)26
b(of)g Fi(A)2635 3056 y Ff(d)2696 3047 y Fm(for)h(arbitrary)f(DTD's.)
2050 3244 y Fj(Construction)20 b(of)j(the)g(standar)m(d)d
Fl(fsa)2050 3335 y Fm(W)-6 b(e)32 b(no)n(w)i(outline)g(the)e
(construction)i(of)g(the)f Fl(fsa)g Fi(A)3654 3344 y
Ff(d)3690 3335 y Fm(.)57 b(The)2050 3422 y(construction)39
b(extends)f(the)g(simpler)g(one)h(in)n(v)n(olv)n(ed)f(in)g(the)2050
3509 y(pro)r(of)27 b(of)g(Theorem)f(3.1.)37 b(Let)26
b Fi(d)g Fm(b)r(e)g(an)g(arbitrary)g(DTD)g(o)n(v)n(er)2050
3597 y(alphab)r(et)d(\006.)34 b(W)-6 b(e)22 b(will)i(use)f(the)f(dep)r
(endency)g(graph)g Fi(G)3695 3606 y Ff(d)3754 3597 y
Fm(of)i Fi(d)p Fm(.)2050 3684 y(Consider)f(the)e(equiv)l(alence)h
(relation)i Fh(\021)d Fm(on)h(\006)h(whose)g(equiv)l(a-)2050
3771 y(lence)28 b(classes)h(are)f(the)f(strongly)h(connected)f(comp)r
(onen)n(ts)g(of)2050 3858 y Fi(G)2110 3867 y Ff(d)2146
3858 y Fm(.)33 b(Let)20 b Fh(\036)f Fm(b)r(e)i(the)e(partial)i(order)g
(on)f(the)g(classes)i(of)f Fh(\021)f Fm(where)2050 3945
y Fi(A)28 b Fh(\036)h Fi(B)34 b Fm(i\013)c(for)h(some)f
Fi(a)e Fh(2)h Fi(A)h Fm(and)g Fi(b)f Fh(2)g Fi(B)34 b
Fm(there)c(is)g(an)h(edge)2050 4032 y(from)21 b Fi(a)f
Fm(to)h Fi(b)g Fm(in)g Fi(G)2576 4041 y Ff(d)2613 4032
y Fm(.)32 b(Note)21 b(that)g Fh(\036)g Fm(has)g(a)h(minim)n(um)17
b(elemen)n(t:)2050 4120 y(the)28 b(class)i(of)g(the)e(ro)r(ot)i(lab)r
(el.)45 b(There)29 b(are)g(generally)h(sev)n(eral)2050
4207 y(maximal)23 b(elemen)n(ts.)33 b(W)-6 b(e)24 b(construct)g
Fi(A)3230 4216 y Ff(d)3290 4207 y Fm(b)n(y)f(induction)h(on)g
Fh(\036)2050 4294 y Fm(starting)i(from)g(the)f(maximal)f(elemen)n(ts.)
2050 4468 y(Let)34 b Fi(C)40 b Fm(b)r(e)34 b(a)h(maximal)f(elemen)n(t)g
(of)h Fh(\036)p Fm(.)61 b(This)35 b(means)f(that)2050
4555 y(for)28 b(ev)n(ery)g Fi(c)d Fh(2)g Fi(C)5 b Fm(,)29
b Fi(R)2677 4563 y Ff(c)2734 4555 y Fm(=)c Fh(f)p Fi(\017)p
Fh(g)k Fm(or)f(w)n(ords)h(in)f Fi(R)3424 4563 y Ff(c)3484
4555 y Fm(con)n(tain)g(only)2050 4643 y(sym)n(b)r(ols)37
b(that)h(are)h(m)n(utually)e(recursiv)n(e)i(with)f Fi(c)p
Fm(.)73 b(Let)38 b Fi(A)3868 4651 y Ff(c)2050 4730 y
Fm(b)r(e)29 b(an)h Fl(fsa)f Fm(corresp)r(onding)i(to)f(the)f(regular)h
(expression)h Fi(R)3847 4738 y Ff(c)3879 4730 y Fm(.)2050
4817 y(Since)23 b Fi(A)2306 4825 y Ff(c)2362 4817 y Fm(is)h
(non-deterministic,)g(w)n(e)g(can)g(assume)g(wlog)h(that)2050
4904 y Fi(A)2108 4912 y Ff(c)2174 4904 y Fm(has)36 b(no)f("sink)h
(states",)j(i.e.)64 b(some)36 b(accepting)g(state)f(is)2050
4991 y(reac)n(hable)f(from)f(ev)n(ery)f(state.)58 b(W)-6
b(e)32 b(can)i(also)g(assume)f(that)2050 5078 y(the)21
b(sets)h(of)g(states)g(of)h(the)e Fl(fsa)p Fm(s)h Fi(A)3063
5086 y Ff(c)3116 5078 y Fm(are)g(disjoin)n(t)g(for)g(di\013eren)n(t)
2050 5166 y Fi(c)p Fm('s.)36 b(Let)26 b Fi(A)2387 5174
y Ff(C)2464 5166 y Fm(b)r(e)g(the)g Fl(fsa)g Fm(whose)h(set)f(of)h
(states)g(is)g(the)e(union)2050 5253 y(of)31 b(the)g(sets)g(of)h
(states)f(of)h(the)f Fl(fsa)p Fm(s)g Fi(A)3221 5261 y
Ff(c)3283 5253 y Fm(for)h Fi(c)e Fh(2)g Fi(C)5 b Fm(.)50
b(W)-6 b(e)31 b(do)2050 5340 y(not)26 b(need)g(to)h(sp)r(ecify)g(at)f
(this)h(p)r(oin)n(t)f(initial)i(and)e(\014nal)g(states)p
eop
%%Page: 8 8
8 7 bop 454 92 a
 tx@Dict begin tx@NodeDict begin {3.87498 0.99998 9.40965 4.70482 2.71246
} /N@X true /N@T-0 16 {InitRnode } NewNode end end
 454 92 a Fi(x)498 100 y Fg(1)482 257
y
 tx@Dict begin tx@NodeDict begin {14.97223 0.0 2.56943 1.28471 2.71246
} false /N@T-0-0 16 {InitRnode } NewNode end end
 482 257 a -66 x Fm(.)482 224 y(.)482 257 y(.)493 235
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0 /N@T-0-0 InitNC { NCLine  } if end gsave 0.8 SLW 0.
setgray 0 setlinecap stroke  grestore  grestore end
 493 235 a 458 423 a
 tx@Dict begin tx@NodeDict begin {3.87498 0.99998 8.46867 4.23433 2.71246
} false /N@T-0-0-0 16 {InitRnode } NewNode end end
 458 423 a Fi(z)494 431 y Fg(1)493
400 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0-0 /N@T-0-0-0 InitNC { NCLine  } if end gsave 0.8 SLW
0. setgray 0 setlinecap stroke  grestore  grestore end
 493 400 a 454 588 a
 tx@Dict begin tx@NodeDict begin {3.87498 0.99998 9.40965 4.70482 2.71246
} false /N@T-0-0-0-0 16 {InitRnode } NewNode end end
 454 588 a Fi(x)498 596 y Fg(1)493
565 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0-0-0 /N@T-0-0-0-0 InitNC { NCLine  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 493 565 a 482 753 a
 tx@Dict begin tx@NodeDict begin {14.97223 0.0 2.56943 1.28471 2.71246
} false /N@T-0-0-0-0-0 16 {InitRnode } NewNode end end
 482 753 a -66 x Fm(.)482 720
y(.)482 753 y(.)493 731 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0-0-0-0 /N@T-0-0-0-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 493 731 a 458 919 a
 tx@Dict begin tx@NodeDict begin {3.87498 0.99998 8.46867 4.23433 2.71246
} /N@Y true /N@T-0-0-0-0-0-0 16 {InitRnode } NewNode end end
 458 919
a Fi(z)494 927 y Fg(1)493 896 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0-0-0-0-0 /N@T-0-0-0-0-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 493 896 a 271 1084 a
 tx@Dict begin tx@NodeDict begin {7.15663 0.0 8.62947 4.31473 2.71246
} false /N@T-0-0-0-0-0-0-0 16 {InitRnode } NewNode end end

271 1084 a 8 w Fm(^)-46 b Fi(\013)320 1052 y Fo(0)307
1062 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0-0-0-0-0-0 /N@T-0-0-0-0-0-0-0 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 307 1062 a 461 1084 a
 tx@Dict begin tx@NodeDict begin {5.5357 1.0667 7.9305 3.96524 2.71246
} false /N@T-0-0-0-0-0-0-1 16 {InitRnode } NewNode end end
 461 1084 a Fi(t)489 1093
y Ff(k)494 1062 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0-0-0-0-0-0 /N@T-0-0-0-0-0-0-1 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 494 1062 a 645 1084 a
 tx@Dict begin tx@NodeDict begin {8.62502 1.75 8.3767 4.18834 2.71246
} false /N@T-0-0-0-0-0-0-2 16 {InitRnode } NewNode end end
 645 1084 a 655
1064 a Fm(^)645 1084 y Fi(\014)692 1052 y Fo(0)679 1062
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0-0-0-0-0-0 /N@T-0-0-0-0-0-0-2 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 679 1062 a 714 69 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@X /N@Y InitNC { tx@Dict begin /Lineto /lineto load def false
pop end /AngleA 250. def /AngleB 180. def /ArmA 28.45274 def /ArmB
28.45274 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave
0.8 SLW 0. setgray 5.0 3.0 0 0 add DashLine  grestore  grestore end
 714 69 a 714 69 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@X /N@Y InitNC { tx@Dict begin /Lineto /lineto load def false
pop end /AngleA 290. def /AngleB 0. def /ArmA 28.45274 def /ArmB 28.45274
def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8 SLW
0. setgray 5.0 3.0 0 0 add DashLine  grestore  grestore end
 714 69 a 1663
92 a
 tx@Dict begin tx@NodeDict begin {3.87498 0.99998 8.41666 4.20833 2.71246
} /N@A true /N@T-0 16 {InitRnode } NewNode end end
 1663 92 a Fi(x)1707 100 y Ff(i)1687 257 y
 tx@Dict begin tx@NodeDict begin {14.97223 0.0 2.56943 1.28471 2.71246
} false /N@T-0-0 16 {InitRnode } NewNode end end
 1687 257
a -66 x Fm(.)1687 224 y(.)1687 257 y(.)1697 235 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0 /N@T-0-0 InitNC { NCLine  } if end gsave 0.8 SLW 0.
setgray 0 setlinecap stroke  grestore  grestore end
 1697
235 a 1666 423 a
 tx@Dict begin tx@NodeDict begin {3.87498 0.99998 7.47568 3.73784 2.71246
} false /N@T-0-0-0 16 {InitRnode } NewNode end end
 1666 423 a Fi(z)1702 431 y Ff(i)1697
400 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0-0 /N@T-0-0-0 InitNC { NCLine  } if end gsave 0.8 SLW
0. setgray 0 setlinecap stroke  grestore  grestore end
 1697 400 a 1663 588 a
 tx@Dict begin tx@NodeDict begin {3.87498 0.99998 8.41666 4.20833 2.71246
} false /N@T-0-0-0-0 16 {InitRnode } NewNode end end
 1663 588 a Fi(x)1707 596
y Ff(i)1697 565 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0-0-0 /N@T-0-0-0-0 InitNC { NCLine  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1697 565 a 1687 753 a
 tx@Dict begin tx@NodeDict begin {14.97223 0.0 2.56943 1.28471 2.71246
} false /N@T-0-0-0-0-0 16 {InitRnode } NewNode end end
 1687 753 a -66
x Fm(.)1687 720 y(.)1687 753 y(.)1697 731 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0-0-0-0 /N@T-0-0-0-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1697 731
a 1666 919 a
 tx@Dict begin tx@NodeDict begin {3.87498 0.99998 7.47568 3.73784 2.71246
} /N@B true /N@T-0-0-0-0-0-0 16 {InitRnode } NewNode end end
 1666 919 a Fi(z)1702 927 y Ff(i)1697 896
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0-0-0-0-0 /N@T-0-0-0-0-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1697 896 a 1241 1084 a
 tx@Dict begin tx@NodeDict begin {6.25 0.99998 8.4965 4.24825 2.71246
} false /N@T-0-0-0-0-0-0-0 16 {InitRnode } NewNode end end
 1241 1084 a 5 w Fm(^)j Fi(u)1285
1092 y Ff(i)1277 1062 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0-0-0-0-0-0 /N@T-0-0-0-0-0-0-0 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1277 1062 a 1430 1084 a
 tx@Dict begin tx@NodeDict begin {5.5357 1.8333 15.9582 7.9791 2.71246
} false /N@T-0-0-0-0-0-0-1 16 {InitRnode } NewNode end end
 1430
1084 a Fi(t)1458 1092 y Ff(i)p Fo(\000)p Fg(1)1496 1062
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0-0-0-0-0-0 /N@T-0-0-0-0-0-0-1 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1496 1062 a 1681 1084 a
 tx@Dict begin tx@NodeDict begin {6.25 0.99998 7.66664 3.83331 2.71246
} false /N@T-0-0-0-0-0-0-2 16 {InitRnode } NewNode end end
 1681 1084 a 3 w Fm(^)i Fi(v)1718
1092 y Ff(i)1712 1062 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0-0-0-0-0-0 /N@T-0-0-0-0-0-0-2 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1712 1062 a 1862 1084 a
 tx@Dict begin tx@NodeDict begin {8.43332 2.39523 11.70897 5.85448
2.71246 } false /N@T-0-0-0-0-0-0-3 16 {InitRnode } NewNode end end
 1862
1084 a 5 w Fm(^)e Fi(x)1906 1049 y Ff(p)p Fg(!)1906 1104
y Ff(i)1911 1062 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0-0-0-0-0-0 /N@T-0-0-0-0-0-0-3 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1911 1062 a 2078 1084 a
 tx@Dict begin tx@NodeDict begin {6.25 0.99998 9.80292 4.90146 2.71246
} false /N@T-0-0-0-0-0-0-4 16 {InitRnode } NewNode end end
 2078 1084
a 15 w Fm(^)-53 b Fi(w)2133 1092 y Ff(i)2118 1062 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0-0-0-0-0-0 /N@T-0-0-0-0-0-0-4 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 2118
1062 a 2159 69 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@A /N@B InitNC { tx@Dict begin /Lineto /lineto load def false
pop end /AngleA 250. def /AngleB 180. def /ArmA 28.45274 def /ArmB
28.45274 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave
0.8 SLW 0. setgray 5.0 3.0 0 0 add DashLine  grestore  grestore end
 2159 69 a 2159 69 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@A /N@B InitNC { tx@Dict begin /Lineto /lineto load def false
pop end /AngleA 290. def /AngleB 0. def /ArmA 28.45274 def /ArmB 28.45274
def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8 SLW
0. setgray 5.0 3.0 0 0 add DashLine  grestore  grestore end
 2159 69 a 3096 92
a
 tx@Dict begin tx@NodeDict begin {3.87498 0.99998 9.40965 4.70482 2.71246
} /N@X true /N@T-0 16 {InitRnode } NewNode end end
 3096 92 a Fi(x)3140 100 y Fg(2)3124 257 y
 tx@Dict begin tx@NodeDict begin {14.97223 0.0 2.56943 1.28471 2.71246
} false /N@T-0-0 16 {InitRnode } NewNode end end
 3124 257
a -66 x Fm(.)3124 224 y(.)3124 257 y(.)3135 235 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0 /N@T-0-0 InitNC { NCLine  } if end gsave 0.8 SLW 0.
setgray 0 setlinecap stroke  grestore  grestore end
 3135
235 a 3100 423 a
 tx@Dict begin tx@NodeDict begin {3.87498 0.99998 8.46867 4.23433 2.71246
} false /N@T-0-0-0 16 {InitRnode } NewNode end end
 3100 423 a Fi(z)3136 431 y Fg(2)3135
400 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0-0 /N@T-0-0-0 InitNC { NCLine  } if end gsave 0.8 SLW
0. setgray 0 setlinecap stroke  grestore  grestore end
 3135 400 a 3096 588 a
 tx@Dict begin tx@NodeDict begin {3.87498 0.99998 9.40965 4.70482 2.71246
} false /N@T-0-0-0-0 16 {InitRnode } NewNode end end
 3096 588 a Fi(x)3140 596
y Fg(2)3135 565 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0-0-0 /N@T-0-0-0-0 InitNC { NCLine  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 3135 565 a 3124 753 a
 tx@Dict begin tx@NodeDict begin {14.97223 0.0 2.56943 1.28471 2.71246
} false /N@T-0-0-0-0-0 16 {InitRnode } NewNode end end
 3124 753 a -66
x Fm(.)3124 720 y(.)3124 753 y(.)3135 731 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0-0-0-0 /N@T-0-0-0-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 3135 731
a 3100 919 a
 tx@Dict begin tx@NodeDict begin {3.87498 0.99998 8.46867 4.23433 2.71246
} /N@Y true /N@T-0-0-0-0-0-0 16 {InitRnode } NewNode end end
 3100 919 a Fi(z)3136 927 y Fg(2)3135 896
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0-0-0-0-0 /N@T-0-0-0-0-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 3135 896 a 2684 1084 a
 tx@Dict begin tx@NodeDict begin {6.25 0.99998 9.4895 4.74475 2.71246
} false /N@T-0-0-0-0-0-0-0 16 {InitRnode } NewNode end end
 2684 1084 a 5 w Fm(^)-43 b Fi(u)2728
1092 y Fg(2)2724 1062 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0-0-0-0-0-0 /N@T-0-0-0-0-0-0-0 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 2724 1062 a 2881 1084 a
 tx@Dict begin tx@NodeDict begin {8.43332 2.2867 11.70897 5.85448 2.71246
} false /N@T-0-0-0-0-0-0-1 16 {InitRnode } NewNode end end
 2881
1084 a 5 w Fm(^)g Fi(x)2925 1049 y Ff(p)p Fg(!)2925 1103
y(1)2930 1062 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0-0-0-0-0-0 /N@T-0-0-0-0-0-0-1 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 2930 1062 a 3096 1084 a
 tx@Dict begin tx@NodeDict begin {6.25 0.99998 8.65964 4.32982 2.71246
} false /N@T-0-0-0-0-0-0-2 16 {InitRnode } NewNode end end
 3096 1084 a 3
w Fm(^)i Fi(v)3133 1092 y Fg(2)3132 1062 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0-0-0-0-0-0 /N@T-0-0-0-0-0-0-2 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 3132 1062
a 3286 1084 a
 tx@Dict begin tx@NodeDict begin {8.43332 2.2867 11.70897 5.85448 2.71246
} false /N@T-0-0-0-0-0-0-3 16 {InitRnode } NewNode end end
 3286 1084 a 5 w Fm(^)e Fi(x)3330 1049 y
Ff(p)p Fg(!)3330 1103 y(2)3335 1062 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0-0-0-0-0-0 /N@T-0-0-0-0-0-0-3 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 3335 1062 a 3502
1084 a
 tx@Dict begin tx@NodeDict begin {6.25 0.99998 10.79591 5.39795 2.71246
} false /N@T-0-0-0-0-0-0-4 16 {InitRnode } NewNode end end
 3502 1084 a 16 w Fm(^)-54 b Fi(w)3557 1092 y Fg(2)3547
1062 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@T-0-0-0-0-0-0 /N@T-0-0-0-0-0-0-4 InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 3547 1062 a 3591 69 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@X /N@Y InitNC { tx@Dict begin /Lineto /lineto load def false
pop end /AngleA 250. def /AngleB 180. def /ArmA 28.45274 def /ArmB
28.45274 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave
0.8 SLW 0. setgray 5.0 3.0 0 0 add DashLine  grestore  grestore end
 3591 69 a 3591 69 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@X /N@Y InitNC { tx@Dict begin /Lineto /lineto load def false
pop end /AngleA 290. def /AngleB 0. def /ArmA 28.45274 def /ArmB 28.45274
def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8 SLW
0. setgray 5.0 3.0 0 0 add DashLine  grestore  grestore end
 3591
69 a 1530 1311 a Fq(Figure)30 b(2:)39 b(The)29 b(trees)g
Fi(t)2343 1319 y Ff(i)0 1558 y Fm(for)d Fi(A)175 1566
y Ff(C)226 1558 y Fm(,)g(but)f(w)n(e)g(mark)g(the)g(initial)h(and)f
(\014nal)h(states)g(of)g(eac)n(h)0 1645 y(of)j(the)f(participating)h
Fl(fsa)p Fm(s)g Fi(A)921 1653 y Ff(c)981 1645 y Fm(\(the)f(initial)h
(state)g(for)g Fi(A)1739 1653 y Ff(c)1799 1645 y Fm(is)0
1732 y Fi(q)37 1701 y Ff(c)34 1746 y Fg(0)95 1732 y Fm(and)d(the)g
(\014nal)h(states)g Fi(f)814 1701 y Ff(c)806 1746 y Fg(1)846
1732 y Fi(;)40 b(f)952 1701 y Ff(c)944 1746 y Fg(2)984
1732 y Fi(;)13 b(:)g(:)g(:)g Fm(\).)37 b(The)26 b(transitions)i(are)0
1820 y(de\014ned)22 b(as)h(follo)n(ws.)36 b(F)-6 b(or)23
b(eac)n(h)g(transition)g(\()p Fi(q)s(;)13 b(b;)g(q)1491
1788 y Fo(0)1514 1820 y Fm(\))22 b(of)i Fi(A)1709 1828
y Ff(c)1763 1820 y Fm(w)n(e)0 1907 y(add)i(to)h Fi(A)303
1915 y Ff(C)380 1907 y Fm(the)f(transitions)i(\()p Fi(q)s(;)13
b(b;)g(q)1097 1915 y Fg(0)1132 1907 y Fm(\))26 b(and)g(\()p
Fi(f)t(;)1440 1887 y Fm(\026)1443 1907 y Fi(b;)13 b(q)1547
1875 y Fo(0)1569 1907 y Fm(\))26 b(for)i(the)0 1994 y(initial)f(state)f
Fi(q)447 1962 y Ff(b)444 2007 y Fg(0)505 1994 y Fm(and)f(for)h(eac)n(h)
g(\014nal)g(state)g Fi(f)1348 1962 y Ff(b)1340 2008 y(i)1405
1994 y Fm(of)h Fi(A)1551 2003 y Ff(b)1582 1994 y Fm(.)0
2168 y(No)n(w)21 b(supp)r(ose)g(that)g Fi(C)26 b Fm(is)21
b(a)g(class)i(of)e Fh(\021)g Fm(for)h(whic)n(h)f(all)g
Fl(fsa)g Fi(A)1795 2176 y Ff(D)0 2255 y Fm(corresp)r(onding)h(to)f
(classes)h Fi(D)h Fm(suc)n(h)e(that)f Fi(C)26 b Fh(\036)21
b Fi(D)j Fm(are)d(already)0 2343 y(constructed.)58 b(W)-6
b(e)33 b(construct)g Fi(A)1011 2351 y Ff(C)1096 2343
y Fm(as)h(follo)n(ws.)60 b(Again,)36 b(for)0 2430 y(eac)n(h)24
b Fi(c)d Fh(2)h Fi(C)5 b Fm(,)24 b(let)g Fi(A)570 2438
y Ff(c)625 2430 y Fm(b)r(e)f(an)g Fl(fsa)h Fm(corresp)r(onding)g(to)g
Fi(R)1616 2438 y Ff(c)1671 2430 y Fm(\(with)0 2517 y(disjoin)n(t)k
(states)f(for)h(distinct)e Fi(c)p Fm('s\).)39 b(The)27
b(set)g(of)g(states)h(of)f Fi(A)1799 2525 y Ff(C)0 2604
y Fm(is)g(the)g(union)f(of)i(the)f(sets)g(of)h(states)f(of)h(the)e
Fl(fsa)p Fm(s)i Fi(A)1566 2612 y Ff(c)1624 2604 y Fm(for)g
Fi(c)23 b Fh(2)0 2691 y Fi(C)5 b Fm(,)29 b(similarly)g(for)g(the)e
(\014nal)h(states,)i(and)e(the)g(initial)h(state)g(is)0
2779 y(again)21 b(left)g(unsp)r(eci\014ed.)32 b(The)20
b(transitions)h(of)g Fi(A)1418 2787 y Ff(C)1489 2779
y Fm(are)f(de\014ned)0 2866 y(as)36 b(follo)n(ws.)68
b(As)35 b(in)h(the)f(base)h(case,)k(for)d(eac)n(h)e Fi(b)j
Fh(2)h Fi(C)i Fm(and)0 2953 y(transition)30 b(\()p Fi(q)s(;)13
b(b;)g(q)559 2921 y Fo(0)582 2953 y Fm(\))29 b(in)g Fi(A)792
2961 y Ff(c)853 2953 y Fm(w)n(e)h(add)f(to)h Fi(A)1279
2961 y Ff(C)1359 2953 y Fm(the)f(transitions)0 3040 y(\()p
Fi(q)s(;)13 b(b;)g(q)202 3048 y Fg(0)237 3040 y Fm(\))21
b(and)f(\()p Fi(f)t(;)534 3020 y Fm(\026)538 3040 y Fi(b)o(;)14
b(q)642 3008 y Fo(0)664 3040 y Fm(\))21 b(for)h(the)e(initial)i(state)g
Fi(q)1390 3048 y Fg(0)1446 3040 y Fm(and)e(for)i(eac)n(h)0
3127 y(\014nal)28 b(state)h Fi(f)37 b Fm(of)29 b Fi(A)586
3136 y Ff(b)617 3127 y Fm(.)43 b(Unlik)n(e)27 b(the)h(base)h(case,)h(w)
n(e)f(no)n(w)g(ha)n(v)n(e)0 3214 y(to)c(tak)n(e)g(care)h(of)g(sym)n(b)r
(ols)f Fi(b)g Fm(b)r(elonging)h(to)g(some)f(class)h Fi(B)j
Fm(for)0 3302 y(whic)n(h)k Fi(C)39 b Fh(\036)33 b Fi(B)t
Fm(.)57 b(F)-6 b(or)33 b(eac)n(h)g(suc)n(h)g Fi(b)g Fm(w)n(e)g(add)g
(to)g Fi(A)1562 3310 y Ff(C)1647 3302 y Fm(a)g(new)0
3389 y(disjoin)n(t)h(cop)n(y)g(of)g(the)f(already)h(constructed)g
Fi(A)1464 3397 y Ff(B)1516 3389 y Fm(,)i(together)0 3476
y(with)30 b(the)f(transitions)h(\()p Fi(q)s(;)13 b(b;)g(q)901
3484 y Fg(0)936 3476 y Fm(\))30 b(and)f(\()p Fi(f)t(;)1251
3456 y Fm(\026)1254 3476 y Fi(b;)13 b(q)1358 3444 y Fo(0)1380
3476 y Fm(\))29 b(for)i(the)e(cop)n(y)0 3563 y(of)35
b(the)f(initial)i(state)e Fi(q)698 3571 y Fg(0)767 3563
y Fm(and)g(for)i(the)e(copies)h(of)g(eac)n(h)f(\014nal)0
3650 y(state)26 b Fi(f)34 b Fm(of)27 b Fi(A)405 3659
y Ff(b)436 3650 y Fm(.)0 3825 y(This)37 b(induction)f(allo)n(ws)i(us)f
(to)f(construct)g(an)h Fl(fsa)f Fi(A)1671 3833 y Ff(C)1758
3825 y Fm(for)0 3912 y(the)28 b(minim)n(um)d(class)30
b Fi(C)j Fm(con)n(taining)c(the)f(ro)r(ot)h(lab)r(el)g
Fi(r)r Fm(.)42 b(The)0 3999 y(\014nal)29 b Fl(fsa)f Fi(A)380
4008 y Ff(d)445 3999 y Fm(is)h(obtained)g(b)n(y)f(adding)g(a)h(new)g
(start)g(state)h Fi(s)0 4086 y Fm(and)c(\014nal)g(state)h
Fi(g)h Fm(together)f(with)f(transitions)h(\()p Fi(s;)13
b(r)n(;)g(q)1636 4094 y Fg(0)1671 4086 y Fm(\))26 b(and)0
4173 y(\()p Fi(f)t(;)17 b Fm(\026)-42 b Fi(r)r(;)13 b(g)s
Fm(\))29 b(for)i(the)f(start)h(state)f Fi(q)949 4181
y Fg(0)1014 4173 y Fm(and)g(eac)n(h)g(\014nal)g(state)h
Fi(f)39 b Fm(of)0 4260 y Fi(A)58 4268 y Ff(r)92 4260
y Fm(.)0 4435 y(W)-6 b(e)31 b(illustrate)h(the)f(construction)h(of)f
Fi(A)1202 4444 y Ff(d)1269 4435 y Fm(with)h(some)f(exam-)0
4522 y(ples.)83 5030 y Fl(Example)41 b Fm(4.7.)e(:)31
b(Consider)20 b(the)e(DTD)h Fi(d)1385 4983 y(r)k Fh(!)e
Fi(aa)1385 5075 y(a)g Fh(!)g Fi(a)1586 5043 y Fg(?)1697
5030 y Fm(.The)0 5166 y(dep)r(endency)34 b(graph)i Fi(G)716
5175 y Ff(d)788 5166 y Fm(has)g(the)f(edges)h(\()p Fi(r)n(;)12
b(a)p Fm(\))36 b(and)f(\()p Fi(a;)12 b(a)p Fm(\).)0 5253
y(The)27 b(classes)i(of)f Fh(\021)e Fm(are)i Fh(f)p Fi(r)r
Fh(g)p Fi(;)13 b Fh(f)p Fi(a)p Fh(g)p Fm(,)29 b(and)d
Fh(f)p Fi(r)r Fh(g)e(\036)f(f)p Fi(a)p Fh(g)p Fm(.)39
b(The)27 b Fl(fsa)0 5340 y Fi(A)58 5348 y Ff(r)118 5340
y Fm(and)e Fi(A)325 5348 y Ff(a)388 5340 y Fm(are)h(:)2050
1594 y
 tx@Dict begin tx@NodeDict begin {12.09402 7.43742 19.53143 9.76572
2.71246 } false /N@M-1-1-1 16 {InitRnode } NewNode end end
 2050 1594 a 2095 1594 a
 tx@Dict begin tx@NodeDict begin {8.62944 2 div 6.4066 1.75 add 2 div
2 copy 1.75 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@q0 11 {InitCnode
} NewNode end end
 2095 1594 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  8.62944 2 div 6.4066
1.75 add 2 div 2 copy 1.75 sub 4 2 roll Pyth 3.0 add CLW 2 div add
0 360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fi(q)2132 1562 y Ff(r)2129 1607
y Fg(0)2566 1594 y
 tx@Dict begin tx@NodeDict begin {3.8 3.8 7.6 3.8 2.71246 } false /N@M-1-1-2
16 {InitRnode } NewNode end end
 2566 1594 a 2598 1594 a
 tx@Dict begin tx@NodeDict begin {0.0 2 div 0.0 0.0 add 2 div 2 copy
0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@q2 11 {InitCnode }
NewNode end end
 2598 1594
a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0.0 2 div 0.0 0.0 add
2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0 360 arc
closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial 2984 1594 a
 tx@Dict begin tx@NodeDict begin {14.31863 9.66203 23.98065 11.99033
2.71246 } false /N@M-1-1-3 16 {InitRnode } NewNode end end

2984 1594 a 3043 1594 a
 tx@Dict begin tx@NodeDict begin {9.64232 2 div 6.4066 1.75 add 2 div
2 copy 1.75 sub 4 2 roll Pyth 3.0 add 2.6 add} false /N@q1 11 {InitCnode
} NewNode end end
 3043 1594 a @beginspecial @setspecial
 tx@Dict begin STP newpath 2.6 SLW 0. setgray  9.64232 2 div 6.4066
1.75 add 2 div 2 copy 1.75 sub 4 2 roll Pyth 3.0 add CLW 2 div add
0 360 arc closepath gsave 2.6 SLW 0. setgray 0 setlinecap stroke  grestore
gsave 1.0 SLW 1. setgray stroke grestore end


@endspecial Fi(f)3088 1562 y Ff(r)3183 1571 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0 3.0 0 0 /N@q0 /N@q2
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 3183 1571
a 3183 1571 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 3183 1571 a 3183 1571 a
 tx@Dict begin { 4.0 tx@Dict /NCLW known { NCLW add } if 4.90031 3.87498
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 3183 1571 a 3163
1588 a Fi(a)3183 1571 y
 tx@Dict begin PutEnd  end
 3183 1571 a 3183 1571 a
 tx@Dict begin PutEnd  end
 3183
1571 a 3183 1571 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0 3.0 0 0 /N@q2 /N@q1
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 3183 1571 a 3183 1571 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 3183 1571
a 3183 1571 a
 tx@Dict begin { 4.0 tx@Dict /NCLW known { NCLW add } if 4.90031 3.87498
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 3183 1571 a 3163 1588 a Fi(a)3183 1571
y
 tx@Dict begin PutEnd  end
 3183 1571 a 3183 1571 a
 tx@Dict begin PutEnd  end
 3183 1571 a 204 w Fm(and)2050
1939 y
 tx@Dict begin tx@NodeDict begin {20.36087 15.70427 36.06512 18.03256
2.71246 } false /N@M-1-1-1 16 {InitRnode } NewNode end end
 2050 1939 a 2103 1939 a
 tx@Dict begin tx@NodeDict begin {23.13428 2 div 6.4066 1.75 add 2
div 2 copy 1.75 sub 4 2 roll Pyth 3.0 add 2.6 add} false /N@q0 11 {InitCnode
} NewNode end end
 2103 1939 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 2.6 SLW 0. setgray  23.13428 2 div 6.4066
1.75 add 2 div 2 copy 1.75 sub 4 2 roll Pyth 3.0 add CLW 2 div add
0 360 arc closepath gsave 2.6 SLW 0. setgray 0 setlinecap stroke  grestore
gsave 1.0 SLW 1. setgray stroke grestore end
 
@endspecial Fi(q)2140 1907 y Ff(a)2137 1952
y Fg(0)2178 1939 y Fi(;)13 b(f)2257 1907 y Ff(a)2249
1952 y Fg(1)2703 1939 y
 tx@Dict begin tx@NodeDict begin {14.47614 9.81953 24.29565 12.14783
2.71246 } false /N@M-1-1-2 16 {InitRnode } NewNode end end
 2703 1939 a 2763 1939 a
 tx@Dict begin tx@NodeDict begin {10.01804 2 div 6.4066 1.75 add 2
div 2 copy 1.75 sub 4 2 roll Pyth 3.0 add 2.6 add} false /N@q1 11 {InitCnode
} NewNode end end
 2763
1939 a @beginspecial @setspecial
 tx@Dict begin STP newpath 2.6 SLW 0. setgray  10.01804 2 div 6.4066
1.75 add 2 div 2 copy 1.75 sub 4 2 roll Pyth 3.0 add CLW 2 div add
0 360 arc closepath gsave 2.6 SLW 0. setgray 0 setlinecap stroke  grestore
gsave 1.0 SLW 1. setgray stroke grestore end
 
@endspecial Fi(f)2808
1907 y Ff(a)2800 1952 y Fg(2)2905 1916 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0 3.0 0 0 /N@q0 /N@q1
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 2905 1916 a
2905 1916 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 2905 1916 a 2905 1916 a
 tx@Dict begin { 4.0 tx@Dict /NCLW known { NCLW add } if 4.90031 3.87498
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 2905 1916 a 2885
1932 a Fi(a)2905 1916 y
 tx@Dict begin PutEnd  end
 2905 1916 a 2905 1916 a
 tx@Dict begin PutEnd  end
 2905
1916 a 2050 2221 a Fm(Th)n(us)36 b(the)f Fl(fsa)h Fm(asso)r(ciated)i
(to)f(the)e(equiv)l(alence)h(class)i Fh(f)p Fi(a)p Fh(g)2050
2308 y Fm(is:)2361 2330 y
 tx@Dict begin tx@NodeDict begin {5.6 5.6 11.20001 5.6 2.71246 } false
/N@M-1-1-1 16 {InitRnode } NewNode end end
 2361 2330 a 2408 2330 a
 tx@Dict begin tx@NodeDict begin {0.0 2 div 0.0 0.0 add 2 div 2 copy
0.0 sub 4 2 roll Pyth 3.0 add 2.6 add} false /N@q0 11 {InitCnode }
NewNode end end
 2408
2330 a @beginspecial @setspecial
 tx@Dict begin STP newpath 2.6 SLW 0. setgray  0.0 2 div 0.0 0.0 add
2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0 360 arc
closepath gsave 2.6 SLW 0. setgray 0 setlinecap stroke  grestore gsave
1.0 SLW 1. setgray stroke grestore end
 
@endspecial 2809 2330
a
 tx@Dict begin tx@NodeDict begin {5.6 5.6 11.20001 5.6 2.71246 } false
/N@M-1-1-2 16 {InitRnode } NewNode end end
 2809 2330 a 2855 2330 a
 tx@Dict begin tx@NodeDict begin {0.0 2 div 0.0 0.0 add 2 div 2 copy
0.0 sub 4 2 roll Pyth 3.0 add 2.6 add} false /N@q1 11 {InitCnode }
NewNode end end
 2855 2330 a @beginspecial @setspecial
 tx@Dict begin STP newpath 2.6 SLW 0. setgray  0.0 2 div 0.0 0.0 add
2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0 360 arc
closepath gsave 2.6 SLW 0. setgray 0 setlinecap stroke  grestore gsave
1.0 SLW 1. setgray stroke grestore end


@endspecial 2902 2308 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0 3.0 0 0 /N@q0 /N@q0
InitNC { /AngleA 100. def /r 5.69054 def NCCircle x y r angleA angleB
{ ArrowB } { sub } ArcArrow arc end } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 2902 2308 a 2902 2308 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 2902
2308 a 2902 2308 a
 tx@Dict begin { 4.0 tx@Dict /NCLW known { NCLW add } if 4.90031 3.87498
0.0 NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 2902 2308 a 2882 2324 a Fi(a)2902
2308 y
 tx@Dict begin PutEnd  end
 2902 2308 a 2902 2308 a
 tx@Dict begin PutEnd  end
 2902 2308 a 2902 2308
a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0 3.0 0 0 /N@q0 /N@q1
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 2902 2308 a 2902 2308 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 2902 2308 a 2902 2308 a
 tx@Dict begin { 4.0 tx@Dict /NCLW known { NCLW add } if 4.90031 5.13608
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 2902
2308 a 2883 2329 a Fm(\026)-39 b Fi(a)2902 2308 y
 tx@Dict begin PutEnd  end
 2902
2308 a 2902 2308 a
 tx@Dict begin PutEnd  end
 2902 2308 a 2902 2308 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0 3.0 0 0 /N@q1 /N@q1
InitNC { /AngleA 280. def /r 5.69054 def NCCircle x y r angleA angleB
{ ArrowB } { sub } ArcArrow arc end } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 2902 2308
a 2902 2308 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 2902 2308 a 2902 2308 a
 tx@Dict begin { 4.0 tx@Dict /NCLW known { NCLW add } if 4.90031 5.13608
0.0 NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 2902 2308 a 2883
2329 a Fm(\026)g Fi(a)2902 2308 y
 tx@Dict begin PutEnd  end
 2902 2308 a 2902 2308
a
 tx@Dict begin PutEnd  end
 2902 2308 a 2050 2524 a Fm(This)26 b(yields)g(the)f
Fl(fsa)h Fi(A)2777 2533 y Ff(d)2838 2524 y Fm(depicted)f(in)h(Figure)g
(4.)2050 2698 y(Notice)33 b(that)g Fi(A)2530 2707 y Ff(d)2598
2698 y Fm(recognizes)i(all)f(the)e(w)n(ell-balanced)i(w)n(ords)2050
2786 y(of)25 b Fh(L)p Fm(\()p Fi(d)p Fm(\).)34 b(But)25
b(it)g(also)h(recognizes)h(additional)f(w)n(ell-balanced)2050
2873 y(w)n(ords)31 b(suc)n(h)g(as)h Fi(r)r(aa)q Fm(\026)-39
b Fi(a)n(a)q Fm(\026)g Fi(a)q Fm(\026)g Fi(a)s Fm(\026)d
Fi(r)r Fm(.)51 b(It)30 b(turns)h(out)g(that)f(this)h(is)h(un-)2050
2960 y(a)n(v)n(oidable:)54 b(there)35 b(is)h(no)f(automaton)g(that)f
(recognizes)j(the)2050 3047 y(ab)r(o)n(v)n(e)19 b(DTD.)g(This)h(will)h
(b)r(e)e(sho)n(wn)h(in)f(Lemma)f(4.4)i(will)h(sho)n(w.)2133
3273 y Fl(Example)41 b Fm(4.8.)e(:)33 b(Revisit)25 b(no)n(w)g(the)f
(DTD)g Fi(d)g Fm(of)i(Example)2050 3402 y(4.3:)2241 3357
y Fi(a)21 b Fh(!)g Fi(b)2434 3325 y Fo(\003)2241 3444
y Fi(b)g Fh(!)g Fi(a)2434 3412 y Fo(\003)2558 3402 y
Fm(.)2050 3622 y(This)33 b(induces)g(one)g(equiv)l(alence)g(class)i(of)
e(sym)n(b)r(ols:)49 b Fh(f)p Fi(a;)13 b(b)p Fh(g)p Fm(.)2050
3709 y(The)26 b Fl(fsa)f Fi(A)2411 3717 y Ff(a)2474 3709
y Fm(and)g Fi(A)2681 3718 y Ff(b)2738 3709 y Fm(are:)2229
3906 y
 tx@Dict begin tx@NodeDict begin {5.6 5.6 11.20001 5.6 2.71246 } false
/N@M-1-1-1 16 {InitRnode } NewNode end end
 2229 3906 a 2275 3906 a
 tx@Dict begin tx@NodeDict begin {0.0 2 div 0.0 0.0 add 2 div 2 copy
0.0 sub 4 2 roll Pyth 3.0 add 2.6 add} false /N@q0 11 {InitCnode }
NewNode end end
 2275 3906 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 2.6 SLW 0. setgray  0.0 2 div 0.0 0.0 add
2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0 360 arc
closepath gsave 2.6 SLW 0. setgray 0 setlinecap stroke  grestore gsave
1.0 SLW 1. setgray stroke grestore end
 
@endspecial 2322 3883 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0 3.0 0 0 /N@q0 /N@q0
InitNC { /AngleA 100. def /r 7.11317 def NCCircle x y r angleA angleB
{ ArrowB } { sub } ArcArrow arc end } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 2322 3883 a 2322
3883 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 2322 3883 a 2322 3883 a
 tx@Dict begin { 4.0 tx@Dict /NCLW known { NCLW add } if 3.96387 6.25
0.0 NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 2322 3883 a 2306 3909
a Fi(b)2322 3883 y
 tx@Dict begin PutEnd  end
 2322 3883 a 2322 3883 a
 tx@Dict begin PutEnd  end
 2322 3883
a 205 w Fm(and)2855 3906 y
 tx@Dict begin tx@NodeDict begin {5.6 5.6 11.20001 5.6 2.71246 } false
/N@M-1-1-1 16 {InitRnode } NewNode end end
 2855 3906 a 2902 3906 a
 tx@Dict begin tx@NodeDict begin {0.0 2 div 0.0 0.0 add 2 div 2 copy
0.0 sub 4 2 roll Pyth 3.0 add 2.6 add} false /N@q0 11 {InitCnode }
NewNode end end
 2902
3906 a @beginspecial @setspecial
 tx@Dict begin STP newpath 2.6 SLW 0. setgray  0.0 2 div 0.0 0.0 add
2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0 360 arc
closepath gsave 2.6 SLW 0. setgray 0 setlinecap stroke  grestore gsave
1.0 SLW 1. setgray stroke grestore end
 
@endspecial 2948 3883
a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0 3.0 0 0 /N@q0 /N@q0
InitNC { /AngleA 100. def /r 7.11317 def NCCircle x y r angleA angleB
{ ArrowB } { sub } ArcArrow arc end } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 2948 3883 a 2948 3883 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 2948 3883 a 2948 3883 a
 tx@Dict begin { 4.0 tx@Dict /NCLW known { NCLW add } if 4.90031 3.87498
0.0 NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 2948
3883 a 2928 3899 a Fi(a)2948 3883 y
 tx@Dict begin PutEnd  end
 2948 3883 a 2948
3883 a
 tx@Dict begin PutEnd  end
 2948 3883 a Fi(:)2050 4104 y Fm(Th)n(us,)g(the)g
Fl(fsa)g Fm(asso)r(ciated)i(to)e(the)f(equiv)l(alence)h(class)h
Fh(f)p Fi(a;)14 b(b)p Fh(g)2050 4191 y Fm(is:)2533 4517
y
 tx@Dict begin tx@NodeDict begin {18.56087 13.90427 32.46512 16.23256
2.71246 } false /N@M-1-1-1 16 {InitRnode } NewNode end end
 2533 4517 a 2571 4517 a
 tx@Dict begin tx@NodeDict begin {23.13428 2 div 6.4066 1.75 add 2
div 2 copy 1.75 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@q0 11 {InitCnode
} NewNode end end
 2571 4517 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  23.13428 2 div 6.4066
1.75 add 2 div 2 copy 1.75 sub 4 2 roll Pyth 3.0 add CLW 2 div add
0 360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end


@endspecial Fi(q)2608 4485 y Ff(a)2605 4530 y Fg(0)2646
4517 y Fi(;)f(f)2725 4485 y Ff(a)3157 4517 y
 tx@Dict begin tx@NodeDict begin {18.80624 12.56628 31.37253 15.68626
2.71246 } false /N@M-1-1-2 16 {InitRnode } NewNode end end
 3157 4517
a 3197 4517 a
 tx@Dict begin tx@NodeDict begin {21.6655 2 div 7.98996 1.75 add 2
div 2 copy 1.75 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@q1 11 {InitCnode
} NewNode end end
 3197 4517 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  21.6655 2 div 7.98996
1.75 add 2 div 2 copy 1.75 sub 4 2 roll Pyth 3.0 add CLW 2 div add
0 360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial
Fi(q)3234 4485 y Ff(b)3231 4530 y Fg(0)3266 4517 y Fi(;)g(f)3345
4485 y Ff(b)3417 4495 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0 3.0 0 0 /N@q0 /N@q1
InitNC { yB yA sub xB xA sub Atan dup 15.  add /AngleA ED 15.  sub
180 add /AngleB ED 0.67  0.67  NCCurve  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 3417 4495 a 3417 4495 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 3417
4495 a 3417 4495 a
 tx@Dict begin { 4.0 tx@Dict /NCLW known { NCLW add } if 12.97527 6.25
1.75 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 3417 4495 a 3363 4513 a Fi(b;)h Fm(\026)-39
b Fi(a)3417 4495 y
 tx@Dict begin PutEnd  end
 3417 4495 a 3417 4495 a
 tx@Dict begin PutEnd  end
 3417 4495
a 3417 4495 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0 3.0 0 0 /N@q1 /N@q0
InitNC { yB yA sub xB xA sub Atan dup 15.  add /AngleA ED 15.  sub
180 add /AngleB ED 0.67  0.67  NCCurve  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 3417 4495 a 3417 4495 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 3417 4495 a 3417
4495 a
 tx@Dict begin { 4.0 tx@Dict /NCLW known { NCLW add } if 12.97527 7.5111
1.75 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 3417 4495 a 3360 4499 a Fm(\026)3363 4519 y Fi(b;)13
b(a)3417 4495 y
 tx@Dict begin PutEnd  end
 3417 4495 a 3417 4495 a
 tx@Dict begin PutEnd  end
 3417 4495 a 2050
4792 a Fm(If)25 b Fi(a)h Fm(is)g(assumed)f(to)h(b)r(e)f(the)h(ro)r(ot,)
g(this)g(yields)g(the)f Fl(fsa)h Fi(A)3796 4801 y Ff(d)3832
4792 y Fm(:)2511 5111 y
 tx@Dict begin tx@NodeDict begin {5.6 5.6 11.20001 5.6 2.71246 } false
/N@M-1-1-1 16 {InitRnode } NewNode end end
 2511 5111 a 2557 5111 a
 tx@Dict begin tx@NodeDict begin {0.0 2 div 0.0 0.0 add 2 div 2 copy
0.0 sub 4 2 roll Pyth 3.0 add 2.6 add} false /N@q1 11 {InitCnode }
NewNode end end
 2557
5111 a @beginspecial @setspecial
 tx@Dict begin STP newpath 2.6 SLW 0. setgray  0.0 2 div 0.0 0.0 add
2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0 360 arc
closepath gsave 2.6 SLW 0. setgray 0 setlinecap stroke  grestore gsave
1.0 SLW 1. setgray stroke grestore end
 
@endspecial 2958 5111
a
 tx@Dict begin tx@NodeDict begin {3.8 3.8 7.6 3.8 2.71246 } false /N@M-1-1-2
16 {InitRnode } NewNode end end
 2958 5111 a 2990 5111 a
 tx@Dict begin tx@NodeDict begin {0.0 2 div 0.0 0.0 add 2 div 2 copy
0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@q5 11 {InitCnode }
NewNode end end
 2990 5111 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0.0 2 div 0.0 0.0 add
2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0 360 arc
closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore end


@endspecial 3376 5111 a
 tx@Dict begin tx@NodeDict begin {3.8 3.8 7.6 3.8 2.71246 } false /N@M-1-1-3
16 {InitRnode } NewNode end end
 3376 5111 a 3407 5111 a
 tx@Dict begin tx@NodeDict begin {0.0 2 div 0.0 0.0 add 2 div 2 copy
0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@q7 11 {InitCnode }
NewNode end end
 3407
5111 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0.0 2 div 0.0 0.0 add
2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0 360 arc
closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial 3439 5089
a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0 3.0 0 0 /N@q1 /N@q5
InitNC { yB yA sub xB xA sub Atan dup 15.  add /AngleA ED 15.  sub
180 add /AngleB ED 0.67  0.67  NCCurve  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 3439 5089 a 3439 5089 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 3439 5089 a 3439 5089 a
 tx@Dict begin { 4.0 tx@Dict /NCLW known { NCLW add } if 4.90031 3.87498
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 3439
5089 a 3419 5105 a Fi(a)3439 5089 y
 tx@Dict begin PutEnd  end
 3439 5089 a 3439
5089 a
 tx@Dict begin PutEnd  end
 3439 5089 a 3439 5089 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0 3.0 0 0 /N@q5 /N@q1
InitNC { yB yA sub xB xA sub Atan dup 15.  add /AngleA ED 15.  sub
180 add /AngleB ED 0.67  0.67  NCCurve  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 3439 5089 a 3439 5089
a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 3439 5089 a 3439 5089 a
 tx@Dict begin { 4.0 tx@Dict /NCLW known { NCLW add } if 4.90031 5.13608
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 3439 5089 a 3420 5110 a Fm(\026)-39
b Fi(a)3439 5089 y
 tx@Dict begin PutEnd  end
 3439 5089 a 3439 5089 a
 tx@Dict begin PutEnd  end
 3439 5089
a 3439 5089 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0 3.0 0 0 /N@q5 /N@q7
InitNC { yB yA sub xB xA sub Atan dup 15.  add /AngleA ED 15.  sub
180 add /AngleB ED 0.67  0.67  NCCurve  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 3439 5089 a 3439 5089 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 3439 5089 a 3439
5089 a
 tx@Dict begin { 4.0 tx@Dict /NCLW known { NCLW add } if 12.97527 6.25
1.75 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 3439 5089 a 3386 5107 a Fm(\026)g Fi(a;)13 b(b)3439
5089 y
 tx@Dict begin PutEnd  end
 3439 5089 a 3439 5089 a
 tx@Dict begin PutEnd  end
 3439 5089 a 3439 5089
a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0 3.0 0 0 /N@q7 /N@q5
InitNC { yB yA sub xB xA sub Atan dup 15.  add /AngleA ED 15.  sub
180 add /AngleB ED 0.67  0.67  NCCurve  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 3439 5089 a 3439 5089 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 3439 5089 a 3439 5089 a
 tx@Dict begin { 4.0 tx@Dict /NCLW known { NCLW add } if 12.97527 7.5111
1.75 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 3439
5089 a 3385 5113 a Fi(a;)3457 5093 y Fm(\026)3460 5113
y Fi(b)3439 5089 y
 tx@Dict begin PutEnd  end
 3439 5089 a 3439 5089 a
 tx@Dict begin PutEnd  end
 3439 5089
a 2050 5340 a Fm(Note)31 b(that)h Fi(A)2472 5349 y Ff(d)2539
5340 y Fm(is)g(equiv)l(alen)n(t)f(to)h(the)g Fl(fsa)f
Fm(of)i(Example)e(4.3)p eop
%%Page: 9 9
9 8 bop 966 162 a
 tx@Dict begin tx@NodeDict begin {3.8 3.8 7.6 3.8 2.71246 } false /N@M-1-1-1
16 {InitRnode } NewNode end end
 966 162 a 998 162 a
 tx@Dict begin tx@NodeDict begin {0.0 2 div 0.0 0.0 add 2 div 2 copy
0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@q0 11 {InitCnode }
NewNode end end
 998 162 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0.0 2 div 0.0 0.0 add
2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0 360 arc
closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial 1383 162 a
 tx@Dict begin tx@NodeDict begin {12.09402 7.43742 19.53143 9.76572
2.71246 } false /N@M-1-1-2 16 {InitRnode } NewNode end end
 1383 162 a 1429 162
a
 tx@Dict begin tx@NodeDict begin {8.62944 2 div 6.4066 1.75 add 2 div
2 copy 1.75 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@q1 11 {InitCnode
} NewNode end end
 1429 162 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  8.62944 2 div 6.4066
1.75 add 2 div 2 copy 1.75 sub 4 2 roll Pyth 3.0 add CLW 2 div add
0 360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fi(q)1466
130 y Ff(r)1463 175 y Fg(0)1900 162 y
 tx@Dict begin tx@NodeDict begin {3.8 3.8 7.6 3.8 2.71246 } false /N@M-1-1-3
16 {InitRnode } NewNode end end
 1900 162 a 1932
162 a
 tx@Dict begin tx@NodeDict begin {0.0 2 div 0.0 0.0 add 2 div 2 copy
0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@q2 11 {InitCnode }
NewNode end end
 1932 162 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0.0 2 div 0.0 0.0 add
2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0 360 arc
closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial
2317 162 a
 tx@Dict begin tx@NodeDict begin {12.51863 7.86203 20.38065 10.19032
2.71246 } false /N@M-1-1-4 16 {InitRnode } NewNode end end
 2317 162 a 2362 162 a
 tx@Dict begin tx@NodeDict begin {9.64232 2 div 6.4066 1.75 add 2 div
2 copy 1.75 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@q6 11 {InitCnode
} NewNode end end
 2362 162 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  9.64232 2 div 6.4066
1.75 add 2 div 2 copy 1.75 sub 4 2 roll Pyth 3.0 add CLW 2 div add
0 360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fi(f)2407 130 y Ff(r)2841 162
y
 tx@Dict begin tx@NodeDict begin {5.6 5.6 11.20001 5.6 2.71246 } false
/N@M-1-1-5 16 {InitRnode } NewNode end end
 2841 162 a 2887 162 a
 tx@Dict begin tx@NodeDict begin {0.0 2 div 0.0 0.0 add 2 div 2 copy
0.0 sub 4 2 roll Pyth 3.0 add 2.6 add} false /N@q3 11 {InitCnode }
NewNode end end
 2887 162 a @beginspecial @setspecial
 tx@Dict begin STP newpath 2.6 SLW 0. setgray  0.0 2 div 0.0 0.0 add
2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0 360 arc
closepath gsave 2.6 SLW 0. setgray 0 setlinecap stroke  grestore gsave
1.0 SLW 1. setgray stroke grestore end


@endspecial 1433 622 a
 tx@Dict begin tx@NodeDict begin {3.8 3.8 7.6 3.8 2.71246 } false /N@M-1-2-2
16 {InitRnode } NewNode end end
 1433 622 a 1465 622 a
 tx@Dict begin tx@NodeDict begin {0.0 2 div 0.0 0.0 add 2 div 2 copy
0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@q4 11 {InitCnode }
NewNode end end
 1465 622
a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0.0 2 div 0.0 0.0 add
2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0 360 arc
closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial 1900 622 a
 tx@Dict begin tx@NodeDict begin {3.8 3.8 7.6 3.8 2.71246 } false /N@M-1-2-3
16 {InitRnode } NewNode end end
 1900
622 a 1932 622 a
 tx@Dict begin tx@NodeDict begin {0.0 2 div 0.0 0.0 add 2 div 2 copy
0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@q5 11 {InitCnode }
NewNode end end
 1932 622 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0.0 2 div 0.0 0.0 add
2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0 360 arc
closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore end


@endspecial 2370 622 a
 tx@Dict begin tx@NodeDict begin {3.8 3.8 7.6 3.8 2.71246 } false /N@M-1-2-4
16 {InitRnode } NewNode end end
 2370 622 a 2402 622 a
 tx@Dict begin tx@NodeDict begin {0.0 2 div 0.0 0.0 add 2 div 2 copy
0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@q7 11 {InitCnode }
NewNode end end
 2402 622
a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0.0 2 div 0.0 0.0 add
2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0 360 arc
closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial 2856 622 a
 tx@Dict begin tx@NodeDict begin {3.8 3.8 7.6 3.8 2.71246 } false /N@M-1-2-5
16 {InitRnode } NewNode end end
 2856
622 a 2887 622 a
 tx@Dict begin tx@NodeDict begin {0.0 2 div 0.0 0.0 add 2 div 2 copy
0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@q8 11 {InitCnode }
NewNode end end
 2887 622 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0.0 2 div 0.0 0.0 add
2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0 360 arc
closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore end


@endspecial 2934 599 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0 3.0 0 0 /N@q0 /N@q1
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 2934 599 a 2934 599 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 2934 599
a 2934 599 a
 tx@Dict begin { 4.0 tx@Dict /NCLW known { NCLW add } if 4.43054 3.87498
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 2934 599 a 2916 615 a Fi(r)2934 599 y
 tx@Dict begin PutEnd  end
 2934
599 a 2934 599 a
 tx@Dict begin PutEnd  end
 2934 599 a 2934 599 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0 3.0 0 0 /N@q6 /N@q3
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 2934 599 a 2934
599 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 2934 599 a 2934 599 a
 tx@Dict begin { 4.0 tx@Dict /NCLW known { NCLW add } if 4.43054 5.13608
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 2934 599 a 2919 620 a Fm(\026)-41
b Fi(r)2934 599 y
 tx@Dict begin PutEnd  end
 2934 599 a 2934 599 a
 tx@Dict begin PutEnd  end
 2934 599 a 2934
599 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0 3.0 0 0 /N@q1 /N@q4
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 2934 599 a 2934 599 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 2934 599 a 2934 599 a
 tx@Dict begin { 4.0 tx@Dict /NCLW known { NCLW add } if 4.90031 3.87498
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 2934
599 a 2914 615 a Fi(a)2934 599 y
 tx@Dict begin PutEnd  end
 2934 599 a 2934 599
a
 tx@Dict begin PutEnd  end
 2934 599 a 2934 599 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0 3.0 0 0 /N@q5 /N@q2
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 2934 599 a 2934 599 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 2934 599
a 2934 599 a
 tx@Dict begin { 4.0 tx@Dict /NCLW known { NCLW add } if 4.90031 5.13608
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 2934 599 a 2915 620 a Fm(\026)i Fi(a)2934
599 y
 tx@Dict begin PutEnd  end
 2934 599 a 2934 599 a
 tx@Dict begin PutEnd  end
 2934 599 a 2934 599 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0 3.0 0 0 /N@q4 /N@q4
InitNC { /AngleA 100. def /r 5.69054 def NCCircle x y r angleA angleB
{ ArrowB } { sub } ArcArrow arc end } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 2934
599 a 2934 599 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 2934 599 a 2934 599 a
 tx@Dict begin { 4.0 tx@Dict /NCLW known { NCLW add } if 4.90031 3.87498
0.0 NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 2934 599 a 2914
615 a Fi(a)2934 599 y
 tx@Dict begin PutEnd  end
 2934 599 a 2934 599 a
 tx@Dict begin PutEnd  end
 2934 599
a 2934 599 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0 3.0 0 0 /N@q5 /N@q5
InitNC { /AngleA 250. def /r 5.69054 def NCCircle x y r angleA angleB
{ ArrowB } { sub } ArcArrow arc end } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 2934 599 a 2934 599 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 2934 599 a 2934 599
a
 tx@Dict begin { 4.0 tx@Dict /NCLW known { NCLW add } if 4.90031 5.13608
0.0 NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 2934 599 a 2915 620 a Fm(\026)g Fi(a)2934 599 y
 tx@Dict begin PutEnd  end
 2934
599 a 2934 599 a
 tx@Dict begin PutEnd  end
 2934 599 a 2934 599 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0 3.0 0 0 /N@q4 /N@q5
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 2934 599 a 2934
599 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 2934 599 a 2934 599 a
 tx@Dict begin { 4.0 tx@Dict /NCLW known { NCLW add } if 4.90031 5.13608
0.0 NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 2934 599 a 2915 620 a Fm(\026)g
Fi(a)2934 599 y
 tx@Dict begin PutEnd  end
 2934 599 a 2934 599 a
 tx@Dict begin PutEnd  end
 2934 599 a 2934
599 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0 3.0 0 0 /N@q4 /N@q2
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 2934 599 a 2934 599 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 2934 599 a 2934 599 a
 tx@Dict begin { 4.0 tx@Dict /NCLW known { NCLW add } if 4.90031 5.13608
0.0 NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 2934
599 a 2915 620 a Fm(\026)g Fi(a)2934 599 y
 tx@Dict begin PutEnd  end
 2934 599 a
2934 599 a
 tx@Dict begin PutEnd  end
 2934 599 a 2934 599 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0 3.0 0 0 /N@q2 /N@q7
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 2934 599 a 2934 599
a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 2934 599 a 2934 599 a
 tx@Dict begin { 4.0 tx@Dict /NCLW known { NCLW add } if 4.90031 3.87498
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 2934 599 a 2914 615 a Fi(a)2934
599 y
 tx@Dict begin PutEnd  end
 2934 599 a 2934 599 a
 tx@Dict begin PutEnd  end
 2934 599 a 2934 599 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0 3.0 0 0 /N@q7 /N@q6
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 2934
599 a 2934 599 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 2934 599 a 2934 599 a
 tx@Dict begin { 4.0 tx@Dict /NCLW known { NCLW add } if 4.90031 5.13608
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 2934 599 a 2915
620 a Fm(\026)g Fi(a)2934 599 y
 tx@Dict begin PutEnd  end
 2934 599 a 2934 599 a
 tx@Dict begin PutEnd  end

2934 599 a 2934 599 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0 3.0 0 0 /N@q7 /N@q7
InitNC { /AngleA 100. def /r 5.69054 def NCCircle x y r angleA angleB
{ ArrowB } { sub } ArcArrow arc end } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 2934 599 a 2934 599 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 2934 599
a 2934 599 a
 tx@Dict begin { 4.0 tx@Dict /NCLW known { NCLW add } if 4.90031 3.87498
0.0 NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 2934 599 a 2914 615 a Fi(a)2934 599 y
 tx@Dict begin PutEnd  end
 2934
599 a 2934 599 a
 tx@Dict begin PutEnd  end
 2934 599 a 2934 599 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0 3.0 0 0 /N@q8 /N@q8
InitNC { /AngleA 250. def /r 5.69054 def NCCircle x y r angleA angleB
{ ArrowB } { sub } ArcArrow arc end } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 2934 599 a 2934
599 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 2934 599 a 2934 599 a
 tx@Dict begin { 4.0 tx@Dict /NCLW known { NCLW add } if 4.90031 5.13608
0.0 NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 2934 599 a 2915 620 a Fm(\026)g
Fi(a)2934 599 y
 tx@Dict begin PutEnd  end
 2934 599 a 2934 599 a
 tx@Dict begin PutEnd  end
 2934 599 a 2934
599 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0 3.0 0 0 /N@q7 /N@q8
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 2934 599 a 2934 599 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 2934 599 a 2934 599 a
 tx@Dict begin { 4.0 tx@Dict /NCLW known { NCLW add } if 4.90031 5.13608
0.0 NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 2934
599 a 2915 620 a Fm(\026)g Fi(a)2934 599 y
 tx@Dict begin PutEnd  end
 2934 599 a
2934 599 a
 tx@Dict begin PutEnd  end
 2934 599 a 2934 599 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0 3.0 0 0 /N@q8 /N@q6
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 2934 599 a 2934 599
a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 2934 599 a 2934 599 a
 tx@Dict begin { 4.0 tx@Dict /NCLW known { NCLW add } if 4.90031 5.13608
0.0 NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 2934 599 a 2915 620 a Fm(\026)g
Fi(a)2934 599 y
 tx@Dict begin PutEnd  end
 2934 599 a 2934 599 a
 tx@Dict begin PutEnd  end
 2934 599 a 1709
850 a Fq(Figure)30 b(4:)39 b Fi(A)2155 859 y Ff(d)0 1097
y Fm(and)29 b(the)f(only)h(w)n(ell-balanced)h(strings)g(it)f(accepts)h
(are)f(those)0 1184 y(in)d Fh(L)p Fm(\()p Fi(d)p Fm(\).)0
1412 y(As)k(exp)r(ected,)i(w)n(e)f(can)g(easily)h(sho)n(w,)g(b)n(y)e
(construction,)j(the)0 1499 y(follo)n(wing)28 b(prop)r(ert)n(y)d(of)i
Fi(A)784 1508 y Ff(d)819 1499 y Fm(.)83 1726 y Fl(Lemma)41
b Fm(4.3.)d(:)53 b(F)-6 b(or)35 b(eac)n(h)g(DTD)g Fi(d)p
Fm(,)i(let)e Fi(A)1418 1735 y Ff(d)1489 1726 y Fm(b)r(e)f(the)h(au-)0
1813 y(tomaton)25 b(constructed)h(ab)r(o)n(v)n(e.)34
b(W)-6 b(e)25 b(ha)n(v)n(e:)0 1901 y(\(i\))h(ev)n(ery)f(w)n(ord)h(in)f
Fh(L)p Fm(\()p Fi(d)p Fm(\))g(is)h(accepted)g(b)n(y)f
Fi(A)1325 1910 y Ff(d)1361 1901 y Fm(.)0 1988 y(\(ii\))h
Fi(A)186 1997 y Ff(d)247 1988 y Fm(can)g(b)r(e)g(constructed)f(from)h
Fi(d)f Fm(in)h(exp)r(onen)n(tial)f(time.)0 2215 y(The)31
b(construction)h(of)g Fi(A)760 2224 y Ff(d)827 2215 y
Fm(in)f(the)g(general)i(case)f(tak)n(es)f(time)0 2302
y Fi(O)r Fm(\()p Fh(j)p Fi(d)p Fh(j)172 2271 y Fo(j\036j)263
2302 y Fm(\))25 b(where)g Fh(j)p Fi(d)p Fh(j)g Fm(is)h(the)f(maxim)n
(um)c(size)26 b(of)g(an)f Fl(fsa)g Fm(for)h(a)0 2390
y(regular)21 b(expression)g(of)g Fi(d)p Fm(,)g(and)f
Fh(j)i(\036)f(j)g Fm(is)g(the)e(depth)h(of)h(the)f(par-)0
2477 y(tial)29 b(order)f Fh(\036)p Fm(.)41 b(The)28 b(exp)r(onen)n
(tial)g(is)h(due)e(to)h(the)g(replication)0 2564 y(of)e
Fl(fsa)p Fm('s)h(carried)f(out)g(in)f(the)g(construction.)0
2754 y Fj(Remark)0 2845 y Fm(The)19 b(construction)g(of)h(the)e
Fl(fsa)h Fi(A)987 2854 y Ff(d)1042 2845 y Fm(can)g(b)r(e)f(straigh)n
(tforw)n(ardly)0 2932 y(extended)36 b(to)h(sp)r(ecialized)h(DTDs.)69
b(Note)36 b(also)j(that)d Fi(A)1726 2941 y Ff(d)1799
2932 y Fm(is)0 3019 y(non-deterministic)25 b(ev)n(en)g(if)i(the)e
Fl(fsa)p Fm('s)h Fi(A)1244 3028 y Ff(b)1301 3019 y Fm(asso)r(ciated)i
(to)e Fi(R)1819 3028 y Ff(b)0 3107 y Fm(are)d(deterministic.)33
b(The)22 b(non-determinism)e(stems)i(from)g(the)0 3194
y(fact)k(that)g(a)g(closing)h(tag)g(\026)-39 b Fi(a)26
b Fm(ma)n(y)e(lead)i(to)g(sev)n(eral)g(states.)0 3368
y(W)-6 b(e)18 b(can)g(no)n(w)g(pro)n(v)n(e)f(a)h(con)n(v)n(erse)g(of)h
(Lemma)d(4.2,)21 b(whic)n(h)d(yields)0 3455 y(a)23 b(precise)g(c)n
(haracterization)h(of)f(recognizable)h(fully)e(recursiv)n(e)0
3543 y(DTDs.)83 3770 y Fl(Theorem)41 b Fm(4.1.)e Fk(:)30
b(The)20 b(fol)t(lowing)f(ar)l(e)h(e)l(quivalent)h(for)f(e)l(ach)0
3857 y(ful)t(ly)27 b(r)l(e)l(cursive)i(DTD)e Fi(d)p Fk(:)63
4072 y(\(i\))38 b Fi(d)27 b Fk(is)g(r)l(e)l(c)l(o)l(gnizable,)40
4210 y(\(ii\))37 b Fi(d)27 b Fk(satis\014es)i(the)g(c)l(onditions)f(of)
f(L)l(emma)h(4.2,)f(and)16 4348 y(\(iii\))37 b(the)25
b(set)f(of)g(wel)t(l-b)l(alanc)l(e)l(d)h(strings)g(ac)l(c)l(epte)l(d)h
(by)f(the)f Fl(fsa)187 4435 y Fi(A)245 4444 y Ff(d)308
4435 y Fk(is)j(pr)l(e)l(cisely)i Fh(L)p Fm(\()p Fi(d)p
Fm(\))p Fk(.)0 4662 y Fm(As)e(a)h(consequence)g(of)h(Theorem)e(4.1,)j
(w)n(e)e(can)f(sho)n(w)i(that)e(it)0 4749 y(is)k(decidable)f(whether)g
(a)h(fully)f(recursiv)n(e)g(DTD)g Fi(d)g Fm(is)h(recog-)0
4837 y(nizable,)d(and)f(therefore)h(whether)f(the)g(standard)g(asso)r
(ciated)0 4924 y Fl(fsa)f Fi(A)204 4933 y Ff(d)265 4924
y Fm(can)g(b)r(e)f(used)h(to)g(v)l(alidate)g(it.)83 5151
y Fl(Theorem)41 b Fm(4.2.)e Fk(:)50 b(Given)37 b(a)e(sp)l(e)l(cialize)l
(d)i(ful)t(ly)d(r)l(e)l(cursive)0 5238 y(DTD)24 b Fi(d)f
Fk(over)i(\014xe)l(d)g(alphab)l(et)h Fm(\006)p Fk(,)e(it)g(is)g(de)l
(cidable)g(in)g Fl(exptime)0 5325 y Fk(whether)29 b Fi(d)e
Fk(is)h(r)l(e)l(c)l(o)l(gnizable.)2050 1097 y Fj(Remark:)2050
1189 y Fm(The)36 b(exp)r(onen)n(tial)g(complexit)n(y)f(ab)r(o)n(v)n(e)h
(is)h(due)e(to)h(the)g(con-)2050 1276 y(struction)18
b(of)g(deterministic)g Fl(fsa)g Fm(for)h(the)e(regular)i(expressions)
2050 1363 y(used)j(b)n(y)f(the)h(DTD.)h(If)g(the)f(DTD)g(only)g(uses)h
(1-unam)n(biguous)2050 1450 y(regular)33 b(expressions,)i(suc)n(h)d(as)
i(required)e(b)n(y)f(XML)h(sc)n(hema)2050 1537 y([4],)27
b(the)e(complexit)n(y)f(go)r(es)j(do)n(wn)f(to)g Fl(ptime)p
Fm(.)2050 1755 y(Let)g(us)g(no)n(w)g(consider)h(DTDs)f(that)g(are)g
(not)g(fully)g(recursiv)n(e.)2050 1842 y(Consider)34
b(again)h(the)e(DTD)h(of)g(Example)f(4.7.)59 b(In)n(tuitiv)n(ely)-6
b(,)2050 1929 y(the)28 b(DTD)h(cannot)f(b)r(e)h(recognized)h(b)r
(ecause)f(an)g Fl(fsa)g Fm(cannot)2050 2016 y(k)n(eep)21
b(trac)n(k)g(of)h(the)f(depth)g(in)h(the)f(tree)g(and)h(th)n(us)f(migh)
n(t)f(allo)n(w)2050 2104 y(the)36 b(transition)h(from)g(\026)-39
b Fi(a)36 b Fm(to)g Fi(a)g Fm(at)g(depth)g(di\013eren)n(t)f(than)h(1.)
2050 2191 y(The)28 b(next)g(lemma)g(formalizes)i(this)e(in)n(tuition)h
(and)f(pro)n(vides)2050 2278 y(a)e(second)g(necessary)g(condition)g
(for)g(recognizabilit)n(y)-6 b(.)2133 2512 y Fl(Lemma)40
b Fm(4.4.)f(:)50 b(Let)33 b Fi(d)g Fm(b)r(e)h(a)f(recognizable)j(DTD.)d
(Then)2050 2600 y(the)23 b(follo)n(wing)i(holds,)g(where)e
Fi(\013;)14 b(\014)t(;)f(u;)g(v)s(;)h(w)25 b Fm(are)f(w)n(ords)f(o)n(v)
n(er)h(\006)2050 2687 y(while)30 b Fi(x;)13 b(y)s(;)f(z)33
b Fm(\(p)r(ossibly)c(subscripted\))g(are)h(individual)g(sym-)2050
2774 y(b)r(ols:)2050 2948 y(Let)17 b Fi(x)2223 2956 y
Fg(1)2257 2948 y Fi(;)c(x)2335 2956 y Fg(2)2369 2948
y Fi(;)g(y)s(;)g(z)20 b Fm(b)r(e)e(sym)n(b)r(ols)f(suc)n(h)g(that)g
Fi(x)3283 2956 y Fg(1)3317 2948 y Fm(,)i Fi(x)3401 2956
y Fg(2)3453 2948 y Fm(and)e Fi(z)j Fm(are)e(m)n(u-)2050
3035 y(tually)f(recursiv)n(e)h(in)g Fi(d)p Fm(.)31 b(If)18
b Fi(ux)2905 3043 y Fg(1)2939 3035 y Fi(v)s(x)3023 3043
y Fg(2)3058 3035 y Fi(w)23 b Fh(2)e Fi(R)3266 3043 y
Ff(y)3322 3035 y Fm(and)c Fi(u)3507 3004 y Fo(0)3529
3035 y Fi(x)3573 3043 y Fg(1)3608 3035 y Fi(v)3648 3004
y Fo(0)3670 3035 y Fi(x)3714 3043 y Fg(2)3748 3035 y
Fi(w)3805 3004 y Fo(0)3849 3035 y Fh(2)2050 3123 y Fi(R)2108
3131 y Ff(z)2172 3123 y Fm(then)27 b Fi(ux)2437 3131
y Fg(1)2472 3123 y Fi(v)2512 3091 y Fo(0)2534 3123 y
Fi(x)2578 3131 y Fg(2)2612 3123 y Fi(w)j Fm(m)n(ust)d(b)r(e)h(in)g
Fi(R)3147 3131 y Ff(y)3213 3123 y Fm(and)g Fi(u)3409
3091 y Fo(0)3432 3123 y Fi(x)3476 3131 y Fg(1)3510 3123
y Fi(v)s(x)3594 3131 y Fg(2)3628 3123 y Fi(w)3685 3091
y Fo(0)3735 3123 y Fm(m)n(ust)2050 3210 y(b)r(e)d(in)h
Fi(R)2302 3218 y Ff(z)2338 3210 y Fm(.)2050 3403 y Fj(Remark:)2050
3494 y Fm(The)j(condition)h(of)g(Lemma)e(4.4)i(can)g(b)r(e)f(form)n
(ulated)g(as)h(fol-)2050 3581 y(lo)n(ws)e(in)f(the)f(sp)r(ecial)j(case)
f(when)f Fi(x)3106 3589 y Fg(1)3163 3581 y Fm(=)d Fi(x)3291
3589 y Fg(2)3325 3581 y Fm(:)37 b(\(i\))27 b(Supp)r(ose)f(the)2050
3668 y(o)r(ccurrences)31 b(of)h Fi(x)2604 3676 y Fg(1)2669
3668 y Fm(and)f Fi(x)2868 3676 y Fg(2)2933 3668 y Fm(b)r(elo)n(w)g
Fi(z)j Fm(are)e(iden)n(tical.)51 b(Let)30 b Fi(x)2050
3755 y Fm(and)f Fi(z)k Fm(b)r(e)c(m)n(utually)g(recursiv)n(e)g(in)h
Fi(d)p Fm(.)47 b(If)29 b Fi(uxv)s(xw)h Fh(2)e Fi(R)3709
3763 y Ff(y)3776 3755 y Fm(and)2050 3843 y Fi(u)2094
3811 y Fo(0)2116 3843 y Fi(xw)2217 3811 y Fo(0)2265 3843
y Fh(2)e Fi(R)2400 3851 y Ff(z)2464 3843 y Fm(then)i
Fi(u)2686 3811 y Fo(0)2709 3843 y Fi(xw)2810 3811 y Fo(0)2857
3843 y Fh(2)e Fi(R)2992 3851 y Ff(z)3057 3843 y Fm(and)i
Fi(uxw)f Fh(2)f Fi(R)3514 3851 y Ff(y)3552 3843 y Fm(.)43
b(\(ii\))28 b(Sup-)2050 3930 y(p)r(ose)23 b(the)f(o)r(ccurrences)i(of)g
Fi(x)2888 3938 y Fg(1)2944 3930 y Fm(and)f Fi(x)3135
3938 y Fg(2)3192 3930 y Fm(b)r(elo)n(w)g Fi(y)j Fm(are)d(iden)n(tical.)
2050 4017 y(If)33 b Fi(uxw)j Fh(2)f Fi(R)2457 4025 y
Ff(y)2495 4017 y Fm(,)g Fi(u)2595 3985 y Fo(0)2618 4017
y Fi(xv)2702 3985 y Fo(0)2724 4017 y Fi(xw)2825 3985
y Fo(0)2881 4017 y Fh(2)g Fi(R)3025 4025 y Ff(z)3094
4017 y Fm(then)e Fi(uxv)3405 3985 y Fo(0)3427 4017 y
Fi(xw)j Fh(2)e Fi(R)3705 4025 y Ff(y)3776 4017 y Fm(and)2050
4104 y Fi(u)2094 4072 y Fo(0)2116 4104 y Fi(xw)2217 4072
y Fo(0)2260 4104 y Fh(2)22 b Fi(R)2391 4112 y Ff(z)2427
4104 y Fm(.)2133 4339 y Fl(Example)41 b Fm(4.9.)e(:)k(Consider)32
b(the)e(DTD)g(of)h(Example)f(4.7)2087 4422 y Fi(r)23
b Fh(!)e Fi(aa)2087 4515 y(a)g Fh(!)g Fi(a)2288 4483
y Fg(?)2428 4470 y Fm(.)54 b(This)32 b(DTD)g(is)h(not)f(recognizable)i
(b)r(ecause)f(it)2050 4601 y(do)r(es)g(not)g(satisfy)g(the)g(condition)
g(of)h(Lemma)d(4.4.)57 b(Indeed,)2050 4688 y Fi(a)35
b Fm(is)h(recursiv)n(e,)i Fi(R)2625 4696 y Ff(r)2696
4688 y Fm(con)n(tains)e Fi(aa)p Fm(,)h Fi(R)3205 4697
y Ff(b)3272 4688 y Fm(con)n(tains)g Fi(a)e Fm(but)f Fi(R)3868
4697 y Ff(b)2050 4776 y Fm(do)r(es)27 b(not)g(con)n(tain)g
Fi(aa)p Fm(.)38 b(This)27 b(violates)i(the)d(condition)i(of)f(the)2050
4863 y(lemma.)2133 5168 y Fl(Example)41 b Fm(4.10.)e(:)30
b(Consider)18 b(the)f(DTD)3408 5079 y Fi(r)23 b Fh(!)e
Fi(ab)3408 5166 y(a)g Fh(!)g Fi(b)3601 5135 y Fo(\003)3408
5254 y Fi(b)g Fh(!)h Fi(a)3602 5222 y Fo(\003)3725 5168
y Fm(.)32 b(This)2050 5340 y(DTD)23 b(is)i(not)f(recognizable)i(b)r
(ecause)e(it)h(do)r(es)f(not)g(satisfy)h(the)p eop
%%Page: 10 10
10 9 bop 0 83 a Fm(condition)28 b(of)h(Lemma)e(4.4.)42
b(Indeed,)28 b Fi(a)g Fm(and)f Fi(b)h Fm(are)h(m)n(utually)0
170 y(recursiv)n(e,)i Fi(R)405 178 y Ff(r)470 170 y Fm(con)n(tains)f
Fi(ab)p Fm(,)g Fi(R)958 179 y Ff(b)1019 170 y Fm(con)n(tains)h
Fi(aa)e Fm(but)f Fi(R)1638 178 y Ff(r)1703 170 y Fm(do)r(es)0
257 y(not)e(con)n(tain)f Fi(aab)p Fm(.)0 432 y(Note)38
b(that,)k(if)d(w)n(e)f(replace)i(the)d(\014rst)i(rule)f(b)n(y)f
Fi(r)44 b Fh(!)e Fi(a)1724 400 y Fo(\003)1760 432 y Fi(b)1793
400 y Fo(\003)1829 432 y Fm(,)0 519 y(conditions)29 b(of)g(Lemmas)f
(4.2)h(and)f(Lemma)f(4.4)j(are)f(satis\014ed)0 606 y(and)c(the)h
(resulting)g(DTD)f(is)i(recognized)f(b)n(y)f Fi(A)1414
615 y Ff(d)1450 606 y Fm(.)0 834 y(W)-6 b(e)34 b(conjecture)h(that)f
(the)g(necessary)h(conditions)g(pro)n(vided)0 921 y(b)n(y)21
b(Lemmas)f(4.2)j(and)f(4.4)h(are)f(a)g(in)g(fact)g(a)h(precise)f(c)n
(haracter-)0 1008 y(ization)27 b(for)h(DTD)e(recognizabilit)n(y)-6
b(.)37 b(Ho)n(w)n(ev)n(er,)27 b(this)f(remains)0 1096
y(op)r(en.)0 1270 y(Short)17 b(of)h(a)f(complete)g(c)n(haracterization)
i(of)f(recognizable)h(DTDs,)0 1357 y(w)n(e)24 b(pro)n(vide)f(of)i(c)n
(haracterization)g(of)f(when)g(a)g(DTD)f Fi(d)g Fm(is)h(v)l(ali-)0
1444 y(dated)c(b)n(y)f(the)h(standard)g Fl(fsa)g Fi(A)949
1453 y Ff(d)985 1444 y Fm(.)32 b(The)21 b(conditions)f(are)h(those)0
1531 y(of)g(Lemmas)e(4.2)i(and)f(4.4,)j(together)e(with)f(an)g
(additional)i(con-)0 1619 y(dition)k(stated)g(next:)0
1846 y Fq(\(*\))38 b Fm(Let)27 b Fi(\013;)13 b(\014)t(;)g(u;)h(v)s(;)f
(w)28 b Fm(b)r(e)e(w)n(ords)h(o)n(v)n(er)g(\006)f(and)g
Fi(x;)13 b(y)s(;)g(z)29 b Fm(\(p)r(ossi-)187 1934 y(bly)22
b(subscripted\))g(b)r(e)g(individual)h(sym)n(b)r(ols.)33
b(Let)22 b Fi(k)j Fm(and)187 2021 y Fi(k)229 1989 y Fo(0)282
2021 y Fm(b)r(e)30 b(p)r(ositiv)n(e)h(in)n(tegers.)50
b(Let)30 b(\()p Fi(x)1225 2029 y Ff(i)1251 2021 y Fm(\))1281
2030 y Fg(1)p Fo(\024)p Ff(i)p Fo(\024)p Ff(k)1468 2021
y Fm(,)i(\()p Fi(z)1587 2029 y Ff(i)1612 2021 y Fm(\))1642
2030 y Fg(2)p Fo(\024)p Ff(i)p Fo(\024)p Ff(k)1829 2021
y Fm(,)187 2108 y(\()p Fi(x)261 2076 y Fo(0)261 2122
y Ff(i)287 2108 y Fm(\))317 2120 y Fg(1)p Fo(\024)p Ff(i)p
Fo(\024)p Ff(k)499 2106 y Fa(0)526 2108 y Fm(,)22 b(\()p
Fi(z)638 2076 y Fo(0)635 2122 y Ff(i)661 2108 y Fm(\))691
2120 y Fg(2)p Fo(\024)p Ff(i)p Fo(\024)p Ff(k)873 2106
y Fa(0)900 2108 y Fm(,)h(and)f Fi(y)i Fm(b)r(e)e(sym)n(b)r(ols)f(of)i
(\006)f(suc)n(h)187 2195 y(that)33 b Fi(x)405 2203 y
Fg(1)473 2195 y Fm(=)h Fi(x)611 2163 y Fo(0)611 2208
y Fg(1)645 2195 y Fm(,)i Fi(x)746 2204 y Ff(k)818 2195
y Fm(=)e Fi(x)956 2163 y Fo(0)956 2213 y Ff(k)990 2199
y Fa(0)1016 2195 y Fm(,)i(and)d(all)h(the)f Fi(x)1528
2203 y Ff(i)1554 2195 y Fi(;)13 b(x)1632 2163 y Fo(0)1632
2209 y Ff(i)1658 2195 y Fi(;)g(z)1728 2203 y Ff(i)1754
2195 y Fi(;)g(z)1827 2163 y Fo(0)1824 2209 y Ff(i)187
2282 y Fm(are)35 b(m)n(utually)f(recursiv)n(e)h(in)g
Fi(d)g Fm(\(not)g(necessarily)h(dis-)187 2370 y(tinct\).)44
b(If)29 b Fi(ux)608 2378 y Fg(1)642 2370 y Fi(v)679 2378
y Fg(1)714 2370 y Fi(x)758 2378 y Fg(2)805 2370 y Fh(\001)13
b(\001)h(\001)f Fi(v)945 2379 y Ff(k)q Fo(\000)p Fg(1)1061
2370 y Fi(x)1105 2379 y Ff(k)1143 2370 y Fi(w)29 b Fh(2)e
Fi(R)1363 2378 y Ff(y)1430 2370 y Fm(and)h(for)i(eac)n(h)187
2457 y(2)d Fh(\024)g Fi(i)g Fh(\024)g Fi(k)k Fm(w)n(e)e(ha)n(v)n(e)f
Fh(f)p Fi(\013)933 2465 y Ff(i)960 2457 y Fi(x)1004 2465
y Ff(i)p Fo(\000)p Fg(1)1109 2457 y Fi(\014)1152 2465
y Ff(i)1178 2457 y Fi(;)13 b(\013)1261 2425 y Fo(0)1261
2471 y Ff(i)1288 2457 y Fi(x)1332 2465 y Ff(i)1358 2457
y Fi(\014)1405 2425 y Fo(0)1401 2471 y Ff(i)1428 2457
y Fh(g)27 b(\032)f Fi(R)1637 2465 y Ff(z)1667 2476 y
Fb(i)1727 2457 y Fm(and)187 2544 y(for)33 b(eac)n(h)f(2)h
Fh(\024)f Fi(i)h Fh(\024)f Fi(k)j Fm(w)n(e)e(ha)n(v)n(e)e
Fi(u)1226 2512 y Fo(0)1226 2558 y Ff(i)1253 2544 y Fi(x)1297
2552 y Ff(i)p Fo(\000)p Fg(1)1401 2544 y Fi(v)1441 2512
y Fo(0)1438 2558 y Ff(i)1465 2544 y Fi(x)1509 2552 y
Ff(i)1535 2544 y Fi(w)1592 2512 y Fo(0)1590 2558 y Ff(i)1648
2544 y Fh(2)i Fi(R)1790 2558 y Ff(z)1822 2541 y Fa(0)1820
2579 y Fb(i)187 2646 y Fm(then)h Fi(ux)459 2614 y Fo(0)459
2659 y Fg(1)493 2646 y Fi(v)533 2614 y Fo(0)530 2659
y Fg(1)578 2646 y Fh(\001)13 b(\001)g(\001)g Fi(x)724
2614 y Fo(0)724 2662 y Ff(k)762 2646 y Fi(w)36 b Fm(m)n(ust)e(b)r(e)g
(in)h Fi(R)1323 2654 y Ff(y)1395 2646 y Fm(and,)i(for)e(eac)n(h)187
2733 y(2)22 b Fh(\024)f Fi(i)g Fh(\024)g Fi(k)r Fm(,)26
b Fi(\013)594 2741 y Ff(i)621 2733 y Fi(x)665 2741 y
Ff(i)p Fo(\000)p Fg(1)769 2733 y Fi(v)806 2741 y Ff(i)p
Fo(\000)p Fg(1)911 2733 y Fi(x)955 2741 y Ff(i)981 2733
y Fi(\014)1028 2702 y Fo(0)1076 2733 y Fm(m)n(ust)f(b)r(e)g(in)h
Fi(R)1519 2741 y Ff(z)1549 2752 y Fb(i)1579 2733 y Fm(.)0
2961 y(The)35 b(next)f(result)g(pro)n(vides)h(a)g(precise)g(c)n
(haracterization)i(of)0 3049 y(the)23 b(DTDs)h Fi(d)f
Fm(that)g(are)h(v)l(alidated)g(b)n(y)e(the)h(standard)h
Fl(fsa)f Fi(A)1793 3058 y Ff(d)1829 3049 y Fm(.)83 3276
y Fl(Theorem)41 b Fm(4.3.)e Fk(:)d(L)l(et)29 b Fi(d)f
Fk(b)l(e)h(a)f(DTD.)g(The)g(fol)t(lowing)f(ar)l(e)0 3364
y(e)l(quivalent:)63 3579 y(\(i\))38 b Fi(d)32 b Fk(satis\014es)i(\(*\))
g(and)f(the)g(c)l(onditions)h(of)e(L)l(emmas)h(4.2)187
3667 y(and)28 b(4.4,)f(and)40 3804 y(\(ii\))37 b(the)25
b(set)f(of)g(wel)t(l-b)l(alanc)l(e)l(d)h(strings)g(ac)l(c)l(epte)l(d)h
(by)f(the)f Fl(fsa)187 3892 y Fi(A)245 3901 y Ff(d)308
3892 y Fk(is)j(pr)l(e)l(cisely)i Fh(L)p Fm(\()p Fi(d)p
Fm(\))p Fk(.)0 4120 y Fm(W)-6 b(e)22 b(note)h(that)g(the)g(conditions)g
(of)h(Theorem)e(4.3)i(can)f(b)r(e)g(v)n(er-)0 4207 y(i\014ed)g(in)f
(time)h(doubly)f(exp)r(onen)n(tial)h(with)g(resp)r(ect)g(to)g
Fi(d)p Fm(.)34 b(This)0 4294 y(is)26 b(done)g(b)n(y)e(c)n(hec)n(king)i
(directly)f(that)h Fi(A)1181 4303 y Ff(d)1242 4294 y
Fm(v)l(alidates)h Fi(d)p Fm(,)e(as)i(fol-)0 4381 y(lo)n(ws.)68
b(W)-6 b(e)36 b(\014rst)g(build)g(a)h(sp)r(ecialized)h(DTD)e
Fi(d)1467 4349 y Fo(0)1526 4381 y Fm(suc)n(h)g(that)0
4468 y Fi(S)t(AT)11 b Fm(\()p Fi(d)235 4437 y Fo(0)256
4468 y Fm(\))24 b(consists)i(of)f(the)f(trees)h(accepted)g(b)n(y)e
Fi(A)1470 4477 y Ff(d)1506 4468 y Fm(.)34 b(This)25 b(can)0
4555 y(b)r(e)32 b(done)g(in)g Fl(exptime)f Fm(b)n(y)g(Lemma)f(4.1.)56
b(Next,)33 b(the)f(equiv-)0 4643 y(alence)f(of)h Fi(d)e
Fm(and)h Fi(d)593 4611 y Fo(0)645 4643 y Fm(can)g(b)r(e)g(c)n(hec)n(k)n
(ed)e(in)i Fl(exptime)e Fm(using)i(a)0 4730 y(tree)26
b(automata)f(equiv)l(alence)h(test.)0 4904 y(T)-6 b(o)30
b(understand)f(wh)n(y)g(the)h(conditions)g(in)g(Theorem)g(4.3)h(are)0
4991 y(not)d(a)h(complete)f(c)n(haracterization)i(of)g(recognizable)g
(DTDs,)0 5078 y(consider)h(the)g(follo)n(wing)i(example,)f(that)f(pro)n
(vides)f(a)i(recog-)0 5166 y(nizable)37 b(DTD)f Fi(d)f
Fm(violating)j(\(*\).)66 b(F)-6 b(or)36 b(this)g(DTD,)g(w)n(e)h(will)0
5253 y(exhibit)22 b(an)h Fl(fsa)g Fm(di\013eren)n(t)f(from)g(the)g
(standard)h Fi(A)1485 5262 y Ff(d)1521 5253 y Fm(,)g(that)g(v)l(al-)0
5340 y(idates)j(it.)2133 237 y Fl(Example)41 b Fm(4.11.)e(:)30
b(Consider)18 b(the)f(DTD)g Fi(d)p Fm(:)3469 61 y Fi(r)23
b Fh(!)f Fi(a\013b\014)t(c)3469 148 y(a)f Fh(!)g Fi(ad)p
Fh(j)p Fi(\017)3469 235 y(d)g Fh(!)h Fi(dc)p Fh(j)p Fi(\017)3469
323 y(b)g Fh(!)f Fi(a)p Fh(j)p Fi(b)p Fh(j)p Fi(\017)3469
410 y(c)h Fh(!)f Fi(b)p Fh(j)p Fi(c)p Fh(j)p Fi(\017)3904
237 y Fm(.)2050 583 y(First)32 b(notice)g(that)g Fi(A)2706
592 y Ff(d)2774 583 y Fm(do)r(es)g(not)g(recognize)h(this)f(DTD)f(b)r
(e-)2050 670 y(cause)17 b Fi(d)g Fm(violates)i(\(*\).)31
b(Indeed)16 b(the)h(DTD)g(satis\014es)h(the)f(premise)2050
758 y(of)24 b(\(*\))f(but)g(not)g(its)h(conclusion.)34
b(F)-6 b(or)24 b(example,)f Fi(adc)g Fm(is)h(not)f(in)2050
845 y Fi(R)2108 853 y Ff(r)2172 845 y Fm(as)30 b(required.)46
b(Ho)n(w)n(ev)n(er,)30 b(consider)g(the)g Fl(fsa)f Fm(that)g(w)n(orks)
2050 932 y(lik)n(e)i Fi(A)2254 941 y Ff(d)2290 932 y
Fm(,)h(but)e(additionally)i(coun)n(ts)f(the)g(n)n(um)n(b)r(er)e(of)j
(transi-)2050 1019 y(tions)g(\026)-39 b Fi(a)o(d)30 b
Fm(and)2521 999 y(\026)2507 1019 y Fi(d)q Fm(\026)-39
b Fi(a)30 b Fm(mo)r(dulo)g(2)h(and)f(accepts)h(only)f(if)h(the)g(t)n(w)
n(o)2050 1106 y(are)26 b(equal.)34 b(It)26 b(can)f(b)r(e)h(v)n
(eri\014ed)f(that)g(this)h Fl(fsa)g Fm(v)l(alidates)g
Fi(d)p Fm(.)2050 1358 y(In)g(summary)-6 b(,)25 b(the)i(conditions)h(of)
g(Lemmas)d(4.2)k(and)d(4.4)i(are)2050 1445 y(necessary)i(in)f(order)h
(for)h(a)f(DTD)f(to)h(b)r(e)g(recognizable.)48 b(The)2050
1532 y(conditions)38 b(of)h(Theorem)e(4.3)i(are)f(su\016cien)n(t,)j
(and)d(in)f(par-)2050 1619 y(ticular)e(pro)n(vide)f(a)g(precise)i(c)n
(haracterization)g(of)f(when)f(the)2050 1706 y(standard)29
b Fl(fsa)h Fm(w)n(orks.)46 b(The)30 b(complete)f(c)n(haracterization)i
(of)2050 1793 y(recognizable)c(DTDs)f(remains)f(op)r(en.)2050
1994 y Fn(5.)99 b(AL)-9 b(TERN)n(A)g(TIVE)26 b(APPR)m(O)l(A)-5
b(CHES)24 b(T)n(O)2224 2110 y(V)-13 b(ALID)m(A)k(TION)2050
2201 y Fm(W)j(e)18 b(next)f(consider)j(t)n(w)n(o)f(alternativ)n(e)g
(approac)n(hes)g(for)g(v)l(alidat-)2050 2288 y(ing)h(DTDs)g(that)f(are)
h(not)g(recognizable.)34 b(The)21 b(\014rst)e(is)i(to)f(relax)2050
2376 y(the)j(constan)n(t)i(memory)d(requiremen)n(t.)32
b(The)24 b(second)h(consists)2050 2463 y(in)i(re\014ning)h(the)f
(original)i(DTD)e(b)n(y)g(adding)h(information)g(al-)2050
2550 y(lo)n(wing)f(it)e(to)h(b)r(e)g(v)l(alidated)g(b)n(y)e(an)i
Fl(fsa)p Fm(.)2050 2750 y Fj(V)-10 b(alidation)22 b(with)h(bounded)e
(stac)n(k)2050 2841 y Fm(W)-6 b(e)16 b(b)r(egin)i(with)f(relaxing)h
(the)f(memory)e(requiremen)n(t.)30 b(Sp)r(ecif-)2050
2928 y(ically)-6 b(,)20 b(w)n(e)e(allo)n(w)i(as)e(auxiliary)g(memory)e
(a)i(stac)n(k)g(whose)h(depth)2050 3016 y(is)33 b(b)r(ounded)f(in)i
(the)e(depth)g(of)i(the)f(XML)g(do)r(cumen)n(t.)56 b(The)2050
3103 y(requiremen)n(t)27 b(that)i(v)l(alidation)g(b)r(e)g(done)g(in)g
(a)g(single,)j(deter-)2050 3190 y(ministic)22 b(pass)h(is)h(main)n
(tained.)32 b(This)24 b(approac)n(h)f(is)g(app)r(ealing)2050
3277 y(in)28 b(practice,)i(b)r(ecause)f(man)n(y)e(XML)h(do)r(cumen)n
(ts)f(tend)h(to)g(b)r(e)2050 3364 y(shallo)n(w)c(ev)n(en)e(if)i(their)f
(DTDs)g(are)g(recursiv)n(e.)34 b(W)-6 b(e)22 b(start)i(with)2050
3451 y(a)i(simple)f(example.)2133 3703 y Fl(Example)41
b Fm(5.1.)e(:)k(Consider)32 b(the)e(DTD)g(of)h(Example)f(4.7)2087
3787 y Fi(r)23 b Fh(!)e Fi(aa)2087 3879 y(a)g Fh(!)g
Fi(a)2288 3847 y Fg(?)2459 3834 y Fm(whic)n(h)31 b(is)h(not)f
(recognizable.)52 b(Ho)n(w)n(ev)n(er,)33 b(a)f(de-)2050
3966 y(terministic)25 b Fl(pd)n(a)g Fm(can)g(v)l(alidate)h(the)f(DTD)g
(b)n(y)g(allo)n(wing)i(only)2050 4053 y(transitions)18
b Fi(aa)e Fm(and)i(\026)-39 b Fi(a)q Fm(\026)g Fi(a)16
b Fm(and)h(remem)n(b)r(ering)f(the)h(curren)n(t)f(depth)2050
4140 y(using)34 b(the)g(stac)n(k.)61 b(In)34 b(addition,)k(the)c
Fl(pd)n(a)g Fm(allo)n(ws)i(a)f(single)2050 4227 y(transition)23
b(\026)-39 b Fi(a)o(a)21 b Fm(and)g(only)g(at)h(depth)e(one.)33
b(Note)21 b(that)g(this)g Fl(pd)n(a)2050 4314 y Fm(is)h(deterministic)g
(and)f(its)i(stac)n(k)f(nev)n(er)f(exceeds)h(the)f(depth)g(of)2050
4401 y(the)k(tree)h(represen)n(ted)f(b)n(y)g(the)g(w)n(ell-balanced)i
(input)e(string.)2050 4653 y(Rather)f(surprisingly)-6
b(,)25 b(w)n(e)g(can)g(sho)n(w)g(that)f Fk(every)i Fm(sp)r(ecialized)
2050 4740 y(DTD)e(can)h(b)r(e)g(strongly)g(v)l(alidated)g(b)n(y)f(a)h
(deterministic)f Fl(pd)n(a)p Fm(.)2050 4827 y(When)e(the)g(input)g
(string)h(is)g(w)n(ell-balanced,)i(the)d(stac)n(k)h(of)g(the)2050
4914 y Fl(pd)n(a)i Fm(is)h(b)r(ounded)e(in)i(the)f(depth)f(of)j(the)e
(tree)h(represen)n(ted)f(b)n(y)2050 5001 y(the)g(input)g(string.)2133
5253 y Fl(Theorem)40 b Fm(5.1.)f Fk(:)k(L)l(et)32 b Fi(d)f
Fk(b)l(e)h(a)f(sp)l(e)l(cialize)l(d)h(DTD.)f(Ther)l(e)2050
5340 y(exists)39 b(a)f(deterministic)g Fl(pd)n(a)g Fk(that)h(ac)l(c)l
(epts)h(pr)l(e)l(cisely)f Fh(L)p Fm(\()p Fi(d)p Fm(\))p
eop
%%Page: 11 11
11 10 bop 0 83 a Fk(using)25 b(a)f(stack)i(of)e(depth)i(b)l(ounde)l(d)g
(by)e(the)i(maximum)d(numb)l(er)0 170 y(of)33 b(unmatche)l(d)i(op)l(en)
g(tags)f(o)l(c)l(curring)i(as)e(the)g(input)g(is)f(r)l(e)l(ad)0
257 y(fr)l(om)h(left)g(to)h(right.)55 b(In)34 b(p)l(articular,)j(if)c
(the)i(input)f(string)h(is)0 345 y(wel)t(l-b)l(alanc)l(e)l(d,)g(the)f
(depth)g(of)e(the)i(stack)g(is)f(b)l(ounde)l(d)h(by)f(the)0
432 y(depth)c(of)e(the)h(tr)l(e)l(e)h(r)l(epr)l(esente)l(d)i(by)d(the)h
(input)f(string.)0 699 y Fq(Pro)r(of:)35 b Fm(Let)24
b Fi(d)45 b Fm(=)g(\(\006)p Fi(;)14 b Fm(\006)774 667
y Fo(0)797 699 y Fi(;)f(d)871 667 y Fo(0)893 699 y Fi(;)g(\026)p
Fm(\).)34 b(Recall)25 b(that)f Fi(d)1493 667 y Fo(0)1539
699 y Fm(is)h(a)g(DTD)0 786 y(o)n(v)n(er)g(\006)219 754
y Fo(0)268 786 y Fm(and)g Fi(\026)g Fm(is)h(the)f(asso)r(ciated)j(sp)r
(ecialization)g(mapping.)0 873 y(W)-6 b(e)26 b(wish)i(to)e(c)n(hec)n(k)
g(whether)h(a)g(string)g Fi(w)h Fm(o)n(v)n(er)f(\006)44
b Fh([)1644 854 y Fm(\026)1636 873 y(\006)27 b(rep-)0
961 y(resen)n(ts)k(a)g(tree)f(satisfying)i Fi(d)p Fm(.)49
b(The)31 b(stac)n(k)f(is)h(used)f(to)h(c)n(hec)n(k)0
1048 y(that)g(the)g(string)h(represen)n(ts)g(a)f(tree)h(and)f(to)h(k)n
(eep)e(informa-)0 1135 y(tion)d(ab)r(out)g(the)f(path)g(from)h(the)f
(ro)r(ot)h(to)g(the)g(curren)n(tly)f(vis-)0 1222 y(ited)34
b(no)r(de)f(in)h(the)g(tree.)59 b(F)-6 b(or)33 b(eac)n(h)h(no)r(de)g
(along)h(the)e(path,)0 1309 y(the)21 b(stac)n(k)h(k)n(eeps)f(a)h(set)g
(of)h(candidate)f(sp)r(ecializations)i(for)f(the)0 1396
y(no)r(de)e(lab)r(el,)j(compatible)d(with)h(the)f(information)h(seen)g
(so)g(far.)0 1484 y(In)n(tuitiv)n(ely)-6 b(,)26 b(a)h(candidate)g(sp)r
(ecialization)i Fi(a)e Fm(is)g(acceptable)h(if)0 1571
y(there)19 b(are)h(acceptable)g(sp)r(ecializations)i(of)e(its)g(c)n
(hildren)f(whose)0 1658 y(sequence)k(forms)h(a)f(w)n(ord)h(in)f(the)g
(regular)i(language)f Fi(R)1626 1666 y Ff(a)1687 1658
y Fm(asso-)0 1745 y(ciated)i(to)g Fi(a)f Fm(b)n(y)f Fi(d)532
1713 y Fo(0)554 1745 y Fm(.)35 b(The)25 b Fl(pd)n(a)g
Fm(m)n(ust)f(v)n(erify)i(this)f(recursiv)n(ely)-6 b(,)0
1832 y(and)37 b(accept)g(the)f(input)g(if)i(the)e(ro)r(ot)i(is)f(left)h
(with)f(at)g(least)0 1919 y(one)27 b(acceptable)h(sp)r(ecialization.)41
b(T)-6 b(o)27 b(ac)n(hiev)n(e)g(this,)h(the)f Fl(pd)n(a)0
2007 y Fm(sim)n(ulates)d(the)g(run)f(of)i(the)e Fl(fsa)h
Fm(for)h Fi(R)1138 2015 y Ff(a)1200 2007 y Fm(on)f(the)f(c)n(hildren)h
(of)h(a)0 2094 y(giv)n(en)20 b(no)r(de)f(with)h(candidate)g(sp)r
(ecialization)j Fi(a)p Fm(.)32 b(This)20 b(is)g(done)0
2181 y(b)n(y)k(k)n(eeping)g(on)h(the)f(stac)n(k,)h(together)h(with)f
(eac)n(h)g(suc)n(h)f Fi(a)p Fm(,)h(the)0 2268 y(set)37
b(of)g(states)h(reac)n(hed)e(in)h(the)f Fl(fsa)g Fm(for)i
Fi(R)1336 2276 y Ff(a)1410 2268 y Fm(after)g(reading)0
2355 y(the)28 b(sequence)h(of)g(c)n(hildren)g(seen)g(so)g(far,)i(with)e
(their)f(resp)r(ec-)0 2442 y(tiv)n(e)h(allo)n(w)n(ed)h(sp)r
(ecializations.)47 b(This)29 b(can)g(b)r(e)g(done)g(b)r(ecause)0
2530 y(the)21 b(stac)n(k)g(sym)n(b)r(ol)f(con)n(taining)i(this)f
(information)g(for)h(a)f(giv)n(en)0 2617 y(no)r(de)j(b)r(ecomes)h(the)f
(top)g(of)h(the)f(stac)n(k)h(ev)n(ery)e(time)h(one)h(of)g(its)0
2704 y(subtrees)33 b(has)g(b)r(een)g(completely)f(read.)56
b(After)33 b(reading)h(the)0 2791 y(en)n(tire)g(sequence)f(of)h(its)g
(c)n(hildren)f(with)h(their)g(allo)n(w)n(ed)h(sp)r(e-)0
2878 y(cializations,)27 b(a)e(candidate)f(sp)r(ecialization)j
Fi(a)d Fm(for)h(the)f(no)r(de)g(is)0 2966 y(discoun)n(ted)31
b(unless)h(the)f(asso)r(ciated)j(set)e(of)g(states)h(con)n(tains)0
3053 y(some)25 b(accept)h(state)h(in)e(the)g Fl(fsa)h
Fm(for)h Fi(R)1163 3061 y Ff(a)1200 3053 y Fm(.)0 3227
y(W)-6 b(e)17 b(no)n(w)h(describ)r(e)g(the)f Fl(pd)n(a)f
Fm(in)i(more)f(detail.)32 b(F)-6 b(or)17 b(eac)n(h)h
Fi(a)j Fh(2)h Fm(\006)1828 3195 y Fo(0)0 3314 y Fm(let)35
b Fi(A)178 3322 y Ff(a)249 3314 y Fm(b)r(e)g(the)f(standard)g
(non-deterministic)g Fl(fsa)g Fm(for)h Fi(R)1791 3322
y Ff(a)1829 3314 y Fm(,)0 3401 y(with)29 b(start)f(state)h
Fi(q)592 3370 y Fg(0)589 3415 y Ff(a)627 3401 y Fm(.)42
b(Let)29 b Fi(Q)e Fm(b)r(e)i(the)f(disjoin)n(t)h(union)f(of)h(the)0
3489 y(sets)22 b(of)h(states)f(of)h(the)e Fl(fsa)p Fm('s)i
Fi(A)908 3497 y Ff(a)945 3489 y Fm(.)33 b(The)22 b(stac)n(k)g(alphab)r
(et)g(of)h(the)0 3576 y Fl(pd)n(a)p Fm(,)28 b(denoted)g
Fi(V)17 b Fm(,)28 b(consists)h(of)g(sym)n(b)r(ols)f(of)g(the)g(form)g
(\()p Fi(a;)12 b(S)t Fm(\))0 3663 y(where)34 b Fi(a)f
Fh(2)h Fm(\006,)i(and)d Fi(S)38 b Fm(is)33 b(a)h(set)f(of)i(elemen)n
(ts)d Fh(h)p Fi(a)1514 3631 y Fo(0)1536 3663 y Fi(;)13
b(H)6 b Fh(i)33 b Fm(suc)n(h)0 3750 y(that)26 b Fi(a)208
3718 y Fo(0)252 3750 y Fh(2)d Fm(\006)381 3718 y Fo(0)404
3750 y Fm(,)j Fi(\026)p Fm(\()p Fi(a)568 3718 y Fo(0)590
3750 y Fm(\))c(=)g Fi(a)p Fm(,)27 b(and)f Fi(H)31 b Fm(is)c(a)g(subset)
f(of)h(the)f(states)0 3858 y Fi(Q)p Fm(.)65 b(Th)n(us,)39
b Fi(V)52 b Fm(is)37 b(a)f(subset)g(of)h(\006)24 b Fh(\002)g
Fm(2)1180 3826 y Fg(\006)1223 3805 y Fa(0)1246 3826 y
Fo(\002)p Fg(2)1324 3805 y Fb(Q)1378 3858 y Fm(.)65 b(The)36
b(transi-)0 3945 y(tions)27 b(w)n(ork)h(as)f(follo)n(ws.)41
b(When)27 b Fi(a)c Fh(2)h Fm(\006)j(is)h(read,)g(the)e(sym)n(b)r(ol)0
4032 y(\()p Fi(a;)13 b Fh(fh)p Fi(a)214 4001 y Fo(0)236
4032 y Fi(;)g Fh(f)p Fi(q)345 4001 y Fg(0)342 4051 y
Ff(a)376 4037 y Fa(0)403 4032 y Fh(gi)40 b(j)g Fi(a)613
4001 y Fo(0)674 4032 y Fh(2)g Fm(\006)820 4001 y Fo(0)843
4032 y Fi(;)13 b(a)39 b Fm(=)h Fi(\026)p Fm(\()p Fi(a)1174
4001 y Fo(0)1196 4032 y Fm(\))p Fh(g)p Fm(\))c(of)i Fi(V)53
b Fm(is)37 b(pushed)0 4120 y(on)31 b(the)g(stac)n(k.)51
b(When)30 b(a)h(sym)n(b)r(ol)h(\026)-39 b Fi(a)30 b Fh(2)1221
4101 y Fm(\026)1212 4120 y(\006)i(is)f(read,)i(the)e
Fl(pd)n(a)0 4207 y Fm(p)r(ops)k(the)f(curren)n(t)f(stac)n(k)i(sym)n(b)r
(ol.)60 b(If)34 b(the)g(input)g(string)h(is)0 4294 y(w)n(ell)27
b(balanced,)f(the)f(top)g(of)h(the)f(stac)n(k)h(m)n(ust)e(b)r(e)h(of)h
(the)f(form)0 4381 y(\()p Fi(a;)13 b(S)t Fm(\);)27 b(otherwise)g(the)f
(input)g(is)h(rejected.)37 b(Note)26 b(that,)h(since)0
4468 y(the)f(subtree)f(ro)r(oted)i(at)f Fi(a)g Fm(has)g(b)r(een)g
(completely)f(pro)r(cessed,)0 4555 y(w)n(e)j(no)n(w)h(kno)n(w)f(whic)n
(h)g(of)h(the)e(candidate)i(sp)r(ecializations)i(of)0
4643 y Fi(a)22 b Fm(are)h(acceptable:)34 b(they)21 b(are)i(the)g
Fi(a)1057 4611 y Fo(0)1101 4643 y Fm(suc)n(h)f(that)g
Fh(h)p Fi(a)1505 4611 y Fo(0)1527 4643 y Fi(;)13 b(H)6
b Fh(i)43 b(2)h Fi(S)0 4730 y Fm(and)33 b Fi(H)39 b Fm(con)n(tains)34
b(some)g(accepting)g(state)g(of)g Fi(A)1468 4742 y Ff(a)1502
4728 y Fa(0)1528 4730 y Fm(.)58 b(A)n(t)33 b(this)0 4817
y(p)r(oin)n(t)23 b(the)g(new)g(top)h(of)g(the)e(stac)n(k)i(sym)n(b)r
(ol,)f(sa)n(y)g(\()p Fi(b;)13 b(T)e Fm(\),)23 b(needs)0
4904 y(to)29 b(b)r(e)f(up)r(dated.)42 b(The)28 b(sym)n(b)r(ol)g(is)h(p)
r(opp)r(ed)e(and)h(replaced)h(at)0 4991 y(the)d(top)h(of)g(the)g(stac)n
(k)f(b)n(y)g(\()p Fi(b;)13 b(new)r Fm(\()p Fi(T)e Fm(\)\))26
b(where)h Fi(new)r Fm(\()p Fi(T)11 b Fm(\))26 b(con-)0
5078 y(tains,)g(for)g(eac)n(h)g Fh(h)p Fi(b)562 5047
y Fo(0)584 5078 y Fi(;)13 b(B)680 5047 y Fo(0)702 5078
y Fh(i)22 b(2)f Fi(T)36 b Fm(the)25 b(pair)g Fh(h)p Fi(b)1259
5047 y Fo(0)1282 5078 y Fi(;)13 b(new)r Fm(\()p Fi(B)1547
5047 y Fo(0)1569 5078 y Fm(\))p Fh(i)25 b Fm(where)0
5166 y Fi(new)r Fm(\()p Fi(B)231 5134 y Fo(0)253 5166
y Fm(\))30 b(con)n(tains)g(the)f(states)i Fi(q)1014 5134
y Fo(0)1066 5166 y Fm(suc)n(h)e(that)h(\()p Fi(q)s(;)13
b(a)1556 5134 y Fo(0)1578 5166 y Fi(;)g(q)1649 5134 y
Fo(0)1671 5166 y Fm(\))30 b(is)g(a)0 5253 y(transition)e(of)g(the)f
Fl(fsa)g Fi(A)780 5265 y Ff(b)807 5251 y Fa(0)860 5253
y Fm(for)h(some)f Fi(q)g Fh(2)d Fi(B)1371 5221 y Fo(0)1420
5253 y Fm(and)j(some)g(al-)0 5340 y(lo)n(w)n(ed)f(sp)r(ecialization)i
Fi(a)730 5308 y Fo(0)778 5340 y Fm(of)f Fi(a)e Fm(o)r(ccurring)h(in)g
Fi(S)t Fm(.)34 b(Finally)-6 b(,)27 b(the)2050 83 y Fl(pd)n(a)g
Fm(accepts)h(if)g(the)f(ro)r(ot)h(no)r(de)f(lab)r(eled)i
Fi(r)g Fm(has)f(at)f(least)i(one)2050 170 y(acceptable)i(sp)r
(ecialization)h Fi(r)2947 138 y Fo(0)2969 170 y Fm(.)49
b(This)30 b(information)h(is)g(a)n(v)l(ail-)2050 257
y(able)25 b(in)g(the)f(last)i(sym)n(b)r(ol)e(p)r(opp)r(ed)h(from)f(the)
h(stac)n(k)g(b)r(efore)h(it)2050 345 y(b)r(ecomes)f(empt)n(y)-6
b(.)2050 519 y(It)17 b(is)i(straigh)n(tforw)n(ard)h(to)e(c)n(hec)n(k)f
(that)h(the)f(ab)r(o)n(v)n(e)h Fl(pd)n(a)f Fm(accepts)2050
606 y Fh(L)p Fm(\()p Fi(d)p Fm(\).)1620 b Fd(2)2050 803
y Fj(Re\002ning)21 b(the)h(DTD)2050 895 y Fm(W)-6 b(e)27
b(\014nally)h(consider)h(an)f(approac)n(h)g(to)h(v)l(alidation)f
(orthogo-)2050 982 y(nal)g(to)h(the)f(ones)h(examined)f(so)h(far.)44
b(It)28 b(consists)i(of)f Fk(r)l(e\014ning)2050 1069
y Fm(the)19 b(giv)n(en)g(DTD)g(b)n(y)f(pro)n(viding)h(in)g(the)g(tags)h
(additional)h(infor-)2050 1156 y(mation)i(that)h(can)h(b)r(e)f(used)g
(for)h(v)l(alidation.)34 b(The)25 b(re\014nemen)n(t)2050
1243 y(is)34 b(formalized)g(b)n(y)e(a)i(sp)r(ecialization)i(of)e(the)f
(original)i(DTD.)2050 1330 y(More)26 b(precisely)-6 b(,)26
b(w)n(e)g(can)g(sho)n(w)h(the)e(follo)n(wing.)2133 1576
y Fl(Theorem)40 b Fm(5.2.)f Fk(:)h(F)-6 b(or)30 b(every)h(DTD)f
Fi(d)f Fk(over)i Fm(\006)f Fk(ther)l(e)i(ex-)2050 1663
y(ists)g(an)g(e)l(quivalent)h(sp)l(e)l(cialize)l(d)g(DTD)3257
1643 y Fm(\026)3244 1663 y Fi(d)c Fm(=)g(\(\006)p Fi(;)13
b Fm(\006)3576 1631 y Fo(0)3599 1663 y Fi(;)g(d)3673
1631 y Fo(0)3695 1663 y Fi(;)g(\026)p Fm(\))32 b Fk(of)2050
1750 y(size)c(quadr)l(atic)h(in)e Fi(d)g Fk(such)i(that)f
Fi(d)3065 1718 y Fo(0)3115 1750 y Fk(is)f(r)l(e)l(c)l(o)l(gnizable.)
2050 1996 y Fq(Pro)r(of:)58 b Fm(F)-6 b(or)38 b(eac)n(h)f
Fi(a)k Fh(2)g Fm(\006,)g(let)d Fi(A)3152 2004 y Ff(a)3226
1996 y Fm(b)r(e)g(a)f(standard)h(non-)2050 2083 y(deterministic)h
Fl(fsa)i Fm(for)g(the)e(regular)i(language)h Fi(R)3632
2091 y Ff(a)3710 2083 y Fm(sp)r(eci-)2050 2170 y(\014ed)36
b(for)i Fi(a)f Fm(b)n(y)f(the)h(DTD)f Fi(d)p Fm(.)69
b(The)37 b(idea)h(for)g(constructing)2050 2257 y(the)d(sp)r(ecialized)i
(DTD)2806 2237 y(\026)2792 2257 y Fi(d)e Fm(is)h(straigh)n(tforw)n
(ard:)56 b(k)n(eep)35 b(trac)n(k)2050 2344 y(in)k(the)h(tags)g(of)h
(the)e(c)n(hildren)g(of)i(a)f(no)r(de)f Fi(a)h Fm(of)g(the)f(state)2050
2432 y(of)j Fi(A)2211 2440 y Ff(a)2289 2432 y Fm(in)f(an)h(accepting)g
(computation)e(on)h(the)g(sequence)2050 2519 y(of)32
b(c)n(hildren)g(tags.)53 b(More)33 b(precisely)-6 b(,)34
b(let)e Fi(Q)f Fm(b)r(e)h(the)f(disjoin)n(t)2050 2606
y(union)25 b(of)i(the)f(sets)g(of)h(states)g(of)f(the)g
Fl(fsa)p Fm('s)h Fi(A)3417 2614 y Ff(a)3480 2606 y Fm(and)e(let)i(\006)
3796 2574 y Fo(0)3840 2606 y Fm(=)2050 2693 y(\006)22
b Fh(\002)g Fi(Q)p Fm(.)57 b(The)34 b(DTD)f Fi(d)2760
2661 y Fo(0)2815 2693 y Fm(asso)r(ciates)j(to)e(eac)n(h)f(sym)n(b)r(ol)
f(\()p Fi(a;)13 b(q)s Fm(\))2050 2780 y(in)23 b(\006)2192
2749 y Fo(0)2239 2780 y Fm(the)g(regular)i(language)g(consisting)g(of)g
(all)f(w)n(ords)h(of)f(the)2050 2867 y(form)34 b(\()p
Fi(a)2311 2875 y Fg(1)2345 2867 y Fi(;)13 b(q)2413 2875
y Fg(1)2448 2867 y Fm(\)\()p Fi(a)2549 2875 y Fg(2)2583
2867 y Fi(;)g(q)2651 2875 y Fg(2)2686 2867 y Fm(\))g
Fi(:)g(:)g(:)g Fm(\()p Fi(a)2902 2876 y Ff(k)2940 2867
y Fi(;)g(q)3008 2876 y Ff(k)3046 2867 y Fm(\))35 b(suc)n(h)f(that)g
Fi(a)3509 2875 y Fg(1)3543 2867 y Fi(a)3584 2875 y Fg(2)3632
2867 y Fi(:)13 b(:)g(:)g(a)3775 2876 y Ff(k)3849 2867
y Fh(2)2050 2955 y Fi(R)2108 2963 y Ff(a)2169 2955 y
Fm(and)23 b(\()p Fi(q)2380 2963 y Ff(i)p Fo(\000)p Fg(1)2485
2955 y Fi(;)14 b(a)2561 2963 y Ff(i)2587 2955 y Fi(;)f(q)2655
2963 y Ff(i)2681 2955 y Fm(\))24 b(are)g(v)l(alid)g(transitions)h(in)e
Fi(A)3569 2963 y Ff(a)3607 2955 y Fm(,)h(1)e Fh(\024)f
Fi(i)g Fh(\024)2050 3042 y Fi(k)r Fm(,)k(where)g Fi(q)2393
3050 y Fg(0)2453 3042 y Fm(is)g(the)g(start)g(state)g(and)g
Fi(q)3214 3051 y Ff(k)3277 3042 y Fm(an)g(accept)g(state)g(for)2050
3129 y Fi(A)2108 3137 y Ff(a)2145 3129 y Fm(.)46 b(Clearly)-6
b(,)31 b(the)e(sp)r(ecialized)i(DTD)3236 3109 y(\026)3223
3129 y Fi(d)e Fm(is)h(equiv)l(alen)n(t)e(to)i Fi(d)p
Fm(.)2050 3216 y(An)21 b Fl(fsa)h Fm(can)h(v)l(alidate)g(w)n
(ell-balanced)g(input)f(strings)h(wrt)f(the)2050 3303
y(DTD)j Fi(d)2288 3272 y Fo(0)2336 3303 y Fm(b)n(y)f(allo)n(wing)k
(only)e(the)f(follo)n(wing)j(transitions:)2139 3533 y(1.)38
b(\()p Fi(a;)13 b(q)s Fm(\)\()p Fi(a)2479 3541 y Fg(1)2513
3533 y Fi(;)g(q)2581 3541 y Fg(1)2616 3533 y Fm(\))20
b(where)h(\()p Fi(q)2947 3541 y Fg(0)2982 3533 y Fi(;)13
b(a)3057 3541 y Fg(1)3091 3533 y Fi(;)g(q)3159 3541 y
Fg(1)3194 3533 y Fm(\))21 b(is)f(a)h(transition)g(in)g
Fi(A)3863 3541 y Ff(a)2236 3620 y Fm(and)26 b Fi(q)2420
3628 y Fg(0)2480 3620 y Fm(is)g(the)g(start)g(state)g(of)g
Fi(A)3207 3628 y Ff(a)3245 3620 y Fm(;)2139 3765 y(2.)p
2236 3700 172 4 v 38 w(\()p Fi(a;)13 b(q)s Fm(\)\()p
Fi(b;)g(p)p Fm(\))23 b(where)h(\()p Fi(q)s(;)13 b(b;)g(p)p
Fm(\))23 b(is)h(a)g(transition)g(in)g(the)f Fl(fsa)2236
3852 y Fm(to)j(whic)n(h)g Fi(q)j Fm(b)r(elongs.)2139
3997 y(3.)p 2236 3932 V 38 w(\()p Fi(a;)13 b(q)s Fm(\))p
2443 3932 166 4 v 35 w(\()p Fi(b;)f(p)p Fm(\))35 b(where)g
Fi(q)i Fm(is)e(an)g(accepting)h(state)f(in)f(the)2236
4084 y Fl(fsa)26 b Fm(to)g(whic)n(h)g(it)f(b)r(elongs.)802
b Fd(2)2133 4330 y Fl(Example)41 b Fm(5.2.)e(:)61 b(Revisit)39
b(the)g(DTD)g(of)g(Example)g(4.7)2087 4414 y Fi(r)23
b Fh(!)e Fi(aa)2087 4506 y(a)g Fh(!)g Fi(a)2288 4474
y Fg(?)2453 4461 y Fm(whic)n(h)k(is)h(not)f(recognizable.)36
b(Ho)n(w)n(ev)n(er)25 b(the)g(fol-)2050 4695 y(lo)n(wing)g(DTD)2524
4602 y Fi(r)e Fh(!)e Fi(a)2721 4610 y Fg(1)2755 4602
y Fi(a)2796 4610 y Fg(2)2524 4694 y Fi(a)2565 4702 y
Fg(1)2620 4694 y Fh(!)h Fi(a)2760 4662 y Fg(?)2760 4707
y(1)2524 4787 y Fi(a)2565 4795 y Fg(2)2620 4787 y Fh(!)g
Fi(a)2760 4755 y Fg(?)2760 4800 y(2)2889 4695 y Fm(is)j(recognizable)h
(\(b)n(y)d(the)h(regular)2050 4877 y(expression)30 b
Fi(r)r(a)2502 4845 y Fo(\003)2502 4890 y Fg(1)2539 4877
y Fm(\026)-39 b Fi(a)2579 4845 y Fo(\003)2579 4890 y
Fg(1)2614 4877 y Fi(a)2655 4845 y Fo(\003)2655 4890 y
Fg(2)2692 4877 y Fm(\026)g Fi(a)2732 4845 y Fo(\003)2732
4890 y Fg(2)2771 4877 y Fm(\026)d Fi(r)r Fm(\))30 b(and)g(de\014nes)f
(a)i(similar)f(family)g(of)2050 4964 y(tree)25 b(do)r(cumen)n(ts.)2050
5161 y Fn(6.)99 b(CONCLUSIONS)2050 5253 y Fm(This)28
b(pap)r(er)g(pro)n(vides)g(a)h(\014rst)e(step)h(to)n(w)n(ards)h(the)f
(formal)g(in-)2050 5340 y(v)n(estigation)34 b(of)g(pro)r(cessing)h
(streaming)e(XML.)h(W)-6 b(e)33 b(fo)r(cused)p eop
%%Page: 12 12
12 11 bop 0 83 a Fm(on)26 b(the)f(problem)f(of)j(on-line)e(v)l
(alidation)h(of)h(streaming)e(XML)0 170 y(do)r(cumen)n(ts)f(with)h
(resp)r(ect)h(to)f(a)g(DTD,)g(under)f(memory)g(con-)0
257 y(strain)n(ts.)79 b(The)41 b(main)e(results)i(pro)n(vide)f
(conditions)h(under)0 345 y(whic)n(h)28 b(v)l(alidation)g(can)g(b)r(e)g
(done)f(in)h(a)g(single)h(pass)f(and)g(con-)0 432 y(stan)n(t)37
b(memory)-6 b(,)37 b(using)g(an)g Fl(fsa)p Fm(.)67 b(W)-6
b(e)37 b(also)h(considered)f(al-)0 519 y(ternativ)n(e)29
b(approac)n(hes)g(b)n(y)f(relaxing)h(the)f(constan)n(t)h(memory)0
606 y(requiremen)n(t)i(or)i(b)n(y)f(enric)n(hing)h(the)f(DTD)g(with)h
(additional)0 693 y(information)26 b(that)g(can)f(b)r(e)h(used)f(in)h
(v)l(alidation.)0 868 y(Sev)n(eral)i(questions)f(remain)h(op)r(en.)40
b(Mainly)-6 b(,)28 b(a)g(precise)h(c)n(har-)0 955 y(acterization)i(of)g
(recognizable)g(DTDs)e(is)i(not)e(y)n(et)g(a)n(v)l(ailable,)0
1042 y(except)d(in)g(the)g(fully)g(recursiv)n(e)g(case.)38
b(F)-6 b(or)26 b(the)g(general)h(case,)0 1129 y(w)n(e)g(conjecture)g
(that)f(\(i\))g(the)g(necessary)h(conditions)g(w)n(e)g(pro-)0
1216 y(vided)h(for)i(a)f(DTD)g(to)g(b)r(e)g(recognizable)h(are)g(also)g
(su\016cien)n(t,)0 1303 y(and)21 b(\(ii\))h(whenev)n(er)e(a)i(DTD)f
Fi(d)g Fm(is)h(recognizable)h(it)e(can)h(b)r(e)f(v)l(al-)0
1391 y(idated)28 b(b)n(y)e(the)h(standard)h Fl(fsa)f
Fi(A)1007 1400 y Ff(d)1070 1391 y Fm(augmen)n(ted)f(with)i(coun)n(t-)0
1478 y(ing)d(certain)g(patterns)f(mo)r(dulo)g(2,)i(as)f(discussed)g(in)
f(Example)0 1565 y(4.11.)0 1739 y(Another)e(in)n(teresting)h(op)r(en)f
(problem)g(concerns)h(c)n(haracteriz-)0 1826 y(ing)30
b(the)f Fk(sp)l(e)l(cialize)l(d)h Fm(DTDs)f(that)g(are)h(recognizable.)
47 b(It)29 b(can)0 1914 y(b)r(e)20 b(seen)h(that)f(the)f(conditions)i
(w)n(e)g(pro)n(vided)e(for)j(recognizable)0 2001 y(DTDs)36
b(no)g(longer)i(w)n(ork)e(when)g(sp)r(ecialization)j(is)e(allo)n(w)n
(ed.)0 2088 y(Indeed,)30 b(the)g(problem)f(seems)g(considerably)i
(harder)e(in)h(this)0 2175 y(case.)k(Note)23 b(that,)g(since)g(ev)n
(ery)f(recognizable)i(family)f(of)g(trees)0 2262 y(is)31
b(necessarily)h(de\014nable)f(b)n(y)f(a)h(sp)r(ecialized)h(DTD)f
(\(Lemma)0 2350 y(4.1\),)j(c)n(haracterizing)f(the)d(recognizable)j(sp)
r(ecialized)g(DTDs)0 2437 y(w)n(ould)39 b(essen)n(tially)h(close)g(the)
e(problem)g(of)h(understanding)0 2524 y(whic)n(h)26 b(families)h(of)f
(trees)g(can)g(b)r(e)g(v)l(alidated)f(b)n(y)g Fl(fsa)p
Fm(.)0 2698 y(Finally)-6 b(,)29 b(it)f(w)n(ould)h(b)r(e)e(useful)i(to)f
(exhibit)f(natural)i(classes)h(of)0 2785 y(DTDs)d(that)f(can)h(alw)n(a)
n(ys)g(b)r(e)g(v)l(alidated)g(b)n(y)e(an)i Fl(fsa)p Fm(,)g(b)n(y)f
(pro-)0 2873 y(viding)34 b(restricted)g(sp)r(eci\014cation)h(languages)
h(for)f(do)r(cumen)n(t)0 2960 y(structure)27 b(that)h(are)g(p)r(o)n(w)n
(erful)h(enough)e(for)i(a)f(wide)g(range)h(of)0 3047
y(applications)e(of)g(practical)f(in)n(terest.)0 3221
y(Bey)n(ond)33 b(the)g(immediate)f(fo)r(cus)i(on)f(v)l(alidation,)j(w)n
(e)e(exp)r(ect)0 3308 y(that)e(the)g(tec)n(hniques)g(dev)n(elop)r(ed)g
(here)h(will)h(also)f(b)r(e)g(useful)0 3396 y(in)27 b(in)n(v)n
(estigating)h(the)e(more)g(complex)g(problem)g(of)i(querying)0
3483 y(streaming)e(XML)f(do)r(cumen)n(ts.)0 3711 y Fn(Ackno)o
(wledgment)0 3802 y Fm(W)-6 b(e)26 b(wish)h(to)g(thank)e(Bertram)i
(Ludaesc)n(her)f(and)g(Y)-6 b(annis)26 b(P)n(a-)0 3889
y(pak)n(onstan)n(tinou)k(for)i(p)r(oin)n(ting)f(to)g(us)g(the)g
(problem)f(of)i(pro-)0 3976 y(cessing)g(streaming)g(XML.)f(W)-6
b(e)31 b(are)h(also)g(grateful)h(to)e(Serge)0 4064 y(Abiteb)r(oul)c
(and)h(T)-6 b(o)n(v)l(a)27 b(Milo)i(for)f(in)n(teresting)g(discussions)
h(on)0 4151 y(the)c(topic.)0 4379 y Fn(7.)99 b(REFERENCES)38
4466 y Fm([1])39 b(A.V.)25 b(Aho)g(and)h(J.D.)g(Ullman.)f(T)-6
b(ranslations)28 b(on)d(a)157 4553 y(con)n(text)g(free)h(grammar.)g
Fk(Information)h(and)h(Contr)l(ol)p Fm(,)157 4640 y(19\(19\):439{475,)i
(1971.)38 4816 y([2])39 b(C.)26 b(Beeri)h(and)e(T.)i(Milo.)g(Sc)n
(hemas)e(for)h(in)n(tegration)h(and)157 4903 y(translation)g(of)f
(structured)f(and)g(semi-structured)157 4990 y(data.)h(In)f
Fk(Int'l.)h(Conf.)h(on)h(Datab)l(ase)h(The)l(ory)p Fm(,)e(pages)157
5077 y(296{313,)i(1999.)38 5253 y([3])39 b(S.)25 b(Babu)h(and)f(J.)i
(Widom.)e(Con)n(tin)n(uous)h(Queries)g(o)n(v)n(er)157
5340 y(Data)g(Streams.)f(In)g Fk(Sigmo)l(d)j(R)l(e)l(c)l(or)l(d)p
Fm(,)f(Sept)e(2001.)2088 83 y([4])38 b(A.)26 b(Bruggemann-Klein)f(and)g
(D.)h(W)-6 b(o)r(o)r(d.)2206 170 y(One-unam)n(biguous)24
b(regular)j(languages.)g(Information)2206 257 y(and)f(Computation,)f
(142\(2\):182{206,)31 b(Ma)n(y)26 b(1998.)2088 395 y([5])38
b(A.)26 b(Bruggemann-Klein,)f(M.)i(Murata,)f(and)g(D.)f(W)-6
b(o)r(o)r(d.)2206 482 y(Regular)27 b(tree)e(and)h(regular)g(hedge)g
(languages)h(o)n(v)n(er)2206 570 y(non-rank)n(ed)e(alphab)r(ets.)h
(Hong)g(Kong)g(Univ.)f(of)2206 657 y(Science)h(and)g(T)-6
b(ec)n(hnology)26 b(Computer)f(Science)g(Cen)n(ter)2206
744 y(Researc)n(h)h(Rep)r(ort)g(HKUST-TCSC-2001-05,)h(2001.)2206
831 y(Av)l(ailable)g(at)2206 918 y(h)n
(ttp://www.cs.ust.hk/tcsc/RR/2001-05.ps.gz.)2088 1056
y([6])38 b(J.)27 b(Chen)e(et)h(al.)h(NiagaraCQ:)g(A)f(Scalable)g(Con)n
(tin)n(uous)2206 1143 y(Query)f(System)f(for)j(In)n(ternet)d
(Databases.)j(In)e Fk(Pr)l(o)l(c.)2206 1230 y(A)n(CM)j(SIGMOD)f(Conf.)p
Fm(,)e(Dallas,)i(TX,)f(June)g(2000.)2088 1368 y([7])38
b(S.)26 b(Cluet,)g(C.)h(Delob)r(el,)g(J.)f(Simeon,)f(and)g(K.)h(Smaga.)
2206 1455 y(Y)-6 b(our)25 b(mediators)h(need)f(data)h(con)n(v)n
(ersion!)35 b(In)25 b Fk(Pr)l(o)l(c.)2206 1543 y(A)n(CM)j(SIGMOD)f
(Conf.)p Fm(,)e(pages)h(177{188,)j(1998.)2088 1680 y([8])38
b(J.)27 b(Engelfriet)g(and)e(H.)h(J.)g(Ho)r(ogeb)r(o)r(om.)h(T)-6
b(ree-w)n(alking)2206 1768 y(p)r(ebble)26 b(automata.)g(In)f(J.)h(Karh)
n(um)e(ki,)i(H.)f(Maurer,)i(G.)2206 1855 y(P)n(aun)f(and)f(G.)h(Rozen)n
(b)r(erg,)g(eds.,)h Fk(Jewels)h(ar)l(e)g(for)l(ever,)2206
1942 y(c)l(ontributions)i(to)e(The)l(or)l(etic)l(al)h(Computer)g
(Scienc)l(e)f(in)2206 2029 y(honor)h(of)e(A)n(rto)i(Salomaa)p
Fm(,)d(pp.)f(72-83,)2206 2116 y(Springer-V)-6 b(erlag,)26
b(1999.)2088 2254 y([9])38 b(J.)27 b(Engelfriet,)g(H.)f(J.)g(Ho)r(ogeb)
r(o)r(om)g(and)f(J-P)-6 b(.)26 b(v)l(an)f(Best.)2206
2341 y(T)-6 b(rips)26 b(on)g(trees.)h Fk(A)l(cta)h(Cyb)l(ernetic)l(a)p
Fm(,)g(14,)f(pp.)e(51-64,)2206 2429 y(1999.)2050 2566
y([10])38 b(S.)26 b(Ginsburg.)g(The)g(Mathematical)h(Theory)f(of)2206
2654 y(Con)n(text-F)-6 b(ree)26 b(Languages.)h(McGra)n(w-Hill,)g(1966.)
2050 2791 y([11])38 b(J.)27 b(E.)f(Hop)r(croft)g(and)g(J.)g(D.)g
(Ullman.)f(In)n(tro)r(duction)g(to)2206 2879 y(Automata)g(Theory)-6
b(,)26 b(Languages,)h(and)f(Computation.)2206 2966 y(Addison-W)-6
b(esley)g(,)25 b(1979.)2050 3104 y([12])38 b(Z.)26 b(Iv)n(es,)g(Alon)f
(Levy)g(and)h(D.)f(W)-6 b(eld.)26 b(E\016cien)n(t)2206
3191 y(Ev)l(aluation)h(of)f(Regular)g(P)n(ath)g(Expressions)g(on)2206
3278 y(Streaming)g(XML)f(Data.)h(T)-6 b(ec)n(hnical)27
b(Rep)r(ort,)2206 3365 y(Univ)n(ersit)n(y)e(of)i(W)-6
b(ashington,)26 b(2000.)2050 3503 y([13])38 b(Z.)26 b(Iv)n(es,)g(Alon)f
(Levy)g(and)h(D.)f(W)-6 b(eld.)26 b(In)n(tegrating)2206
3590 y(Net)n(w)n(ork-Bound)f(XML)h(Data.)g(Data)g(Engineering)2206
3677 y(Bulletin,)h(24\(2\),)g(2001.)2050 3815 y([14])38
b(Ling)26 b(Liu)g(and)f(Calton)i(Pu)f(and)f(W)-6 b(ei)26
b(T)-6 b(ang)26 b(and)f(W)-6 b(ei)2206 3902 y(Han.)26
b(Conquer:)34 b(A)26 b(con)n(tin)n(ual)f(query)g(system)g(for)2206
3990 y(up)r(date)h(monitoring)f(in)h(the)f(WWW.)h(In)f
Fk(International)2206 4077 y(Journal)k(of)e(Computer)i(Systems,)f
(Scienc)l(e)h(and)2206 4164 y(Engine)l(ering)p Fm(,)e(2000.)2050
4302 y([15])38 b(F.)26 b(Nev)n(en)f(and)g(T.)i(Sc)n(h)n(w)n(en)n(tic)n
(k.)e(On)g(the)g(P)n(o)n(w)n(er)h(of)2206 4389 y(T)-6
b(ree-W)g(alking)26 b(Automata.)f(ICALP)h(2000:)36 b(547-560.)2050
4527 y([16])i(Benjamin)26 b(Nguy)n(en,)f(Serge)h(Abiteb)r(oul,)g(Gr)n
(\023)-36 b(egory)2206 4614 y(Cob)r(ena,)27 b(Mihai)g(Preda.)f
(Monitoring)h(XML)f(data)g(on)2206 4701 y(the)g(W)-6
b(eb.)25 b(In)g Fk(Pr)l(o)l(c.)j(A)n(CM)f(SIGMOD)g(Conf.)p
Fm(,)2206 4788 y(pp.437-448,)h(2001.)2050 4926 y([17])38
b(Y.)26 b(P)n(apak)n(onstan)n(tinou)g(and)f(V.)g(Vian)n(u.)h(DTD)2206
5013 y(inference)h(for)f(views)h(of)f(XML)g(data.)g(In)f
Fk(Pr)l(o)l(c.)j(A)n(CM)2206 5100 y(PODS)p Fm(,)e(pp.)g(35-46,)h(2000.)
2050 5238 y([18])38 b(G.Rozen)n(b)r(erg)27 b(and)e(A.)h(Salomaa.)g
(Handb)r(o)r(ok)f(of)2206 5325 y(F)-6 b(ormal)26 b(Language,)h(v)n(ol.)
f(3.)g(Springer)g(V)-6 b(erlag,)26 b(1997.)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF


