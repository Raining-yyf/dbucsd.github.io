---
layout: post
title:  "Query Optimization Meets CNNs"
date:   2019-06-06 20:09:38 -0700
author: Supun Nakandala
---

This post is regarding my recent paper titled [Incremental and Approximate Inference for Faster Occlusion-based Deep CNN Explanations](https://adalabucsd.github.io/krypton.html) which got accepted to [SIGMOD 2019 Conference](https://sigmod2019.org/). This is my first tier one accepted paper and I am humble to say that it was selected as one of the honorable mentions for best paper award. The paper focuses on applying database inspired optimizations to accelerate a class of deep convolutional neural network (CNN) workload called occlusion experiments. The award committee described the topic as “hot and of growing importance”, and were impressed by the novelty and innovation on transfer of database knowledge to — seemingly — unrelated domains.

As CNNs are getting widespread adoption, one of the main concerns is the explainability of CNN predictions. This is a very important aspect in critical applications such as in healthcare. How to explain CNN predictions is still an active research field. However, in the practical literature we found occlusion-based explanation (OBE) is a widely used approach especially by domain experts.

OBE is a very simple and intuitive process. You select a black or gray patch and cover the input image and see what happens to the predicted probability. Then you systematically move this patch over the image and at each position observe what happens to the predicted probability. From this you can generate a heatmap for the variation in the predicted probability and thereby get an intuition on the CNN prediction process. Animation below depicts how OBE can be used to explain why a CNN is predicting "has pneumonia" for a chest X-Ray image (source: http://blog.qure.ai).
<div align="center" markdown="1">
![Occlusion Experiment](http://blog.qure.ai/assets/images/visualisation/occlusion.gif)
</div>
However, OBE is highly time consuming. CNN inference is already compute intensive and OBE just amplifies it by creating possibly hundreds or thousands of occluded instances of the original image. Thus OBE can take from few seconds on GPUs to up to few minutes on CPU only systems. This can hinder the adoption of this technique in interactive and mobile use cases.
